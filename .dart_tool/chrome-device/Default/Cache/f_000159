define(['dart_sdk', 'packages/image/src/internal/bit_operators.dart', 'packages/image/src/image.dart', 'packages/image/src/exif_data.dart', 'packages/image/src/color.dart', 'packages/image/src/image_exception.dart', 'packages/image/src/formats/jpeg/jpeg_frame.dart', 'packages/image/src/formats/jpeg/_component_data.dart', 'packages/image/src/util/input_buffer.dart', 'packages/image/src/formats/jpeg/jpeg_info.dart', 'packages/image/src/formats/jpeg/jpeg_jfif.dart', 'packages/image/src/formats/jpeg/jpeg_adobe.dart', 'packages/image/src/formats/jpeg/jpeg.dart', 'packages/image/src/formats/jpeg/jpeg_component.dart', 'packages/image/src/formats/jpeg/jpeg_scan.dart'], (function load__packages__image__src__formats__jpeg___jpeg_quantize_html_dart(dart_sdk, packages__image__src__internal__bit_operators$46dart, packages__image__src__image$46dart, packages__image__src__exif_data$46dart, packages__image__src__color$46dart, packages__image__src__image_exception$46dart, packages__image__src__formats__jpeg__jpeg_frame$46dart, packages__image__src__formats__jpeg___component_data$46dart, packages__image__src__util__input_buffer$46dart, packages__image__src__formats__jpeg__jpeg_info$46dart, packages__image__src__formats__jpeg__jpeg_jfif$46dart, packages__image__src__formats__jpeg__jpeg_adobe$46dart, packages__image__src__formats__jpeg__jpeg$46dart, packages__image__src__formats__jpeg__jpeg_component$46dart, packages__image__src__formats__jpeg__jpeg_scan$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const bit_operators = packages__image__src__internal__bit_operators$46dart.src__internal__bit_operators;
  const image$ = packages__image__src__image$46dart.src__image;
  const exif_data = packages__image__src__exif_data$46dart.src__exif_data;
  const color = packages__image__src__color$46dart.src__color;
  const image_exception = packages__image__src__image_exception$46dart.src__image_exception;
  const jpeg_frame = packages__image__src__formats__jpeg__jpeg_frame$46dart.src__formats__jpeg__jpeg_frame;
  const _component_data = packages__image__src__formats__jpeg___component_data$46dart.src__formats__jpeg___component_data;
  const input_buffer = packages__image__src__util__input_buffer$46dart.src__util__input_buffer;
  const jpeg_info = packages__image__src__formats__jpeg__jpeg_info$46dart.src__formats__jpeg__jpeg_info;
  const jpeg_jfif = packages__image__src__formats__jpeg__jpeg_jfif$46dart.src__formats__jpeg__jpeg_jfif;
  const jpeg_adobe = packages__image__src__formats__jpeg__jpeg_adobe$46dart.src__formats__jpeg__jpeg_adobe;
  const jpeg = packages__image__src__formats__jpeg__jpeg$46dart.src__formats__jpeg__jpeg;
  const jpeg_component = packages__image__src__formats__jpeg__jpeg_component$46dart.src__formats__jpeg__jpeg_component;
  const jpeg_scan = packages__image__src__formats__jpeg__jpeg_scan$46dart.src__formats__jpeg__jpeg_scan;
  var _jpeg_quantize_html = Object.create(dart.library);
  var jpeg_data = Object.create(dart.library);
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $rightShift = dartx['>>'];
  var $toInt = dartx.toInt;
  var $length = dartx.length;
  var $clear = dartx.clear;
  var $add = dartx.add;
  var $toRadixString = dartx.toRadixString;
  var $sublist = dartx.sublist;
  var $containsKey = dartx.containsKey;
  var $removeLast = dartx.removeLast;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    Int16ListN: () => (T.Int16ListN = dart.constFn(dart.nullable(typed_data.Int16List)))(),
    ListOfInt16ListN: () => (T.ListOfInt16ListN = dart.constFn(core.List$(T.Int16ListN())))(),
    JpegFrameN: () => (T.JpegFrameN = dart.constFn(dart.nullable(jpeg_frame.JpegFrame)))(),
    JSArrayOfJpegFrameN: () => (T.JSArrayOfJpegFrameN = dart.constFn(_interceptors.JSArray$(T.JpegFrameN())))(),
    ListN: () => (T.ListN = dart.constFn(dart.nullable(core.List)))(),
    JSArrayOfListN: () => (T.JSArrayOfListN = dart.constFn(_interceptors.JSArray$(T.ListN())))(),
    JSArrayOfComponentData: () => (T.JSArrayOfComponentData = dart.constFn(_interceptors.JSArray$(_component_data.ComponentData)))(),
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))(),
    JSArrayOfUint8List: () => (T.JSArrayOfUint8List = dart.constFn(_interceptors.JSArray$(typed_data.Uint8List)))(),
    ListOfJpegComponent: () => (T.ListOfJpegComponent = dart.constFn(core.List$(jpeg_component.JpegComponent)))(),
    intToJpegComponent: () => (T.intToJpegComponent = dart.constFn(dart.fnType(jpeg_component.JpegComponent, [core.int])))(),
    JSArrayOf_JpegHuffman: () => (T.JSArrayOf_JpegHuffman = dart.constFn(_interceptors.JSArray$(jpeg_data._JpegHuffman)))(),
    Uint8ListN: () => (T.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    ListOfUint8ListN: () => (T.ListOfUint8ListN = dart.constFn(core.List$(T.Uint8ListN())))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList([0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8], T.intL());
    },
    get C1() {
      return C[1] = dart.constList([-179, -178, -177, -175, -174, -172, -171, -170, -168, -167, -165, -164, -163, -161, -160, -158, -157, -156, -154, -153, -151, -150, -149, -147, -146, -144, -143, -142, -140, -139, -137, -136, -135, -133, -132, -130, -129, -128, -126, -125, -123, -122, -121, -119, -118, -116, -115, -114, -112, -111, -109, -108, -107, -105, -104, -102, -101, -100, -98, -97, -95, -94, -93, -91, -90, -88, -87, -86, -84, -83, -81, -80, -79, -77, -76, -74, -73, -72, -70, -69, -67, -66, -64, -63, -62, -60, -59, -57, -56, -55, -53, -52, -50, -49, -48, -46, -45, -43, -42, -41, -39, -38, -36, -35, -34, -32, -31, -29, -28, -27, -25, -24, -22, -21, -20, -18, -17, -15, -14, -13, -11, -10, -8, -7, -6, -4, -3, -1, 0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 109, 111, 112, 114, 115, 116, 118, 119, 121, 122, 123, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 153, 154, 156, 157, 158, 160, 161, 163, 164, 165, 167, 168, 170, 171, 172, 174, 175, 177, 178], T.intL());
    },
    get C2() {
      return C[2] = dart.constList([5990656, 5943854, 5897052, 5850250, 5803448, 5756646, 5709844, 5663042, 5616240, 5569438, 5522636, 5475834, 5429032, 5382230, 5335428, 5288626, 5241824, 5195022, 5148220, 5101418, 5054616, 5007814, 4961012, 4914210, 4867408, 4820606, 4773804, 4727002, 4680200, 4633398, 4586596, 4539794, 4492992, 4446190, 4399388, 4352586, 4305784, 4258982, 4212180, 4165378, 4118576, 4071774, 4024972, 3978170, 3931368, 3884566, 3837764, 3790962, 3744160, 3697358, 3650556, 3603754, 3556952, 3510150, 3463348, 3416546, 3369744, 3322942, 3276140, 3229338, 3182536, 3135734, 3088932, 3042130, 2995328, 2948526, 2901724, 2854922, 2808120, 2761318, 2714516, 2667714, 2620912, 2574110, 2527308, 2480506, 2433704, 2386902, 2340100, 2293298, 2246496, 2199694, 2152892, 2106090, 2059288, 2012486, 1965684, 1918882, 1872080, 1825278, 1778476, 1731674, 1684872, 1638070, 1591268, 1544466, 1497664, 1450862, 1404060, 1357258, 1310456, 1263654, 1216852, 1170050, 1123248, 1076446, 1029644, 982842, 936040, 889238, 842436, 795634, 748832, 702030, 655228, 608426, 561624, 514822, 468020, 421218, 374416, 327614, 280812, 234010, 187208, 140406, 93604, 46802, 0, -46802, -93604, -140406, -187208, -234010, -280812, -327614, -374416, -421218, -468020, -514822, -561624, -608426, -655228, -702030, -748832, -795634, -842436, -889238, -936040, -982842, -1029644, -1076446, -1123248, -1170050, -1216852, -1263654, -1310456, -1357258, -1404060, -1450862, -1497664, -1544466, -1591268, -1638070, -1684872, -1731674, -1778476, -1825278, -1872080, -1918882, -1965684, -2012486, -2059288, -2106090, -2152892, -2199694, -2246496, -2293298, -2340100, -2386902, -2433704, -2480506, -2527308, -2574110, -2620912, -2667714, -2714516, -2761318, -2808120, -2854922, -2901724, -2948526, -2995328, -3042130, -3088932, -3135734, -3182536, -3229338, -3276140, -3322942, -3369744, -3416546, -3463348, -3510150, -3556952, -3603754, -3650556, -3697358, -3744160, -3790962, -3837764, -3884566, -3931368, -3978170, -4024972, -4071774, -4118576, -4165378, -4212180, -4258982, -4305784, -4352586, -4399388, -4446190, -4492992, -4539794, -4586596, -4633398, -4680200, -4727002, -4773804, -4820606, -4867408, -4914210, -4961012, -5007814, -5054616, -5101418, -5148220, -5195022, -5241824, -5288626, -5335428, -5382230, -5429032, -5475834, -5522636, -5569438, -5616240, -5663042, -5709844, -5756646, -5803448, -5850250, -5897052, -5943854], T.intL());
    },
    get C3() {
      return C[3] = dart.constList([2919680, 2897126, 2874572, 2852018, 2829464, 2806910, 2784356, 2761802, 2739248, 2716694, 2694140, 2671586, 2649032, 2626478, 2603924, 2581370, 2558816, 2536262, 2513708, 2491154, 2468600, 2446046, 2423492, 2400938, 2378384, 2355830, 2333276, 2310722, 2288168, 2265614, 2243060, 2220506, 2197952, 2175398, 2152844, 2130290, 2107736, 2085182, 2062628, 2040074, 2017520, 1994966, 1972412, 1949858, 1927304, 1904750, 1882196, 1859642, 1837088, 1814534, 1791980, 1769426, 1746872, 1724318, 1701764, 1679210, 1656656, 1634102, 1611548, 1588994, 1566440, 1543886, 1521332, 1498778, 1476224, 1453670, 1431116, 1408562, 1386008, 1363454, 1340900, 1318346, 1295792, 1273238, 1250684, 1228130, 1205576, 1183022, 1160468, 1137914, 1115360, 1092806, 1070252, 1047698, 1025144, 1002590, 980036, 957482, 934928, 912374, 889820, 867266, 844712, 822158, 799604, 777050, 754496, 731942, 709388, 686834, 664280, 641726, 619172, 596618, 574064, 551510, 528956, 506402, 483848, 461294, 438740, 416186, 393632, 371078, 348524, 325970, 303416, 280862, 258308, 235754, 213200, 190646, 168092, 145538, 122984, 100430, 77876, 55322, 32768, 10214, -12340, -34894, -57448, -80002, -102556, -125110, -147664, -170218, -192772, -215326, -237880, -260434, -282988, -305542, -328096, -350650, -373204, -395758, -418312, -440866, -463420, -485974, -508528, -531082, -553636, -576190, -598744, -621298, -643852, -666406, -688960, -711514, -734068, -756622, -779176, -801730, -824284, -846838, -869392, -891946, -914500, -937054, -959608, -982162, -1004716, -1027270, -1049824, -1072378, -1094932, -1117486, -1140040, -1162594, -1185148, -1207702, -1230256, -1252810, -1275364, -1297918, -1320472, -1343026, -1365580, -1388134, -1410688, -1433242, -1455796, -1478350, -1500904, -1523458, -1546012, -1568566, -1591120, -1613674, -1636228, -1658782, -1681336, -1703890, -1726444, -1748998, -1771552, -1794106, -1816660, -1839214, -1861768, -1884322, -1906876, -1929430, -1951984, -1974538, -1997092, -2019646, -2042200, -2064754, -2087308, -2109862, -2132416, -2154970, -2177524, -2200078, -2222632, -2245186, -2267740, -2290294, -2312848, -2335402, -2357956, -2380510, -2403064, -2425618, -2448172, -2470726, -2493280, -2515834, -2538388, -2560942, -2583496, -2606050, -2628604, -2651158, -2673712, -2696266, -2718820, -2741374, -2763928, -2786482, -2809036, -2831590], T.intL());
    },
    get C4() {
      return C[4] = dart.constList([-227, -225, -223, -222, -220, -218, -216, -214, -213, -211, -209, -207, -206, -204, -202, -200, -198, -197, -195, -193, -191, -190, -188, -186, -184, -183, -181, -179, -177, -175, -174, -172, -170, -168, -167, -165, -163, -161, -159, -158, -156, -154, -152, -151, -149, -147, -145, -144, -142, -140, -138, -136, -135, -133, -131, -129, -128, -126, -124, -122, -120, -119, -117, -115, -113, -112, -110, -108, -106, -105, -103, -101, -99, -97, -96, -94, -92, -90, -89, -87, -85, -83, -82, -80, -78, -76, -74, -73, -71, -69, -67, -66, -64, -62, -60, -58, -57, -55, -53, -51, -50, -48, -46, -44, -43, -41, -39, -37, -35, -34, -32, -30, -28, -27, -25, -23, -21, -19, -18, -16, -14, -12, -11, -9, -7, -5, -4, -2, 0, 2, 4, 5, 7, 9, 11, 12, 14, 16, 18, 19, 21, 23, 25, 27, 28, 30, 32, 34, 35, 37, 39, 41, 43, 44, 46, 48, 50, 51, 53, 55, 57, 58, 60, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 80, 82, 83, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 103, 105, 106, 108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 126, 128, 129, 131, 133, 135, 136, 138, 140, 142, 144, 145, 147, 149, 151, 152, 154, 156, 158, 159, 161, 163, 165, 167, 168, 170, 172, 174, 175, 177, 179, 181, 183, 184, 186, 188, 190, 191, 193, 195, 197, 198, 200, 202, 204, 206, 207, 209, 211, 213, 214, 216, 218, 220, 222, 223, 225], T.intL());
    }
  }, false);
  var C = Array(5).fill(void 0);
  var I = [
    "file:///C:/Users/shara/Flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.2/lib/src/formats/jpeg/_jpeg_quantize_html.dart",
    "file:///C:/Users/shara/Flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.2/lib/src/formats/jpeg/jpeg_data.dart",
    "package:image/src/formats/jpeg/jpeg_data.dart"
  ];
  _jpeg_quantize_html._clamp8 = function _clamp8(i) {
    if (i == null) dart.nullFailed(I[0], 11, 17, "i");
    return dart.notNull(i) < 0 ? 0 : dart.notNull(i) > 255 ? 255 : i;
  };
  _jpeg_quantize_html.quantizeAndInverse = function quantizeAndInverse(quantizationTable, coefBlock, dataOut, dataIn) {
    if (quantizationTable == null) dart.nullFailed(I[0], 27, 35, "quantizationTable");
    if (coefBlock == null) dart.nullFailed(I[0], 27, 64, "coefBlock");
    if (dataOut == null) dart.nullFailed(I[0], 28, 15, "dataOut");
    if (dataIn == null) dart.nullFailed(I[0], 28, 34, "dataIn");
    let p = dataIn;
    if (_jpeg_quantize_html._dctClip == null) {
      _jpeg_quantize_html._dctClip = _native_typed_data.NativeUint8List.new(768);
      let i = null;
      for (let t0 = i = -256; dart.notNull(i) < 0; i = dart.notNull(i) + 1) {
        dart.nullCheck(_jpeg_quantize_html._dctClip)[$_set](256 + dart.notNull(i), 0);
      }
      for (let t1 = i = 0; dart.notNull(i) < 256; i = dart.notNull(i) + 1) {
        dart.nullCheck(_jpeg_quantize_html._dctClip)[$_set](256 + dart.notNull(i), i);
      }
      for (let t2 = i = 256; dart.notNull(i) < 512; i = dart.notNull(i) + 1) {
        dart.nullCheck(_jpeg_quantize_html._dctClip)[$_set](256 + dart.notNull(i), 255);
      }
    }
    for (let i = 0; i < 64; i = i + 1) {
      p[$_set](i, dart.notNull(coefBlock[$_get](i)) * dart.notNull(quantizationTable[$_get](i)));
    }
    let row = 0;
    for (let i = 0; i < 8; i = i + 1, row = row + 8) {
      if (p[$_get](1 + row) === 0 && p[$_get](2 + row) === 0 && p[$_get](3 + row) === 0 && p[$_get](4 + row) === 0 && p[$_get](5 + row) === 0 && p[$_get](6 + row) === 0 && p[$_get](7 + row) === 0) {
        let t = bit_operators.shiftR(5793 * dart.notNull(p[$_get](0 + row)) + 512, 10);
        p[$_set](row + 0, t);
        p[$_set](row + 1, t);
        p[$_set](row + 2, t);
        p[$_set](row + 3, t);
        p[$_set](row + 4, t);
        p[$_set](row + 5, t);
        p[$_set](row + 6, t);
        p[$_set](row + 7, t);
        continue;
      }
      let v0 = bit_operators.shiftR(5793 * dart.notNull(p[$_get](0 + row)) + 128, 8);
      let v1 = bit_operators.shiftR(5793 * dart.notNull(p[$_get](4 + row)) + 128, 8);
      let v2 = p[$_get](2 + row);
      let v3 = p[$_get](6 + row);
      let v4 = bit_operators.shiftR(2896 * (dart.notNull(p[$_get](1 + row)) - dart.notNull(p[$_get](7 + row))) + 128, 8);
      let v7 = bit_operators.shiftR(2896 * (dart.notNull(p[$_get](1 + row)) + dart.notNull(p[$_get](7 + row))) + 128, 8);
      let v5 = bit_operators.shiftL(p[$_get](3 + row), 4);
      let v6 = bit_operators.shiftL(p[$_get](5 + row), 4);
      let t = bit_operators.shiftR(dart.notNull(v0) - dart.notNull(v1) + 1, 1);
      v0 = bit_operators.shiftR(dart.notNull(v0) + dart.notNull(v1) + 1, 1);
      v1 = t;
      t = bit_operators.shiftR(dart.notNull(v2) * 3784 + dart.notNull(v3) * 1567 + 128, 8);
      v2 = bit_operators.shiftR(dart.notNull(v2) * 1567 - dart.notNull(v3) * 3784 + 128, 8);
      v3 = t;
      t = bit_operators.shiftR(dart.notNull(v4) - dart.notNull(v6) + 1, 1);
      v4 = bit_operators.shiftR(dart.notNull(v4) + dart.notNull(v6) + 1, 1);
      v6 = t;
      t = bit_operators.shiftR(dart.notNull(v7) + dart.notNull(v5) + 1, 1);
      v5 = bit_operators.shiftR(dart.notNull(v7) - dart.notNull(v5) + 1, 1);
      v7 = t;
      t = bit_operators.shiftR(dart.notNull(v0) - dart.notNull(v3) + 1, 1);
      v0 = bit_operators.shiftR(dart.notNull(v0) + dart.notNull(v3) + 1, 1);
      v3 = t;
      t = bit_operators.shiftR(dart.notNull(v1) - dart.notNull(v2) + 1, 1);
      v1 = bit_operators.shiftR(dart.notNull(v1) + dart.notNull(v2) + 1, 1);
      v2 = t;
      t = bit_operators.shiftR(dart.notNull(v4) * 2276 + dart.notNull(v7) * 3406 + 2048, 12);
      v4 = bit_operators.shiftR(dart.notNull(v4) * 3406 - dart.notNull(v7) * 2276 + 2048, 12);
      v7 = t;
      t = bit_operators.shiftR(dart.notNull(v5) * 799 + dart.notNull(v6) * 4017 + 2048, 12);
      v5 = bit_operators.shiftR(dart.notNull(v5) * 4017 - dart.notNull(v6) * 799 + 2048, 12);
      v6 = t;
      p[$_set](0 + row, dart.notNull(v0) + dart.notNull(v7));
      p[$_set](7 + row, dart.notNull(v0) - dart.notNull(v7));
      p[$_set](1 + row, dart.notNull(v1) + dart.notNull(v6));
      p[$_set](6 + row, dart.notNull(v1) - dart.notNull(v6));
      p[$_set](2 + row, dart.notNull(v2) + dart.notNull(v5));
      p[$_set](5 + row, dart.notNull(v2) - dart.notNull(v5));
      p[$_set](3 + row, dart.notNull(v3) + dart.notNull(v4));
      p[$_set](4 + row, dart.notNull(v3) - dart.notNull(v4));
    }
    for (let i = 0; i < 8; i = i + 1) {
      let col = i;
      if (p[$_get](1 * 8 + col) === 0 && p[$_get](2 * 8 + col) === 0 && p[$_get](3 * 8 + col) === 0 && p[$_get](4 * 8 + col) === 0 && p[$_get](5 * 8 + col) === 0 && p[$_get](6 * 8 + col) === 0 && p[$_get](7 * 8 + col) === 0) {
        let t = bit_operators.shiftR(5793 * dart.notNull(dataIn[$_get](i)) + 8192, 14);
        p[$_set](0 * 8 + col, t);
        p[$_set](1 * 8 + col, t);
        p[$_set](2 * 8 + col, t);
        p[$_set](3 * 8 + col, t);
        p[$_set](4 * 8 + col, t);
        p[$_set](5 * 8 + col, t);
        p[$_set](6 * 8 + col, t);
        p[$_set](7 * 8 + col, t);
        continue;
      }
      let v0 = bit_operators.shiftR(5793 * dart.notNull(p[$_get](0 * 8 + col)) + 2048, 12);
      let v1 = bit_operators.shiftR(5793 * dart.notNull(p[$_get](4 * 8 + col)) + 2048, 12);
      let v2 = p[$_get](2 * 8 + col);
      let v3 = p[$_get](6 * 8 + col);
      let v4 = bit_operators.shiftR(2896 * (dart.notNull(p[$_get](1 * 8 + col)) - dart.notNull(p[$_get](7 * 8 + col))) + 2048, 12);
      let v7 = bit_operators.shiftR(2896 * (dart.notNull(p[$_get](1 * 8 + col)) + dart.notNull(p[$_get](7 * 8 + col))) + 2048, 12);
      let v5 = p[$_get](3 * 8 + col);
      let v6 = p[$_get](5 * 8 + col);
      let t = bit_operators.shiftR(dart.notNull(v0) - dart.notNull(v1) + 1, 1);
      v0 = bit_operators.shiftR(dart.notNull(v0) + dart.notNull(v1) + 1, 1);
      v1 = t;
      t = bit_operators.shiftR(dart.notNull(v2) * 3784 + dart.notNull(v3) * 1567 + 2048, 12);
      v2 = bit_operators.shiftR(dart.notNull(v2) * 1567 - dart.notNull(v3) * 3784 + 2048, 12);
      v3 = t;
      t = bit_operators.shiftR(dart.notNull(v4) - dart.notNull(v6) + 1, 1);
      v4 = bit_operators.shiftR(dart.notNull(v4) + dart.notNull(v6) + 1, 1);
      v6 = t;
      t = bit_operators.shiftR(dart.notNull(v7) + dart.notNull(v5) + 1, 1);
      v5 = bit_operators.shiftR(dart.notNull(v7) - dart.notNull(v5) + 1, 1);
      v7 = t;
      t = bit_operators.shiftR(dart.notNull(v0) - dart.notNull(v3) + 1, 1);
      v0 = bit_operators.shiftR(dart.notNull(v0) + dart.notNull(v3) + 1, 1);
      v3 = t;
      t = bit_operators.shiftR(dart.notNull(v1) - dart.notNull(v2) + 1, 1);
      v1 = bit_operators.shiftR(dart.notNull(v1) + dart.notNull(v2) + 1, 1);
      v2 = t;
      t = bit_operators.shiftR(dart.notNull(v4) * 2276 + dart.notNull(v7) * 3406 + 2048, 12);
      v4 = bit_operators.shiftR(dart.notNull(v4) * 3406 - dart.notNull(v7) * 2276 + 2048, 12);
      v7 = t;
      t = bit_operators.shiftR(dart.notNull(v5) * 799 + dart.notNull(v6) * 4017 + 2048, 12);
      v5 = bit_operators.shiftR(dart.notNull(v5) * 4017 - dart.notNull(v6) * 799 + 2048, 12);
      v6 = t;
      p[$_set](0 * 8 + col, dart.notNull(v0) + dart.notNull(v7));
      p[$_set](7 * 8 + col, dart.notNull(v0) - dart.notNull(v7));
      p[$_set](1 * 8 + col, dart.notNull(v1) + dart.notNull(v6));
      p[$_set](6 * 8 + col, dart.notNull(v1) - dart.notNull(v6));
      p[$_set](2 * 8 + col, dart.notNull(v2) + dart.notNull(v5));
      p[$_set](5 * 8 + col, dart.notNull(v2) - dart.notNull(v5));
      p[$_set](3 * 8 + col, dart.notNull(v3) + dart.notNull(v4));
      p[$_set](4 * 8 + col, dart.notNull(v3) - dart.notNull(v4));
    }
    for (let i = 0; i < 64; i = i + 1) {
      dataOut[$_set](i, dart.nullCheck(_jpeg_quantize_html._dctClip)[$_get](256 + 128 + dart.notNull(bit_operators.shiftR(dart.notNull(p[$_get](i)) + 8, 4))));
    }
  };
  _jpeg_quantize_html.getImageFromJpeg = function getImageFromJpeg(jpeg) {
    let t3, t3$, t3$0;
    if (jpeg == null) dart.nullFailed(I[0], 213, 33, "jpeg");
    let image = new image$.Image.new(dart.nullCheck(jpeg.width), dart.nullCheck(jpeg.height), {channels: image$.Channels.rgb});
    image.exif = new exif_data.ExifData.from(jpeg.exif);
    let component1 = null;
    let component2 = null;
    let component3 = null;
    let component4 = null;
    let component1Line = null;
    let component2Line = null;
    let component3Line = null;
    let component4Line = null;
    let offset = 0;
    let Y = null;
    let Cb = null;
    let Cr = null;
    let K = null;
    let C = null;
    let M = null;
    let Ye = null;
    let R = null;
    let G = null;
    let B = null;
    let colorTransform = false;
    switch (jpeg.components[$length]) {
      case 1:
      {
        component1 = jpeg.components[$_get](0);
        let lines = component1.lines;
        let hShift1 = component1.hScaleShift;
        let vShift1 = component1.vScaleShift;
        for (let y = 0; y < dart.nullCheck(jpeg.height); y = y + 1) {
          let y1 = y[$rightShift](vShift1);
          component1Line = lines[$_get](y1);
          for (let x = 0; x < dart.nullCheck(jpeg.width); x = x + 1) {
            let x1 = x[$rightShift](hShift1);
            Y = dart.nullCheck(component1Line)[$_get](x1);
            image._set((t3 = offset, offset = t3 + 1, t3), color.getColor(Y, Y, Y));
          }
        }
        break;
      }
      case 3:
      {
        colorTransform = true;
        component1 = jpeg.components[$_get](0);
        component2 = jpeg.components[$_get](1);
        component3 = jpeg.components[$_get](2);
        let lines1 = component1.lines;
        let lines2 = component2.lines;
        let lines3 = component3.lines;
        let hShift1 = component1.hScaleShift;
        let vShift1 = component1.vScaleShift;
        let hShift2 = component2.hScaleShift;
        let vShift2 = component2.vScaleShift;
        let hShift3 = component3.hScaleShift;
        let vShift3 = component3.vScaleShift;
        for (let y = 0; y < dart.nullCheck(jpeg.height); y = y + 1) {
          let y1 = y[$rightShift](vShift1);
          let y2 = y[$rightShift](vShift2);
          let y3 = y[$rightShift](vShift3);
          component1Line = lines1[$_get](y1);
          component2Line = lines2[$_get](y2);
          component3Line = lines3[$_get](y3);
          for (let x = 0; x < dart.nullCheck(jpeg.width); x = x + 1) {
            let x1 = x[$rightShift](hShift1);
            let x2 = x[$rightShift](hShift2);
            let x3 = x[$rightShift](hShift3);
            Y = dart.notNull(dart.nullCheck(component1Line)[$_get](x1)) << 8 >>> 0;
            Cb = dart.notNull(dart.nullCheck(component2Line)[$_get](x2)) - 128;
            Cr = dart.notNull(dart.nullCheck(component3Line)[$_get](x3)) - 128;
            R = dart.notNull(Y) + 359 * dart.notNull(Cr) + 128;
            G = dart.notNull(Y) - 88 * dart.notNull(Cb) - 183 * dart.notNull(Cr) + 128;
            B = dart.notNull(Y) + 454 * dart.notNull(Cb) + 128;
            R = _jpeg_quantize_html._clamp8(bit_operators.shiftR(R, 8));
            G = _jpeg_quantize_html._clamp8(bit_operators.shiftR(G, 8));
            B = _jpeg_quantize_html._clamp8(bit_operators.shiftR(B, 8));
            image._set((t3$ = offset, offset = t3$ + 1, t3$), color.getColor(R, G, B));
          }
        }
        break;
      }
      case 4:
      {
        if (jpeg.adobe == null) {
          dart.throw(new image_exception.ImageException.new("Unsupported color mode (4 components)"));
        }
        colorTransform = false;
        if (dart.nullCheck(jpeg.adobe).transformCode !== 0) {
          colorTransform = true;
        }
        component1 = jpeg.components[$_get](0);
        component2 = jpeg.components[$_get](1);
        component3 = jpeg.components[$_get](2);
        component4 = jpeg.components[$_get](3);
        let lines1 = component1.lines;
        let lines2 = component2.lines;
        let lines3 = component3.lines;
        let lines4 = component4.lines;
        let hShift1 = component1.hScaleShift;
        let vShift1 = component1.vScaleShift;
        let hShift2 = component2.hScaleShift;
        let vShift2 = component2.vScaleShift;
        let hShift3 = component3.hScaleShift;
        let vShift3 = component3.vScaleShift;
        let hShift4 = component4.hScaleShift;
        let vShift4 = component4.vScaleShift;
        for (let y = 0; y < dart.nullCheck(jpeg.height); y = y + 1) {
          let y1 = y[$rightShift](vShift1);
          let y2 = y[$rightShift](vShift2);
          let y3 = y[$rightShift](vShift3);
          let y4 = y[$rightShift](vShift4);
          component1Line = lines1[$_get](y1);
          component2Line = lines2[$_get](y2);
          component3Line = lines3[$_get](y3);
          component4Line = lines4[$_get](y4);
          for (let x = 0; x < dart.nullCheck(jpeg.width); x = x + 1) {
            let x1 = x[$rightShift](hShift1);
            let x2 = x[$rightShift](hShift2);
            let x3 = x[$rightShift](hShift3);
            let x4 = x[$rightShift](hShift4);
            if (!colorTransform) {
              C = dart.nullCheck(component1Line)[$_get](x1);
              M = dart.nullCheck(component2Line)[$_get](x2);
              Ye = dart.nullCheck(component3Line)[$_get](x3);
              K = dart.nullCheck(component4Line)[$_get](x4);
            } else {
              Y = dart.nullCheck(component1Line)[$_get](x1);
              Cb = dart.nullCheck(component2Line)[$_get](x2);
              Cr = dart.nullCheck(component3Line)[$_get](x3);
              K = dart.nullCheck(component4Line)[$_get](x4);
              C = 255 - dart.notNull(_jpeg_quantize_html._clamp8((dart.notNull(Y) + 1.402 * (dart.notNull(Cr) - 128))[$toInt]()));
              M = 255 - dart.notNull(_jpeg_quantize_html._clamp8((dart.notNull(Y) - 0.3441363 * (dart.notNull(Cb) - 128) - 0.71413636 * (dart.notNull(Cr) - 128))[$toInt]()));
              Ye = 255 - dart.notNull(_jpeg_quantize_html._clamp8((dart.notNull(Y) + 1.772 * (dart.notNull(Cb) - 128))[$toInt]()));
            }
            R = bit_operators.shiftR(dart.notNull(C) * dart.notNull(K), 8);
            G = bit_operators.shiftR(dart.notNull(M) * dart.notNull(K), 8);
            B = bit_operators.shiftR(dart.notNull(Ye) * dart.notNull(K), 8);
            image._set((t3$0 = offset, offset = t3$0 + 1, t3$0), color.getColor(R, G, B));
          }
        }
        break;
      }
      default:
      {
        dart.throw(new image_exception.ImageException.new("Unsupported color mode"));
      }
    }
    return image;
  };
  dart.defineLazy(_jpeg_quantize_html, {
    /*_jpeg_quantize_html._dctClip*/get _dctClip() {
      return null;
    },
    set _dctClip(_) {}
  }, false);
  var adobe = dart.privateName(jpeg_data, "JpegData.adobe");
  var frame = dart.privateName(jpeg_data, "JpegData.frame");
  var resetInterval = dart.privateName(jpeg_data, "JpegData.resetInterval");
  var exif = dart.privateName(jpeg_data, "JpegData.exif");
  var quantizationTables = dart.privateName(jpeg_data, "JpegData.quantizationTables");
  var frames = dart.privateName(jpeg_data, "JpegData.frames");
  var huffmanTablesAC = dart.privateName(jpeg_data, "JpegData.huffmanTablesAC");
  var huffmanTablesDC = dart.privateName(jpeg_data, "JpegData.huffmanTablesDC");
  var components = dart.privateName(jpeg_data, "JpegData.components");
  var __JpegData_input = dart.privateName(jpeg_data, "_#JpegData#input");
  var __JpegData_input_isSet = dart.privateName(jpeg_data, "_#JpegData#input#isSet");
  var __JpegData_jfif = dart.privateName(jpeg_data, "_#JpegData#jfif");
  var __JpegData_jfif_isSet = dart.privateName(jpeg_data, "_#JpegData#jfif#isSet");
  var _nextMarker = dart.privateName(jpeg_data, "_nextMarker");
  var _readBlock = dart.privateName(jpeg_data, "_readBlock");
  var _readFrame = dart.privateName(jpeg_data, "_readFrame");
  var _skipBlock = dart.privateName(jpeg_data, "_skipBlock");
  var _read = dart.privateName(jpeg_data, "_read");
  var _buildComponentData = dart.privateName(jpeg_data, "_buildComponentData");
  var _readAppData = dart.privateName(jpeg_data, "_readAppData");
  var _readDQT = dart.privateName(jpeg_data, "_readDQT");
  var _readDHT = dart.privateName(jpeg_data, "_readDHT");
  var _readDRI = dart.privateName(jpeg_data, "_readDRI");
  var _readSOS = dart.privateName(jpeg_data, "_readSOS");
  var _readExifValue = dart.privateName(jpeg_data, "_readExifValue");
  var _readExifDir = dart.privateName(jpeg_data, "_readExifDir");
  var _readExifData = dart.privateName(jpeg_data, "_readExifData");
  var _buildHuffmanTable = dart.privateName(jpeg_data, "_buildHuffmanTable");
  jpeg_data.JpegData = class JpegData extends core.Object {
    get adobe() {
      return this[adobe];
    }
    set adobe(value) {
      this[adobe] = value;
    }
    get frame() {
      return this[frame];
    }
    set frame(value) {
      this[frame] = value;
    }
    get resetInterval() {
      return this[resetInterval];
    }
    set resetInterval(value) {
      this[resetInterval] = value;
    }
    get exif() {
      return this[exif];
    }
    set exif(value) {
      super.exif = value;
    }
    get quantizationTables() {
      return this[quantizationTables];
    }
    set quantizationTables(value) {
      super.quantizationTables = value;
    }
    get frames() {
      return this[frames];
    }
    set frames(value) {
      super.frames = value;
    }
    get huffmanTablesAC() {
      return this[huffmanTablesAC];
    }
    set huffmanTablesAC(value) {
      super.huffmanTablesAC = value;
    }
    get huffmanTablesDC() {
      return this[huffmanTablesDC];
    }
    set huffmanTablesDC(value) {
      super.huffmanTablesDC = value;
    }
    get components() {
      return this[components];
    }
    set components(value) {
      super.components = value;
    }
    get input() {
      let t3;
      return dart.test(this[__JpegData_input_isSet]) ? (t3 = this[__JpegData_input], t3) : dart.throw(new _internal.LateError.fieldNI("input"));
    }
    set input(t3) {
      if (t3 == null) dart.nullFailed(I[1], 20, 20, "null");
      this[__JpegData_input_isSet] = true;
      this[__JpegData_input] = t3;
    }
    get jfif() {
      let t4;
      return dart.test(this[__JpegData_jfif_isSet]) ? (t4 = this[__JpegData_jfif], t4) : dart.throw(new _internal.LateError.fieldNI("jfif"));
    }
    set jfif(t4) {
      if (t4 == null) dart.nullFailed(I[1], 21, 17, "null");
      this[__JpegData_jfif_isSet] = true;
      this[__JpegData_jfif] = t4;
    }
    validate(bytes) {
      let t5;
      if (bytes == null) dart.nullFailed(I[1], 32, 27, "bytes");
      this.input = new input_buffer.InputBuffer.new(bytes, {bigEndian: true});
      let marker = this[_nextMarker]();
      if (marker !== 216) {
        return false;
      }
      let hasSOF = false;
      let hasSOS = false;
      marker = this[_nextMarker]();
      while (marker !== 217 && !dart.test(this.input.isEOS)) {
        let sectionByteSize = this.input.readUint16();
        if (dart.notNull(sectionByteSize) < 2) {
          break;
        }
        t5 = this.input;
        t5.offset = dart.notNull(t5.offset) + (dart.notNull(sectionByteSize) - 2);
        switch (marker) {
          case 192:
          case 193:
          case 194:
          {
            hasSOF = true;
            break;
          }
          case 218:
          {
            hasSOS = true;
            break;
          }
          default:
        }
        marker = this[_nextMarker]();
      }
      return hasSOF && hasSOS;
    }
    readInfo(bytes) {
      if (bytes == null) dart.nullFailed(I[1], 72, 32, "bytes");
      this.input = new input_buffer.InputBuffer.new(bytes, {bigEndian: true});
      let marker = this[_nextMarker]();
      if (marker !== 216) {
        return null;
      }
      let info = new jpeg_info.JpegInfo.new();
      let hasSOF = false;
      let hasSOS = false;
      marker = this[_nextMarker]();
      while (marker !== 217 && !dart.test(this.input.isEOS)) {
        switch (marker) {
          case 192:
          case 193:
          case 194:
          {
            hasSOF = true;
            this[_readFrame](marker, this[_readBlock]());
            break;
          }
          case 218:
          {
            hasSOS = true;
            this[_skipBlock]();
            break;
          }
          default:
          {
            this[_skipBlock]();
            break;
          }
        }
        marker = this[_nextMarker]();
      }
      if (this.frame != null) {
        info.width = dart.nullCheck(dart.nullCheck(this.frame).samplesPerLine);
        info.height = dart.nullCheck(dart.nullCheck(this.frame).scanLines);
      }
      this.frame = null;
      this.frames[$clear]();
      return hasSOF && hasSOS ? info : null;
    }
    read(bytes) {
      if (bytes == null) dart.nullFailed(I[1], 117, 23, "bytes");
      this.input = new input_buffer.InputBuffer.new(bytes, {bigEndian: true});
      this[_read]();
      if (this.frames[$length] !== 1) {
        dart.throw(new image_exception.ImageException.new("Only single frame JPEGs supported"));
      }
      for (let i = 0; i < dart.notNull(dart.nullCheck(this.frame).componentsOrder[$length]); i = i + 1) {
        let component = dart.nullCheck(dart.nullCheck(this.frame).components[$_get](dart.nullCheck(this.frame).componentsOrder[$_get](i)));
        this.components[$add](new _component_data.ComponentData.new(component.hSamples, dart.nullCheck(this.frame).maxHSamples, component.vSamples, dart.nullCheck(this.frame).maxVSamples, this[_buildComponentData](this.frame, component)));
      }
    }
    get width() {
      return dart.nullCheck(this.frame).samplesPerLine;
    }
    get height() {
      return dart.nullCheck(this.frame).scanLines;
    }
    getImage() {
      return _jpeg_quantize_html.getImageFromJpeg(this);
    }
    [_read]() {
      let t5, t5$;
      let marker = this[_nextMarker]();
      if (marker !== 216) {
        dart.throw(new image_exception.ImageException.new("Start Of Image marker not found."));
      }
      marker = this[_nextMarker]();
      while (marker !== 217 && !dart.test(this.input.isEOS)) {
        let block = this[_readBlock]();
        switch (marker) {
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 254:
          {
            this[_readAppData](marker, block);
            break;
          }
          case 219:
          {
            this[_readDQT](block);
            break;
          }
          case 192:
          case 193:
          case 194:
          {
            this[_readFrame](marker, block);
            break;
          }
          case 195:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 205:
          case 206:
          case 207:
          {
            dart.throw(new image_exception.ImageException.new("Unhandled frame type " + marker[$toRadixString](16)));
          }
          case 196:
          {
            this[_readDHT](block);
            break;
          }
          case 221:
          {
            this[_readDRI](block);
            break;
          }
          case 218:
          {
            this[_readSOS](block);
            break;
          }
          case 255:
          {
            if (this.input._get(0) !== 255) {
              t5 = this.input;
              t5.offset = dart.notNull(t5.offset) - 1;
            }
            break;
          }
          default:
          {
            if (this.input._get(-3) === 255 && dart.notNull(this.input._get(-2)) >= 192 && dart.notNull(this.input._get(-2)) <= 254) {
              t5$ = this.input;
              t5$.offset = dart.notNull(t5$.offset) - 3;
              break;
            }
            if (marker !== 0) {
              dart.throw(new image_exception.ImageException.new("Unknown JPEG marker " + marker[$toRadixString](16)));
            }
            break;
          }
        }
        marker = this[_nextMarker]();
      }
    }
    [_skipBlock]() {
      let t5;
      let length = this.input.readUint16();
      if (dart.notNull(length) < 2) {
        dart.throw(new image_exception.ImageException.new("Invalid Block"));
      }
      t5 = this.input;
      t5.offset = dart.notNull(t5.offset) + (dart.notNull(length) - 2);
    }
    [_readBlock]() {
      let length = this.input.readUint16();
      if (dart.notNull(length) < 2) {
        dart.throw(new image_exception.ImageException.new("Invalid Block"));
      }
      return this.input.readBytes(dart.notNull(length) - 2);
    }
    [_nextMarker]() {
      let c = 0;
      if (dart.test(this.input.isEOS)) {
        return c;
      }
      do {
        do {
          c = this.input.readByte();
        } while (c !== 255 && !dart.test(this.input.isEOS));
        if (dart.test(this.input.isEOS)) {
          return c;
        }
        do {
          c = this.input.readByte();
        } while (c === 255 && !dart.test(this.input.isEOS));
      } while (c === 0 && !dart.test(this.input.isEOS));
      return c;
    }
    [_readExifValue](block, format, offset) {
      if (block == null) dart.nullFailed(I[1], 273, 38, "block");
      if (format == null) dart.nullFailed(I[1], 273, 49, "format");
      if (offset == null) dart.nullFailed(I[1], 273, 61, "offset");
      let initialBlockLength = block.length;
      try {
        switch (format) {
          case 6:
          {
            return block.readInt8();
          }
          case 1:
          case 7:
          {
            return block.readByte();
          }
          case 2:
          {
            return block.readString(1);
          }
          case 3:
          {
            return block.readUint16();
          }
          case 4:
          {
            return block.readUint32();
          }
          case 5:
          case 10:
          {
            {
              let buffer = block.peekBytes(8, offset);
              let num = buffer.readInt32();
              let den = buffer.readInt32();
              if (den === 0) {
                return 0.0;
              }
              return dart.notNull(num) / dart.notNull(den);
            }
          }
          case 8:
          {
            return block.readInt16();
          }
          case 9:
          {
            return block.readInt32();
          }
          case 11:
          {
            return block.readFloat32();
          }
          case 12:
          {
            return block.peekBytes(8, offset).readFloat64();
          }
          default:
          {
            return 0;
          }
        }
      } finally {
        let bytesRead = dart.notNull(initialBlockLength) - dart.notNull(block.length);
        if (bytesRead < 4) {
          block.skip(4 - bytesRead);
        }
      }
    }
    [_readExifDir](block, nesting = 0) {
      if (block == null) dart.nullFailed(I[1], 332, 33, "block");
      if (nesting == null) dart.nullFailed(I[1], 332, 45, "nesting");
      if (dart.notNull(nesting) > 4) {
        return;
      }
      let numDirEntries = block.readUint16();
      let bytesPerFormat = C[0] || CT.C0;
      for (let di = 0; di < dart.notNull(numDirEntries); di = di + 1) {
        let tag = block.readUint16();
        let format = block.readUint16();
        let components = block.readUint32();
        if (dart.notNull(format) - 1 >= 12) {
          continue;
        }
        if (dart.notNull(components) > 65536) {
          continue;
        }
        let byteCount = bytesPerFormat[$_get](format);
        let offset = 0;
        if (dart.notNull(byteCount) > 4) {
          offset = block.readUint32();
          if (dart.notNull(offset) + dart.notNull(byteCount) > dart.notNull(block.length)) {
            continue;
          }
        }
        this.exif.data[$_set](tag, this[_readExifValue](block, format, offset));
      }
    }
    [_readExifData](block) {
      let t5;
      if (block == null) dart.nullFailed(I[1], 377, 34, "block");
      t5 = this.exif;
      t5.rawData == null ? t5.rawData = T.JSArrayOfUint8List().of([]) : null;
      let rawData = block.toUint8List()[$sublist](0);
      dart.nullCheck(this.exif.rawData)[$add](rawData);
      if (block.readUint32() !== 1165519206) {
        return;
      }
      if (block.readUint16() !== 0) {
        return;
      }
      let saveEndian = block.bigEndian;
      let alignment = block.readString(2);
      if (alignment === "II") {
        block.bigEndian = false;
      } else if (alignment === "MM") {
        block.bigEndian = true;
      } else {
        return;
      }
      block.skip(2);
      let offset = block.readUint32();
      if (dart.notNull(offset) < 8 || dart.notNull(offset) > 16) {
        if (dart.notNull(offset) > dart.notNull(block.length) - 16) {
          block.bigEndian = saveEndian;
          return;
        }
      }
      if (dart.notNull(offset) > 8) {
        block.skip(dart.notNull(offset) - 8);
      }
      this[_readExifDir](block);
      block.bigEndian = saveEndian;
    }
    [_readAppData](marker, block) {
      if (marker == null) dart.nullFailed(I[1], 425, 25, "marker");
      if (block == null) dart.nullFailed(I[1], 425, 45, "block");
      let appData = block;
      if (marker === 224) {
        if (appData._get(0) === 74 && appData._get(1) === 70 && appData._get(2) === 73 && appData._get(3) === 70 && appData._get(4) === 0) {
          this.jfif = new jpeg_jfif.JpegJfif.new();
          this.jfif.majorVersion = appData._get(5);
          this.jfif.minorVersion = appData._get(6);
          this.jfif.densityUnits = appData._get(7);
          this.jfif.xDensity = (dart.notNull(appData._get(8)) << 8 | dart.notNull(appData._get(9))) >>> 0;
          this.jfif.yDensity = (dart.notNull(appData._get(10)) << 8 | dart.notNull(appData._get(11))) >>> 0;
          this.jfif.thumbWidth = appData._get(12);
          this.jfif.thumbHeight = appData._get(13);
          let thumbSize = 3 * dart.notNull(this.jfif.thumbWidth) * dart.notNull(this.jfif.thumbHeight);
          this.jfif.thumbData = appData.subset(14 + thumbSize, {offset: 14});
        }
      } else if (marker === 225) {
        this[_readExifData](appData);
      } else if (marker === 238) {
        if (appData._get(0) === 65 && appData._get(1) === 100 && appData._get(2) === 111 && appData._get(3) === 98 && appData._get(4) === 101 && appData._get(5) === 0) {
          this.adobe = new jpeg_adobe.JpegAdobe.new();
          dart.nullCheck(this.adobe).version = appData._get(6);
          dart.nullCheck(this.adobe).flags0 = (dart.notNull(appData._get(7)) << 8 | dart.notNull(appData._get(8))) >>> 0;
          dart.nullCheck(this.adobe).flags1 = (dart.notNull(appData._get(9)) << 8 | dart.notNull(appData._get(10))) >>> 0;
          dart.nullCheck(this.adobe).transformCode = appData._get(11);
        }
      } else {
      }
    }
    [_readDQT](block) {
      if (block == null) dart.nullFailed(I[1], 468, 29, "block");
      while (!dart.test(block.isEOS)) {
        let n = block.readByte();
        let prec = n[$rightShift](4);
        n = dart.notNull(n) & 15;
        if (dart.notNull(n) >= 4) {
          dart.throw(new image_exception.ImageException.new("Invalid number of quantization tables"));
        }
        if (this.quantizationTables[$_get](n) == null) {
          this.quantizationTables[$_set](n, _native_typed_data.NativeInt16List.new(64));
        }
        let tableData = this.quantizationTables[$_get](n);
        for (let i = 0; i < 64; i = i + 1) {
          let tmp = null;
          if (prec !== 0) {
            tmp = block.readUint16();
          } else {
            tmp = block.readByte();
          }
          dart.nullCheck(tableData)[$_set](jpeg.Jpeg.dctZigZag[$_get](i), tmp);
        }
      }
      if (!dart.test(block.isEOS)) {
        dart.throw(new image_exception.ImageException.new("Bad length for DQT block"));
      }
    }
    [_readFrame](marker, block) {
      if (marker == null) dart.nullFailed(I[1], 500, 23, "marker");
      if (block == null) dart.nullFailed(I[1], 500, 43, "block");
      if (this.frame != null) {
        dart.throw(new image_exception.ImageException.new("Duplicate JPG frame data found."));
      }
      this.frame = new jpeg_frame.JpegFrame.new();
      dart.nullCheck(this.frame).extended = marker === 193;
      dart.nullCheck(this.frame).progressive = marker === 194;
      dart.nullCheck(this.frame).precision = block.readByte();
      dart.nullCheck(this.frame).scanLines = block.readUint16();
      dart.nullCheck(this.frame).samplesPerLine = block.readUint16();
      let numComponents = block.readByte();
      for (let i = 0; i < dart.notNull(numComponents); i = i + 1) {
        let componentId = block.readByte();
        let x = block.readByte();
        let h = dart.notNull(x) >> 4 & 15;
        let v = dart.notNull(x) & 15;
        let qId = block.readByte();
        dart.nullCheck(this.frame).componentsOrder[$add](componentId);
        dart.nullCheck(this.frame).components[$_set](componentId, new jpeg_component.JpegComponent.new(h, v, this.quantizationTables, qId));
      }
      dart.nullCheck(this.frame).prepare();
      this.frames[$add](this.frame);
    }
    [_readDHT](block) {
      if (block == null) dart.nullFailed(I[1], 529, 29, "block");
      while (!dart.test(block.isEOS)) {
        let index = block.readByte();
        let bits = _native_typed_data.NativeUint8List.new(16);
        let count = 0;
        for (let j = 0; j < 16; j = j + 1) {
          bits[$_set](j, block.readByte());
          count = count + dart.notNull(bits[$_get](j));
        }
        let huffmanValues = _native_typed_data.NativeUint8List.new(count);
        for (let j = 0; j < count; j = j + 1) {
          huffmanValues[$_set](j, block.readByte());
        }
        let ht = null;
        if ((dart.notNull(index) & 16) !== 0) {
          index = dart.notNull(index) - 16;
          ht = this.huffmanTablesAC;
        } else {
          ht = this.huffmanTablesDC;
        }
        if (dart.notNull(ht[$length]) <= dart.notNull(index)) {
          ht[$length] = dart.notNull(index) + 1;
        }
        ht[$_set](index, this[_buildHuffmanTable](bits, huffmanValues));
      }
    }
    [_readDRI](block) {
      if (block == null) dart.nullFailed(I[1], 563, 29, "block");
      this.resetInterval = block.readUint16();
    }
    [_readSOS](block) {
      if (block == null) dart.nullFailed(I[1], 567, 29, "block");
      let n = block.readByte();
      if (dart.notNull(n) < 1 || dart.notNull(n) > 4) {
        dart.throw(new image_exception.ImageException.new("Invalid SOS block"));
      }
      let components = T.ListOfJpegComponent().generate(n, dart.fn(i => {
        if (i == null) dart.nullFailed(I[1], 573, 57, "i");
        let id = block.readByte();
        let c = block.readByte();
        if (!dart.test(dart.nullCheck(this.frame).components[$containsKey](id))) {
          dart.throw(new image_exception.ImageException.new("Invalid Component in SOS block"));
        }
        let component = dart.nullCheck(dart.nullCheck(this.frame).components[$_get](id));
        let dc_tbl_no = dart.notNull(c) >> 4 & 15;
        let ac_tbl_no = dart.notNull(c) & 15;
        if (dc_tbl_no < dart.notNull(this.huffmanTablesDC[$length])) {
          component.huffmanTableDC = dart.nullCheck(this.huffmanTablesDC[$_get](dc_tbl_no));
        }
        if (ac_tbl_no < dart.notNull(this.huffmanTablesAC[$length])) {
          component.huffmanTableAC = dart.nullCheck(this.huffmanTablesAC[$_get](ac_tbl_no));
        }
        return component;
      }, T.intToJpegComponent()));
      let spectralStart = block.readByte();
      let spectralEnd = block.readByte();
      let successiveApproximation = block.readByte();
      let Ah = dart.notNull(successiveApproximation) >> 4 & 15;
      let Al = dart.notNull(successiveApproximation) & 15;
      new jpeg_scan.JpegScan.new(this.input, dart.nullCheck(this.frame), components, this.resetInterval, spectralStart, spectralEnd, Ah, Al).decode();
    }
    [_buildHuffmanTable](codeLengths, values) {
      let t5;
      if (codeLengths == null) dart.nullFailed(I[1], 608, 38, "codeLengths");
      if (values == null) dart.nullFailed(I[1], 608, 61, "values");
      let k = 0;
      let code = T.JSArrayOf_JpegHuffman().of([]);
      let length = 16;
      while (length > 0 && codeLengths[$_get](length - 1) === 0) {
        length = length - 1;
      }
      code[$add](new jpeg_data._JpegHuffman.new());
      let p = code[$_get](0);
      let q = null;
      for (let i = 0; i < length; i = i + 1) {
        for (let j = 0; j < dart.notNull(codeLengths[$_get](i)); j = j + 1) {
          p = code[$removeLast]();
          if (dart.notNull(p.children[$length]) <= dart.notNull(p.index)) {
            p.children[$length] = dart.notNull(p.index) + 1;
          }
          p.children[$_set](p.index, values[$_get](k));
          while (dart.notNull(p.index) > 0) {
            p = code[$removeLast]();
          }
          t5 = p;
          t5.index = dart.notNull(t5.index) + 1;
          code[$add](p);
          while (dart.notNull(code[$length]) <= i) {
            q = new jpeg_data._JpegHuffman.new();
            code[$add](q);
            if (dart.notNull(p.children[$length]) <= dart.notNull(p.index)) {
              p.children[$length] = dart.notNull(p.index) + 1;
            }
            p.children[$_set](p.index, q.children);
            p = q;
          }
          k = k + 1;
        }
        if (i + 1 < length) {
          q = new jpeg_data._JpegHuffman.new();
          code[$add](q);
          if (dart.notNull(p.children[$length]) <= dart.notNull(p.index)) {
            p.children[$length] = dart.notNull(p.index) + 1;
          }
          p.children[$_set](p.index, q.children);
          p = q;
        }
      }
      return code[$_get](0).children;
    }
    [_buildComponentData](frame, component) {
      let t5, t5$;
      if (component == null) dart.nullFailed(I[1], 662, 39, "component");
      let blocksPerLine = component.blocksPerLine;
      let blocksPerColumn = component.blocksPerColumn;
      let samplesPerLine = dart.notNull(blocksPerLine) << 3 >>> 0;
      let R = _native_typed_data.NativeInt32List.new(64);
      let r = _native_typed_data.NativeUint8List.new(64);
      let lines = T.ListOfUint8ListN().filled(dart.notNull(blocksPerColumn) * 8, null);
      let l = 0;
      for (let blockRow = 0; blockRow < dart.notNull(blocksPerColumn); blockRow = blockRow + 1) {
        let scanLine = blockRow << 3 >>> 0;
        for (let i = 0; i < 8; i = i + 1) {
          lines[$_set]((t5 = l, l = t5 + 1, t5), _native_typed_data.NativeUint8List.new(samplesPerLine));
        }
        for (let blockCol = 0; blockCol < dart.notNull(blocksPerLine); blockCol = blockCol + 1) {
          _jpeg_quantize_html.quantizeAndInverse(dart.nullCheck(component.quantizationTable), typed_data.Int32List.as(component.blocks[$_get](blockRow)[$_get](blockCol)), r, R);
          let offset = 0;
          let sample = blockCol << 3 >>> 0;
          for (let j = 0; j < 8; j = j + 1) {
            let line = lines[$_get](scanLine + j);
            for (let i = 0; i < 8; i = i + 1) {
              dart.nullCheck(line)[$_set](sample + i, r[$_get]((t5$ = offset, offset = t5$ + 1, t5$)));
            }
          }
        }
      }
      return lines;
    }
    static toFix(val) {
      if (val == null) dart.nullFailed(I[1], 695, 27, "val");
      return ((dart.notNull(val) * 1048576)[$toInt]() & 4294967295) >>> 0;
    }
  };
  (jpeg_data.JpegData.new = function() {
    this[__JpegData_input] = null;
    this[__JpegData_input_isSet] = false;
    this[__JpegData_jfif] = null;
    this[__JpegData_jfif_isSet] = false;
    this[adobe] = null;
    this[frame] = null;
    this[resetInterval] = null;
    this[exif] = new exif_data.ExifData.new();
    this[quantizationTables] = T.ListOfInt16ListN().filled(4, null);
    this[frames] = T.JSArrayOfJpegFrameN().of([]);
    this[huffmanTablesAC] = T.JSArrayOfListN().of([]);
    this[huffmanTablesDC] = T.JSArrayOfListN().of([]);
    this[components] = T.JSArrayOfComponentData().of([]);
    ;
  }).prototype = jpeg_data.JpegData.prototype;
  dart.addTypeTests(jpeg_data.JpegData);
  dart.addTypeCaches(jpeg_data.JpegData);
  dart.setMethodSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getMethods(jpeg_data.JpegData.__proto__),
    validate: dart.fnType(core.bool, [core.List$(core.int)]),
    readInfo: dart.fnType(dart.nullable(jpeg_info.JpegInfo), [core.List$(core.int)]),
    read: dart.fnType(dart.void, [core.List$(core.int)]),
    getImage: dart.fnType(image$.Image, []),
    [_read]: dart.fnType(dart.void, []),
    [_skipBlock]: dart.fnType(dart.void, []),
    [_readBlock]: dart.fnType(input_buffer.InputBuffer, []),
    [_nextMarker]: dart.fnType(core.int, []),
    [_readExifValue]: dart.fnType(dart.dynamic, [input_buffer.InputBuffer, core.int, core.int]),
    [_readExifDir]: dart.fnType(dart.void, [input_buffer.InputBuffer], [core.int]),
    [_readExifData]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readAppData]: dart.fnType(dart.void, [core.int, input_buffer.InputBuffer]),
    [_readDQT]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readFrame]: dart.fnType(dart.void, [core.int, input_buffer.InputBuffer]),
    [_readDHT]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readDRI]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_readSOS]: dart.fnType(dart.void, [input_buffer.InputBuffer]),
    [_buildHuffmanTable]: dart.fnType(dart.nullable(core.List), [typed_data.Uint8List, typed_data.Uint8List]),
    [_buildComponentData]: dart.fnType(core.List$(dart.nullable(typed_data.Uint8List)), [dart.nullable(jpeg_frame.JpegFrame), jpeg_component.JpegComponent])
  }));
  dart.setGetterSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getGetters(jpeg_data.JpegData.__proto__),
    input: input_buffer.InputBuffer,
    jfif: jpeg_jfif.JpegJfif,
    width: dart.nullable(core.int),
    height: dart.nullable(core.int)
  }));
  dart.setSetterSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getSetters(jpeg_data.JpegData.__proto__),
    input: input_buffer.InputBuffer,
    jfif: jpeg_jfif.JpegJfif
  }));
  dart.setLibraryUri(jpeg_data.JpegData, I[2]);
  dart.setFieldSignature(jpeg_data.JpegData, () => ({
    __proto__: dart.getFields(jpeg_data.JpegData.__proto__),
    [__JpegData_input]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__JpegData_input_isSet]: dart.fieldType(core.bool),
    [__JpegData_jfif]: dart.fieldType(dart.nullable(jpeg_jfif.JpegJfif)),
    [__JpegData_jfif_isSet]: dart.fieldType(core.bool),
    adobe: dart.fieldType(dart.nullable(jpeg_adobe.JpegAdobe)),
    frame: dart.fieldType(dart.nullable(jpeg_frame.JpegFrame)),
    resetInterval: dart.fieldType(dart.nullable(core.int)),
    exif: dart.finalFieldType(exif_data.ExifData),
    quantizationTables: dart.finalFieldType(core.List$(dart.nullable(typed_data.Int16List))),
    frames: dart.finalFieldType(core.List$(dart.nullable(jpeg_frame.JpegFrame))),
    huffmanTablesAC: dart.finalFieldType(core.List$(dart.nullable(core.List))),
    huffmanTablesDC: dart.finalFieldType(core.List$(dart.nullable(core.List))),
    components: dart.finalFieldType(core.List$(_component_data.ComponentData))
  }));
  dart.defineLazy(jpeg_data.JpegData, {
    /*jpeg_data.JpegData.CRR*/get CRR() {
      return C[1] || CT.C1;
    },
    /*jpeg_data.JpegData.CRG*/get CRG() {
      return C[2] || CT.C2;
    },
    /*jpeg_data.JpegData.CBG*/get CBG() {
      return C[3] || CT.C3;
    },
    /*jpeg_data.JpegData.CBB*/get CBB() {
      return C[4] || CT.C4;
    }
  }, false);
  jpeg_data._JpegHuffman = class _JpegHuffman extends core.Object {};
  (jpeg_data._JpegHuffman.new = function() {
    this.children = [];
    this.index = 0;
    ;
  }).prototype = jpeg_data._JpegHuffman.prototype;
  dart.addTypeTests(jpeg_data._JpegHuffman);
  dart.addTypeCaches(jpeg_data._JpegHuffman);
  dart.setLibraryUri(jpeg_data._JpegHuffman, I[2]);
  dart.setFieldSignature(jpeg_data._JpegHuffman, () => ({
    __proto__: dart.getFields(jpeg_data._JpegHuffman.__proto__),
    children: dart.finalFieldType(core.List),
    index: dart.fieldType(core.int)
  }));
  dart.trackLibraries("packages/image/src/formats/jpeg/_jpeg_quantize_html.dart", {
    "package:image/src/formats/jpeg/_jpeg_quantize_html.dart": _jpeg_quantize_html,
    "package:image/src/formats/jpeg/jpeg_data.dart": jpeg_data
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["_jpeg_quantize_html.dart","jpeg_data.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../D:/packages/image/src/formats/jpeg/_jpeg_quantize_html.dart.lib.js"}');
  // Exports:
  return {
    src__formats__jpeg___jpeg_quantize_html: _jpeg_quantize_html,
    src__formats__jpeg__jpeg_data: jpeg_data
  };
}));

//# sourceMappingURL=_jpeg_quantize_html.dart.lib.js.map
