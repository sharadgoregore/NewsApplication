define(['dart_sdk', 'packages/image/src/image_exception.dart', 'packages/image/src/util/input_buffer.dart'], (function load__packages__image__src__formats__tiff__tiff_lzw_decoder_dart(dart_sdk, packages__image__src__image_exception$46dart, packages__image__src__util__input_buffer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const image_exception = packages__image__src__image_exception$46dart.src__image_exception;
  const input_buffer = packages__image__src__util__input_buffer$46dart.src__util__input_buffer;
  var tiff_lzw_decoder = Object.create(dart.library);
  var $length = dartx.length;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $rightShift = dartx['>>'];
  var $fillRange = dartx.fillRange;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList([511, 1023, 2047, 4095], T.intL());
    }
  }, false);
  var C = [void 0];
  var I = [
    "file:///C:/Users/shara/Flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.2/lib/src/formats/tiff/tiff_lzw_decoder.dart",
    "package:image/src/formats/tiff/tiff_lzw_decoder.dart"
  ];
  var _bitsToGet = dart.privateName(tiff_lzw_decoder, "_bitsToGet");
  var _bytePointer = dart.privateName(tiff_lzw_decoder, "_bytePointer");
  var _nextData = dart.privateName(tiff_lzw_decoder, "_nextData");
  var _nextBits = dart.privateName(tiff_lzw_decoder, "_nextBits");
  var __LzwDecoder__data = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_data");
  var __LzwDecoder__data_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_data#isSet");
  var __LzwDecoder__dataLength = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_dataLength");
  var __LzwDecoder__dataLength_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_dataLength#isSet");
  var __LzwDecoder__out = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_out");
  var __LzwDecoder__out_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_out#isSet");
  var __LzwDecoder__outPointer = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_outPointer");
  var __LzwDecoder__outPointer_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_outPointer#isSet");
  var _buffer = dart.privateName(tiff_lzw_decoder, "_buffer");
  var __LzwDecoder__table = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_table");
  var __LzwDecoder__table_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_table#isSet");
  var __LzwDecoder__prefix = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_prefix");
  var __LzwDecoder__prefix_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_prefix#isSet");
  var _tableIndex = dart.privateName(tiff_lzw_decoder, "_tableIndex");
  var __LzwDecoder__bufferLength = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_bufferLength");
  var __LzwDecoder__bufferLength_isSet = dart.privateName(tiff_lzw_decoder, "_#LzwDecoder#_bufferLength#isSet");
  var _out = dart.privateName(tiff_lzw_decoder, "_out");
  var _outPointer = dart.privateName(tiff_lzw_decoder, "_outPointer");
  var _data = dart.privateName(tiff_lzw_decoder, "_data");
  var _dataLength = dart.privateName(tiff_lzw_decoder, "_dataLength");
  var _initializeStringTable = dart.privateName(tiff_lzw_decoder, "_initializeStringTable");
  var _getNextCode = dart.privateName(tiff_lzw_decoder, "_getNextCode");
  var _bufferLength = dart.privateName(tiff_lzw_decoder, "_bufferLength");
  var _getString = dart.privateName(tiff_lzw_decoder, "_getString");
  var _addString = dart.privateName(tiff_lzw_decoder, "_addString");
  var _table = dart.privateName(tiff_lzw_decoder, "_table");
  var _prefix = dart.privateName(tiff_lzw_decoder, "_prefix");
  tiff_lzw_decoder.LzwDecoder = class LzwDecoder extends core.Object {
    decode(p, out) {
      let t0, t0$, t0$0, t0$1;
      if (p == null) dart.nullFailed(I[0], 7, 27, "p");
      if (out == null) dart.nullFailed(I[0], 7, 40, "out");
      this[_out] = out;
      let outLen = out[$length];
      this[_outPointer] = 0;
      this[_data] = typed_data.Uint8List.as(p.buffer);
      this[_dataLength] = this[_data][$length];
      this[_bytePointer] = p.offset;
      if (this[_data][$_get](0) === 0 && this[_data][$_get](1) === 1) {
        dart.throw(new image_exception.ImageException.new("Invalid LZW Data"));
      }
      this[_initializeStringTable]();
      this[_nextData] = 0;
      this[_nextBits] = 0;
      let oldCode = 0;
      let code = this[_getNextCode]();
      while (code !== 257 && dart.notNull(this[_outPointer]) < dart.notNull(outLen)) {
        if (code === 256) {
          this[_initializeStringTable]();
          code = this[_getNextCode]();
          this[_bufferLength] = 0;
          if (code === 257) {
            break;
          }
          this[_out][$_set]((t0 = this[_outPointer], this[_outPointer] = dart.notNull(t0) + 1, t0), code);
          oldCode = code;
        } else {
          if (dart.notNull(code) < dart.nullCheck(this[_tableIndex])) {
            this[_getString](code);
            for (let i = dart.notNull(this[_bufferLength]) - 1; i >= 0; i = i - 1) {
              this[_out][$_set]((t0$ = this[_outPointer], this[_outPointer] = dart.notNull(t0$) + 1, t0$), this[_buffer][$_get](i));
            }
            this[_addString](oldCode, this[_buffer][$_get](dart.notNull(this[_bufferLength]) - 1));
            oldCode = code;
          } else {
            this[_getString](oldCode);
            for (let i = dart.notNull(this[_bufferLength]) - 1; i >= 0; i = i - 1) {
              this[_out][$_set]((t0$0 = this[_outPointer], this[_outPointer] = dart.notNull(t0$0) + 1, t0$0), this[_buffer][$_get](i));
            }
            this[_out][$_set]((t0$1 = this[_outPointer], this[_outPointer] = dart.notNull(t0$1) + 1, t0$1), this[_buffer][$_get](dart.notNull(this[_bufferLength]) - 1));
            this[_addString](oldCode, this[_buffer][$_get](dart.notNull(this[_bufferLength]) - 1));
            oldCode = code;
          }
        }
        code = this[_getNextCode]();
      }
    }
    [_addString](string, newString) {
      if (string == null) dart.nullFailed(I[0], 66, 23, "string");
      if (newString == null) dart.nullFailed(I[0], 66, 35, "newString");
      this[_table][$_set](dart.nullCheck(this[_tableIndex]), newString);
      this[_prefix][$_set](dart.nullCheck(this[_tableIndex]), string);
      this[_tableIndex] = dart.nullCheck(this[_tableIndex]) + 1;
      if (this[_tableIndex] === 511) {
        this[_bitsToGet] = 10;
      } else if (this[_tableIndex] === 1023) {
        this[_bitsToGet] = 11;
      } else if (this[_tableIndex] === 2047) {
        this[_bitsToGet] = 12;
      }
    }
    [_getString](code) {
      let t0, t0$;
      if (code == null) dart.nullFailed(I[0], 80, 23, "code");
      this[_bufferLength] = 0;
      let c = code;
      this[_buffer][$_set]((t0 = this[_bufferLength], this[_bufferLength] = dart.notNull(t0) + 1, t0), this[_table][$_get](c));
      c = this[_prefix][$_get](c);
      while (c !== 4098) {
        this[_buffer][$_set]((t0$ = this[_bufferLength], this[_bufferLength] = dart.notNull(t0$) + 1, t0$), this[_table][$_get](c));
        c = this[_prefix][$_get](c);
      }
    }
    [_getNextCode]() {
      let t0;
      if (dart.notNull(this[_bytePointer]) >= dart.notNull(this[_dataLength])) {
        return 257;
      }
      while (dart.notNull(this[_nextBits]) < dart.notNull(this[_bitsToGet])) {
        if (dart.notNull(this[_bytePointer]) >= dart.notNull(this[_dataLength])) {
          return 257;
        }
        this[_nextData] = ((dart.notNull(this[_nextData]) << 8 >>> 0) + dart.notNull(this[_data][$_get]((t0 = this[_bytePointer], this[_bytePointer] = dart.notNull(t0) + 1, t0))) & 4294967295) >>> 0;
        this[_nextBits] = dart.notNull(this[_nextBits]) + 8;
      }
      this[_nextBits] = dart.notNull(this[_nextBits]) - dart.notNull(this[_bitsToGet]);
      let code = (this[_nextData][$rightShift](this[_nextBits]) & dart.notNull(tiff_lzw_decoder.LzwDecoder.AND_TABLE[$_get](dart.notNull(this[_bitsToGet]) - 9))) >>> 0;
      return code;
    }
    [_initializeStringTable]() {
      this[_table] = _native_typed_data.NativeUint8List.new(4095 + 1);
      this[_prefix] = _native_typed_data.NativeUint32List.new(4095 + 1);
      this[_prefix][$fillRange](0, this[_prefix][$length], 4098);
      for (let i = 0; i < 256; i = i + 1) {
        this[_table][$_set](i, i);
      }
      this[_bitsToGet] = 9;
      this[_tableIndex] = 258;
    }
    get [_data]() {
      let t0;
      return dart.test(this[__LzwDecoder__data_isSet]) ? (t0 = this[__LzwDecoder__data], t0) : dart.throw(new _internal.LateError.fieldNI("_data"));
    }
    set [_data](t0) {
      if (t0 == null) dart.nullFailed(I[0], 131, 18, "null");
      this[__LzwDecoder__data_isSet] = true;
      this[__LzwDecoder__data] = t0;
    }
    get [_dataLength]() {
      let t1;
      return dart.test(this[__LzwDecoder__dataLength_isSet]) ? (t1 = this[__LzwDecoder__dataLength], t1) : dart.throw(new _internal.LateError.fieldNI("_dataLength"));
    }
    set [_dataLength](t1) {
      if (t1 == null) dart.nullFailed(I[0], 132, 12, "null");
      this[__LzwDecoder__dataLength_isSet] = true;
      this[__LzwDecoder__dataLength] = t1;
    }
    get [_out]() {
      let t2;
      return dart.test(this[__LzwDecoder__out_isSet]) ? (t2 = this[__LzwDecoder__out], t2) : dart.throw(new _internal.LateError.fieldNI("_out"));
    }
    set [_out](t2) {
      if (t2 == null) dart.nullFailed(I[0], 134, 18, "null");
      this[__LzwDecoder__out_isSet] = true;
      this[__LzwDecoder__out] = t2;
    }
    get [_outPointer]() {
      let t3;
      return dart.test(this[__LzwDecoder__outPointer_isSet]) ? (t3 = this[__LzwDecoder__outPointer], t3) : dart.throw(new _internal.LateError.fieldNI("_outPointer"));
    }
    set [_outPointer](t3) {
      if (t3 == null) dart.nullFailed(I[0], 135, 12, "null");
      this[__LzwDecoder__outPointer_isSet] = true;
      this[__LzwDecoder__outPointer] = t3;
    }
    get [_table]() {
      let t4;
      return dart.test(this[__LzwDecoder__table_isSet]) ? (t4 = this[__LzwDecoder__table], t4) : dart.throw(new _internal.LateError.fieldNI("_table"));
    }
    set [_table](t4) {
      if (t4 == null) dart.nullFailed(I[0], 138, 18, "null");
      this[__LzwDecoder__table_isSet] = true;
      this[__LzwDecoder__table] = t4;
    }
    get [_prefix]() {
      let t5;
      return dart.test(this[__LzwDecoder__prefix_isSet]) ? (t5 = this[__LzwDecoder__prefix], t5) : dart.throw(new _internal.LateError.fieldNI("_prefix"));
    }
    set [_prefix](t5) {
      if (t5 == null) dart.nullFailed(I[0], 139, 19, "null");
      this[__LzwDecoder__prefix_isSet] = true;
      this[__LzwDecoder__prefix] = t5;
    }
    get [_bufferLength]() {
      let t6;
      return dart.test(this[__LzwDecoder__bufferLength_isSet]) ? (t6 = this[__LzwDecoder__bufferLength], t6) : dart.throw(new _internal.LateError.fieldNI("_bufferLength"));
    }
    set [_bufferLength](t6) {
      if (t6 == null) dart.nullFailed(I[0], 141, 12, "null");
      this[__LzwDecoder__bufferLength_isSet] = true;
      this[__LzwDecoder__bufferLength] = t6;
    }
  };
  (tiff_lzw_decoder.LzwDecoder.new = function() {
    this[_bitsToGet] = 9;
    this[_bytePointer] = 0;
    this[_nextData] = 0;
    this[_nextBits] = 0;
    this[__LzwDecoder__data] = null;
    this[__LzwDecoder__data_isSet] = false;
    this[__LzwDecoder__dataLength] = null;
    this[__LzwDecoder__dataLength_isSet] = false;
    this[__LzwDecoder__out] = null;
    this[__LzwDecoder__out_isSet] = false;
    this[__LzwDecoder__outPointer] = null;
    this[__LzwDecoder__outPointer_isSet] = false;
    this[_buffer] = _native_typed_data.NativeUint8List.new(4096);
    this[__LzwDecoder__table] = null;
    this[__LzwDecoder__table_isSet] = false;
    this[__LzwDecoder__prefix] = null;
    this[__LzwDecoder__prefix_isSet] = false;
    this[_tableIndex] = null;
    this[__LzwDecoder__bufferLength] = null;
    this[__LzwDecoder__bufferLength_isSet] = false;
    ;
  }).prototype = tiff_lzw_decoder.LzwDecoder.prototype;
  dart.addTypeTests(tiff_lzw_decoder.LzwDecoder);
  dart.addTypeCaches(tiff_lzw_decoder.LzwDecoder);
  dart.setMethodSignature(tiff_lzw_decoder.LzwDecoder, () => ({
    __proto__: dart.getMethods(tiff_lzw_decoder.LzwDecoder.__proto__),
    decode: dart.fnType(dart.void, [input_buffer.InputBuffer, core.List$(core.int)]),
    [_addString]: dart.fnType(dart.void, [core.int, core.int]),
    [_getString]: dart.fnType(dart.void, [core.int]),
    [_getNextCode]: dart.fnType(core.int, []),
    [_initializeStringTable]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(tiff_lzw_decoder.LzwDecoder, () => ({
    __proto__: dart.getGetters(tiff_lzw_decoder.LzwDecoder.__proto__),
    [_data]: typed_data.Uint8List,
    [_dataLength]: core.int,
    [_out]: core.List$(core.int),
    [_outPointer]: core.int,
    [_table]: typed_data.Uint8List,
    [_prefix]: typed_data.Uint32List,
    [_bufferLength]: core.int
  }));
  dart.setSetterSignature(tiff_lzw_decoder.LzwDecoder, () => ({
    __proto__: dart.getSetters(tiff_lzw_decoder.LzwDecoder.__proto__),
    [_data]: typed_data.Uint8List,
    [_dataLength]: core.int,
    [_out]: core.List$(core.int),
    [_outPointer]: core.int,
    [_table]: typed_data.Uint8List,
    [_prefix]: typed_data.Uint32List,
    [_bufferLength]: core.int
  }));
  dart.setLibraryUri(tiff_lzw_decoder.LzwDecoder, I[1]);
  dart.setFieldSignature(tiff_lzw_decoder.LzwDecoder, () => ({
    __proto__: dart.getFields(tiff_lzw_decoder.LzwDecoder.__proto__),
    [_bitsToGet]: dart.fieldType(core.int),
    [_bytePointer]: dart.fieldType(core.int),
    [_nextData]: dart.fieldType(core.int),
    [_nextBits]: dart.fieldType(core.int),
    [__LzwDecoder__data]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [__LzwDecoder__data_isSet]: dart.fieldType(core.bool),
    [__LzwDecoder__dataLength]: dart.fieldType(dart.nullable(core.int)),
    [__LzwDecoder__dataLength_isSet]: dart.fieldType(core.bool),
    [__LzwDecoder__out]: dart.fieldType(dart.nullable(core.List$(core.int))),
    [__LzwDecoder__out_isSet]: dart.fieldType(core.bool),
    [__LzwDecoder__outPointer]: dart.fieldType(dart.nullable(core.int)),
    [__LzwDecoder__outPointer_isSet]: dart.fieldType(core.bool),
    [_buffer]: dart.finalFieldType(typed_data.Uint8List),
    [__LzwDecoder__table]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [__LzwDecoder__table_isSet]: dart.fieldType(core.bool),
    [__LzwDecoder__prefix]: dart.fieldType(dart.nullable(typed_data.Uint32List)),
    [__LzwDecoder__prefix_isSet]: dart.fieldType(core.bool),
    [_tableIndex]: dart.fieldType(dart.nullable(core.int)),
    [__LzwDecoder__bufferLength]: dart.fieldType(dart.nullable(core.int)),
    [__LzwDecoder__bufferLength_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(tiff_lzw_decoder.LzwDecoder, {
    /*tiff_lzw_decoder.LzwDecoder.LZ_MAX_CODE*/get LZ_MAX_CODE() {
      return 4095;
    },
    /*tiff_lzw_decoder.LzwDecoder.NO_SUCH_CODE*/get NO_SUCH_CODE() {
      return 4098;
    },
    /*tiff_lzw_decoder.LzwDecoder.AND_TABLE*/get AND_TABLE() {
      return C[0] || CT.C0;
    }
  }, false);
  dart.trackLibraries("packages/image/src/formats/tiff/tiff_lzw_decoder.dart", {
    "package:image/src/formats/tiff/tiff_lzw_decoder.dart": tiff_lzw_decoder
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["tiff_lzw_decoder.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../../D:/packages/image/src/formats/tiff/tiff_lzw_decoder.dart.lib.js"}');
  // Exports:
  return {
    src__formats__tiff__tiff_lzw_decoder: tiff_lzw_decoder
  };
}));

//# sourceMappingURL=tiff_lzw_decoder.dart.lib.js.map
