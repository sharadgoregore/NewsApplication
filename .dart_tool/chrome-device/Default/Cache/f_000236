define(['dart_sdk', 'packages/image/src/util/input_buffer.dart', 'packages/image/src/internal/bit_operators.dart', 'packages/image/src/formats/webp/vp8_bit_reader.dart', 'packages/image/src/image.dart', 'packages/image/src/formats/webp/webp_alpha.dart', 'packages/image/src/formats/webp/webp_info.dart'], (function load__packages__image__src__formats__webp__vp8_types_dart(dart_sdk, packages__image__src__util__input_buffer$46dart, packages__image__src__internal__bit_operators$46dart, packages__image__src__formats__webp__vp8_bit_reader$46dart, packages__image__src__image$46dart, packages__image__src__formats__webp__webp_alpha$46dart, packages__image__src__formats__webp__webp_info$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _internal = dart_sdk._internal;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const input_buffer = packages__image__src__util__input_buffer$46dart.src__util__input_buffer;
  const bit_operators = packages__image__src__internal__bit_operators$46dart.src__internal__bit_operators;
  const vp8_bit_reader = packages__image__src__formats__webp__vp8_bit_reader$46dart.src__formats__webp__vp8_bit_reader;
  const image = packages__image__src__image$46dart.src__image;
  const webp_alpha = packages__image__src__formats__webp__webp_alpha$46dart.src__formats__webp__webp_alpha;
  const webp_info = packages__image__src__formats__webp__webp_info$46dart.src__formats__webp__webp_info;
  var vp8_types = Object.create(dart.library);
  var vp8_filter = Object.create(dart.library);
  var vp8 = Object.create(dart.library);
  var $length = dartx.length;
  var $fillRange = dartx.fillRange;
  var $setRange = dartx.setRange;
  var $leftShift = dartx['<<'];
  var $toInt = dartx.toInt;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $rightShift = dartx['>>'];
  var $truncate = dartx.truncate;
  dart._checkModuleNullSafetyMode(false);
  var T = {
    ListOfUint8List: () => (T.ListOfUint8List = dart.constFn(core.List$(typed_data.Uint8List)))(),
    intToUint8List: () => (T.intToUint8List = dart.constFn(dart.fnType(typed_data.Uint8List, [core.int])))(),
    ListOfVP8BandProbas: () => (T.ListOfVP8BandProbas = dart.constFn(core.List$(vp8_types.VP8BandProbas)))(),
    ListOfListOfVP8BandProbas: () => (T.ListOfListOfVP8BandProbas = dart.constFn(core.List$(T.ListOfVP8BandProbas())))(),
    intToVP8BandProbas: () => (T.intToVP8BandProbas = dart.constFn(dart.fnType(vp8_types.VP8BandProbas, [core.int])))(),
    intToListOfVP8BandProbas: () => (T.intToListOfVP8BandProbas = dart.constFn(dart.fnType(T.ListOfVP8BandProbas(), [core.int])))(),
    intL: () => (T.intL = dart.constFn(dart.legacy(core.int)))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    InputBufferTovoid: () => (T.InputBufferTovoid = dart.constFn(dart.fnType(dart.void, [input_buffer.InputBuffer])))(),
    InputBufferL: () => (T.InputBufferL = dart.constFn(dart.legacy(input_buffer.InputBuffer)))(),
    InputBufferLTovoid: () => (T.InputBufferLTovoid = dart.constFn(dart.fnType(dart.void, [T.InputBufferL()])))(),
    InputBufferLToLvoid: () => (T.InputBufferLToLvoid = dart.constFn(dart.legacy(T.InputBufferLTovoid())))(),
    VP8BitReaderN: () => (T.VP8BitReaderN = dart.constFn(dart.nullable(vp8_bit_reader.VP8BitReader)))(),
    ListOfVP8BitReaderN: () => (T.ListOfVP8BitReaderN = dart.constFn(core.List$(T.VP8BitReaderN())))(),
    VP8QuantMatrixN: () => (T.VP8QuantMatrixN = dart.constFn(dart.nullable(vp8_types.VP8QuantMatrix)))(),
    ListOfVP8QuantMatrixN: () => (T.ListOfVP8QuantMatrixN = dart.constFn(core.List$(T.VP8QuantMatrixN())))(),
    ListOfVP8FInfo: () => (T.ListOfVP8FInfo = dart.constFn(core.List$(vp8_types.VP8FInfo)))(),
    ListOfListOfVP8FInfo: () => (T.ListOfListOfVP8FInfo = dart.constFn(core.List$(T.ListOfVP8FInfo())))(),
    JSArrayOfVP8FInfo: () => (T.JSArrayOfVP8FInfo = dart.constFn(_interceptors.JSArray$(vp8_types.VP8FInfo)))(),
    intToListOfVP8FInfo: () => (T.intToListOfVP8FInfo = dart.constFn(dart.fnType(T.ListOfVP8FInfo(), [core.int])))(),
    ListOfVP8TopSamples: () => (T.ListOfVP8TopSamples = dart.constFn(core.List$(vp8_types.VP8TopSamples)))(),
    intToVP8TopSamples: () => (T.intToVP8TopSamples = dart.constFn(dart.fnType(vp8_types.VP8TopSamples, [core.int])))(),
    ListOfVP8MB: () => (T.ListOfVP8MB = dart.constFn(core.List$(vp8_types.VP8MB)))(),
    intToVP8MB: () => (T.intToVP8MB = dart.constFn(dart.fnType(vp8_types.VP8MB, [core.int])))(),
    ListOfVP8MBData: () => (T.ListOfVP8MBData = dart.constFn(core.List$(vp8_types.VP8MBData)))(),
    intToVP8MBData: () => (T.intToVP8MBData = dart.constFn(dart.fnType(vp8_types.VP8MBData, [core.int])))(),
    VP8FInfoN: () => (T.VP8FInfoN = dart.constFn(dart.nullable(vp8_types.VP8FInfo)))(),
    ListOfVP8FInfoN: () => (T.ListOfVP8FInfoN = dart.constFn(core.List$(T.VP8FInfoN())))(),
    intAndintToint: () => (T.intAndintToint = dart.constFn(dart.fnType(core.int, [core.int, core.int])))(),
    ListOfintL: () => (T.ListOfintL = dart.constFn(core.List$(T.intL())))(),
    ListLOfintL: () => (T.ListLOfintL = dart.constFn(dart.legacy(T.ListOfintL())))(),
    ListOfListLOfintL: () => (T.ListOfListLOfintL = dart.constFn(core.List$(T.ListLOfintL())))(),
    ListLOfListLOfintL: () => (T.ListLOfListLOfintL = dart.constFn(dart.legacy(T.ListOfListLOfintL())))(),
    ListOfListLOfListLOfintL: () => (T.ListOfListLOfListLOfintL = dart.constFn(core.List$(T.ListLOfListLOfintL())))(),
    ListLOfListLOfListLOfintL: () => (T.ListLOfListLOfListLOfintL = dart.constFn(dart.legacy(T.ListOfListLOfListLOfintL())))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList([232870448, 62068870, 2002758859, 478700138, 1748524117, 347322408, 1250295544, 1239267403, 1694299031, 1549075081, 1244200960, 226410970, 1497413547, 1418876797, 1310313074, 953388137, 201453157, 849442143, 1412953682, 1522215986, 262821809, 1945449447, 1751117530, 1969474786, 1855524483, 1194371053, 1338038726, 1231754556, 1326711802, 1411054348, 1939409714, 651676444, 1875654406, 750483416, 1970679594, 1680198877, 615732321, 175998741, 570692776, 337559399, 1454642563, 1944388323, 1154134383, 673598786, 1941614331, 173075437, 493532923, 221959179, 903560040, 721952387, 2010016661, 1367467504, 2021997500, 10458260, 669379900], T.intL());
    },
    get C2() {
      return C[2] = dart.fn(vp8_filter.VP8Filter.DC4, T.InputBufferTovoid());
    },
    get C3() {
      return C[3] = dart.fn(vp8_filter.VP8Filter.TM4, T.InputBufferTovoid());
    },
    get C4() {
      return C[4] = dart.fn(vp8_filter.VP8Filter.VE4, T.InputBufferTovoid());
    },
    get C5() {
      return C[5] = dart.fn(vp8_filter.VP8Filter.HE4, T.InputBufferTovoid());
    },
    get C6() {
      return C[6] = dart.fn(vp8_filter.VP8Filter.RD4, T.InputBufferTovoid());
    },
    get C7() {
      return C[7] = dart.fn(vp8_filter.VP8Filter.VR4, T.InputBufferTovoid());
    },
    get C8() {
      return C[8] = dart.fn(vp8_filter.VP8Filter.LD4, T.InputBufferTovoid());
    },
    get C9() {
      return C[9] = dart.fn(vp8_filter.VP8Filter.VL4, T.InputBufferTovoid());
    },
    get C10() {
      return C[10] = dart.fn(vp8_filter.VP8Filter.HD4, T.InputBufferTovoid());
    },
    get C11() {
      return C[11] = dart.fn(vp8_filter.VP8Filter.HU4, T.InputBufferTovoid());
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11], T.InputBufferLToLvoid());
    },
    get C13() {
      return C[13] = dart.fn(vp8_filter.VP8Filter.DC16, T.InputBufferTovoid());
    },
    get C14() {
      return C[14] = dart.fn(vp8_filter.VP8Filter.TM16, T.InputBufferTovoid());
    },
    get C15() {
      return C[15] = dart.fn(vp8_filter.VP8Filter.VE16, T.InputBufferTovoid());
    },
    get C16() {
      return C[16] = dart.fn(vp8_filter.VP8Filter.HE16, T.InputBufferTovoid());
    },
    get C17() {
      return C[17] = dart.fn(vp8_filter.VP8Filter.DC16NoTop, T.InputBufferTovoid());
    },
    get C18() {
      return C[18] = dart.fn(vp8_filter.VP8Filter.DC16NoLeft, T.InputBufferTovoid());
    },
    get C19() {
      return C[19] = dart.fn(vp8_filter.VP8Filter.DC16NoTopLeft, T.InputBufferTovoid());
    },
    get C12() {
      return C[12] = dart.constList([C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16, C[17] || CT.C17, C[18] || CT.C18, C[19] || CT.C19], T.InputBufferLToLvoid());
    },
    get C21() {
      return C[21] = dart.fn(vp8_filter.VP8Filter.DC8uv, T.InputBufferTovoid());
    },
    get C22() {
      return C[22] = dart.fn(vp8_filter.VP8Filter.TM8uv, T.InputBufferTovoid());
    },
    get C23() {
      return C[23] = dart.fn(vp8_filter.VP8Filter.VE8uv, T.InputBufferTovoid());
    },
    get C24() {
      return C[24] = dart.fn(vp8_filter.VP8Filter.HE8uv, T.InputBufferTovoid());
    },
    get C25() {
      return C[25] = dart.fn(vp8_filter.VP8Filter.DC8uvNoTop, T.InputBufferTovoid());
    },
    get C26() {
      return C[26] = dart.fn(vp8_filter.VP8Filter.DC8uvNoLeft, T.InputBufferTovoid());
    },
    get C27() {
      return C[27] = dart.fn(vp8_filter.VP8Filter.DC8uvNoTopLeft, T.InputBufferTovoid());
    },
    get C20() {
      return C[20] = dart.constList([C[21] || CT.C21, C[22] || CT.C22, C[23] || CT.C23, C[24] || CT.C24, C[25] || CT.C25, C[26] || CT.C26, C[27] || CT.C27], T.InputBufferLToLvoid());
    },
    get C28() {
      return C[28] = dart.constList([0, 4, 8, 12, 128, 132, 136, 140, 256, 260, 264, 268, 384, 388, 392, 396], T.intL());
    },
    get C29() {
      return C[29] = dart.constList([0, 2, 8], T.intL());
    },
    get C30() {
      return C[30] = dart.constList([0, 1, 2, 3, 6, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0], T.intL());
    },
    get C31() {
      return C[31] = dart.constList([173, 148, 140], T.intL());
    },
    get C32() {
      return C[32] = dart.constList([176, 155, 140, 135], T.intL());
    },
    get C33() {
      return C[33] = dart.constList([180, 157, 141, 134, 130], T.intL());
    },
    get C34() {
      return C[34] = dart.constList([254, 254, 243, 230, 196, 177, 153, 140, 133, 130, 129], T.intL());
    },
    get C35() {
      return C[35] = dart.constList([C[31] || CT.C31, C[32] || CT.C32, C[33] || CT.C33, C[34] || CT.C34], T.ListLOfintL());
    },
    get C36() {
      return C[36] = dart.constList([0, 1, 4, 8, 5, 2, 3, 6, 9, 12, 13, 10, 7, 11, 14, 15], T.intL());
    },
    get C37() {
      return C[37] = dart.constList([0, 1, -1, 2, -2, 3, 4, 6, -3, 5, -4, -5, -6, 7, -7, 8, -8, -9], T.intL());
    },
    get C40() {
      return C[40] = dart.constList([231, 120, 48, 89, 115, 113, 120, 152, 112], T.intL());
    },
    get C41() {
      return C[41] = dart.constList([152, 179, 64, 126, 170, 118, 46, 70, 95], T.intL());
    },
    get C42() {
      return C[42] = dart.constList([175, 69, 143, 80, 85, 82, 72, 155, 103], T.intL());
    },
    get C43() {
      return C[43] = dart.constList([56, 58, 10, 171, 218, 189, 17, 13, 152], T.intL());
    },
    get C44() {
      return C[44] = dart.constList([114, 26, 17, 163, 44, 195, 21, 10, 173], T.intL());
    },
    get C45() {
      return C[45] = dart.constList([121, 24, 80, 195, 26, 62, 44, 64, 85], T.intL());
    },
    get C46() {
      return C[46] = dart.constList([144, 71, 10, 38, 171, 213, 144, 34, 26], T.intL());
    },
    get C47() {
      return C[47] = dart.constList([170, 46, 55, 19, 136, 160, 33, 206, 71], T.intL());
    },
    get C48() {
      return C[48] = dart.constList([63, 20, 8, 114, 114, 208, 12, 9, 226], T.intL());
    },
    get C49() {
      return C[49] = dart.constList([81, 40, 11, 96, 182, 84, 29, 16, 36], T.intL());
    },
    get C39() {
      return C[39] = dart.constList([C[40] || CT.C40, C[41] || CT.C41, C[42] || CT.C42, C[43] || CT.C43, C[44] || CT.C44, C[45] || CT.C45, C[46] || CT.C46, C[47] || CT.C47, C[48] || CT.C48, C[49] || CT.C49], T.ListLOfintL());
    },
    get C51() {
      return C[51] = dart.constList([134, 183, 89, 137, 98, 101, 106, 165, 148], T.intL());
    },
    get C52() {
      return C[52] = dart.constList([72, 187, 100, 130, 157, 111, 32, 75, 80], T.intL());
    },
    get C53() {
      return C[53] = dart.constList([66, 102, 167, 99, 74, 62, 40, 234, 128], T.intL());
    },
    get C54() {
      return C[54] = dart.constList([41, 53, 9, 178, 241, 141, 26, 8, 107], T.intL());
    },
    get C55() {
      return C[55] = dart.constList([74, 43, 26, 146, 73, 166, 49, 23, 157], T.intL());
    },
    get C56() {
      return C[56] = dart.constList([65, 38, 105, 160, 51, 52, 31, 115, 128], T.intL());
    },
    get C57() {
      return C[57] = dart.constList([104, 79, 12, 27, 217, 255, 87, 17, 7], T.intL());
    },
    get C58() {
      return C[58] = dart.constList([87, 68, 71, 44, 114, 51, 15, 186, 23], T.intL());
    },
    get C59() {
      return C[59] = dart.constList([47, 41, 14, 110, 182, 183, 21, 17, 194], T.intL());
    },
    get C60() {
      return C[60] = dart.constList([66, 45, 25, 102, 197, 189, 23, 18, 22], T.intL());
    },
    get C50() {
      return C[50] = dart.constList([C[51] || CT.C51, C[52] || CT.C52, C[53] || CT.C53, C[54] || CT.C54, C[55] || CT.C55, C[56] || CT.C56, C[57] || CT.C57, C[58] || CT.C58, C[59] || CT.C59, C[60] || CT.C60], T.ListLOfintL());
    },
    get C62() {
      return C[62] = dart.constList([88, 88, 147, 150, 42, 46, 45, 196, 205], T.intL());
    },
    get C63() {
      return C[63] = dart.constList([43, 97, 183, 117, 85, 38, 35, 179, 61], T.intL());
    },
    get C64() {
      return C[64] = dart.constList([39, 53, 200, 87, 26, 21, 43, 232, 171], T.intL());
    },
    get C65() {
      return C[65] = dart.constList([56, 34, 51, 104, 114, 102, 29, 93, 77], T.intL());
    },
    get C66() {
      return C[66] = dart.constList([39, 28, 85, 171, 58, 165, 90, 98, 64], T.intL());
    },
    get C67() {
      return C[67] = dart.constList([34, 22, 116, 206, 23, 34, 43, 166, 73], T.intL());
    },
    get C68() {
      return C[68] = dart.constList([107, 54, 32, 26, 51, 1, 81, 43, 31], T.intL());
    },
    get C69() {
      return C[69] = dart.constList([68, 25, 106, 22, 64, 171, 36, 225, 114], T.intL());
    },
    get C70() {
      return C[70] = dart.constList([34, 19, 21, 102, 132, 188, 16, 76, 124], T.intL());
    },
    get C71() {
      return C[71] = dart.constList([62, 18, 78, 95, 85, 57, 50, 48, 51], T.intL());
    },
    get C61() {
      return C[61] = dart.constList([C[62] || CT.C62, C[63] || CT.C63, C[64] || CT.C64, C[65] || CT.C65, C[66] || CT.C66, C[67] || CT.C67, C[68] || CT.C68, C[69] || CT.C69, C[70] || CT.C70, C[71] || CT.C71], T.ListLOfintL());
    },
    get C73() {
      return C[73] = dart.constList([193, 101, 35, 159, 215, 111, 89, 46, 111], T.intL());
    },
    get C74() {
      return C[74] = dart.constList([60, 148, 31, 172, 219, 228, 21, 18, 111], T.intL());
    },
    get C75() {
      return C[75] = dart.constList([112, 113, 77, 85, 179, 255, 38, 120, 114], T.intL());
    },
    get C76() {
      return C[76] = dart.constList([40, 42, 1, 196, 245, 209, 10, 25, 109], T.intL());
    },
    get C77() {
      return C[77] = dart.constList([88, 43, 29, 140, 166, 213, 37, 43, 154], T.intL());
    },
    get C78() {
      return C[78] = dart.constList([61, 63, 30, 155, 67, 45, 68, 1, 209], T.intL());
    },
    get C79() {
      return C[79] = dart.constList([100, 80, 8, 43, 154, 1, 51, 26, 71], T.intL());
    },
    get C80() {
      return C[80] = dart.constList([142, 78, 78, 16, 255, 128, 34, 197, 171], T.intL());
    },
    get C81() {
      return C[81] = dart.constList([41, 40, 5, 102, 211, 183, 4, 1, 221], T.intL());
    },
    get C82() {
      return C[82] = dart.constList([51, 50, 17, 168, 209, 192, 23, 25, 82], T.intL());
    },
    get C72() {
      return C[72] = dart.constList([C[73] || CT.C73, C[74] || CT.C74, C[75] || CT.C75, C[76] || CT.C76, C[77] || CT.C77, C[78] || CT.C78, C[79] || CT.C79, C[80] || CT.C80, C[81] || CT.C81, C[82] || CT.C82], T.ListLOfintL());
    },
    get C84() {
      return C[84] = dart.constList([138, 31, 36, 171, 27, 166, 38, 44, 229], T.intL());
    },
    get C85() {
      return C[85] = dart.constList([67, 87, 58, 169, 82, 115, 26, 59, 179], T.intL());
    },
    get C86() {
      return C[86] = dart.constList([63, 59, 90, 180, 59, 166, 93, 73, 154], T.intL());
    },
    get C87() {
      return C[87] = dart.constList([40, 40, 21, 116, 143, 209, 34, 39, 175], T.intL());
    },
    get C88() {
      return C[88] = dart.constList([47, 15, 16, 183, 34, 223, 49, 45, 183], T.intL());
    },
    get C89() {
      return C[89] = dart.constList([46, 17, 33, 183, 6, 98, 15, 32, 183], T.intL());
    },
    get C90() {
      return C[90] = dart.constList([57, 46, 22, 24, 128, 1, 54, 17, 37], T.intL());
    },
    get C91() {
      return C[91] = dart.constList([65, 32, 73, 115, 28, 128, 23, 128, 205], T.intL());
    },
    get C92() {
      return C[92] = dart.constList([40, 3, 9, 115, 51, 192, 18, 6, 223], T.intL());
    },
    get C93() {
      return C[93] = dart.constList([87, 37, 9, 115, 59, 77, 64, 21, 47], T.intL());
    },
    get C83() {
      return C[83] = dart.constList([C[84] || CT.C84, C[85] || CT.C85, C[86] || CT.C86, C[87] || CT.C87, C[88] || CT.C88, C[89] || CT.C89, C[90] || CT.C90, C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93], T.ListLOfintL());
    },
    get C95() {
      return C[95] = dart.constList([104, 55, 44, 218, 9, 54, 53, 130, 226], T.intL());
    },
    get C96() {
      return C[96] = dart.constList([64, 90, 70, 205, 40, 41, 23, 26, 57], T.intL());
    },
    get C97() {
      return C[97] = dart.constList([54, 57, 112, 184, 5, 41, 38, 166, 213], T.intL());
    },
    get C98() {
      return C[98] = dart.constList([30, 34, 26, 133, 152, 116, 10, 32, 134], T.intL());
    },
    get C99() {
      return C[99] = dart.constList([39, 19, 53, 221, 26, 114, 32, 73, 255], T.intL());
    },
    get C100() {
      return C[100] = dart.constList([31, 9, 65, 234, 2, 15, 1, 118, 73], T.intL());
    },
    get C101() {
      return C[101] = dart.constList([75, 32, 12, 51, 192, 255, 160, 43, 51], T.intL());
    },
    get C102() {
      return C[102] = dart.constList([88, 31, 35, 67, 102, 85, 55, 186, 85], T.intL());
    },
    get C103() {
      return C[103] = dart.constList([56, 21, 23, 111, 59, 205, 45, 37, 192], T.intL());
    },
    get C104() {
      return C[104] = dart.constList([55, 38, 70, 124, 73, 102, 1, 34, 98], T.intL());
    },
    get C94() {
      return C[94] = dart.constList([C[95] || CT.C95, C[96] || CT.C96, C[97] || CT.C97, C[98] || CT.C98, C[99] || CT.C99, C[100] || CT.C100, C[101] || CT.C101, C[102] || CT.C102, C[103] || CT.C103, C[104] || CT.C104], T.ListLOfintL());
    },
    get C106() {
      return C[106] = dart.constList([125, 98, 42, 88, 104, 85, 117, 175, 82], T.intL());
    },
    get C107() {
      return C[107] = dart.constList([95, 84, 53, 89, 128, 100, 113, 101, 45], T.intL());
    },
    get C108() {
      return C[108] = dart.constList([75, 79, 123, 47, 51, 128, 81, 171, 1], T.intL());
    },
    get C109() {
      return C[109] = dart.constList([57, 17, 5, 71, 102, 57, 53, 41, 49], T.intL());
    },
    get C110() {
      return C[110] = dart.constList([38, 33, 13, 121, 57, 73, 26, 1, 85], T.intL());
    },
    get C111() {
      return C[111] = dart.constList([41, 10, 67, 138, 77, 110, 90, 47, 114], T.intL());
    },
    get C112() {
      return C[112] = dart.constList([115, 21, 2, 10, 102, 255, 166, 23, 6], T.intL());
    },
    get C113() {
      return C[113] = dart.constList([101, 29, 16, 10, 85, 128, 101, 196, 26], T.intL());
    },
    get C114() {
      return C[114] = dart.constList([57, 18, 10, 102, 102, 213, 34, 20, 43], T.intL());
    },
    get C115() {
      return C[115] = dart.constList([117, 20, 15, 36, 163, 128, 68, 1, 26], T.intL());
    },
    get C105() {
      return C[105] = dart.constList([C[106] || CT.C106, C[107] || CT.C107, C[108] || CT.C108, C[109] || CT.C109, C[110] || CT.C110, C[111] || CT.C111, C[112] || CT.C112, C[113] || CT.C113, C[114] || CT.C114, C[115] || CT.C115], T.ListLOfintL());
    },
    get C117() {
      return C[117] = dart.constList([102, 61, 71, 37, 34, 53, 31, 243, 192], T.intL());
    },
    get C118() {
      return C[118] = dart.constList([69, 60, 71, 38, 73, 119, 28, 222, 37], T.intL());
    },
    get C119() {
      return C[119] = dart.constList([68, 45, 128, 34, 1, 47, 11, 245, 171], T.intL());
    },
    get C120() {
      return C[120] = dart.constList([62, 17, 19, 70, 146, 85, 55, 62, 70], T.intL());
    },
    get C121() {
      return C[121] = dart.constList([37, 43, 37, 154, 100, 163, 85, 160, 1], T.intL());
    },
    get C122() {
      return C[122] = dart.constList([63, 9, 92, 136, 28, 64, 32, 201, 85], T.intL());
    },
    get C123() {
      return C[123] = dart.constList([75, 15, 9, 9, 64, 255, 184, 119, 16], T.intL());
    },
    get C124() {
      return C[124] = dart.constList([86, 6, 28, 5, 64, 255, 25, 248, 1], T.intL());
    },
    get C125() {
      return C[125] = dart.constList([56, 8, 17, 132, 137, 255, 55, 116, 128], T.intL());
    },
    get C126() {
      return C[126] = dart.constList([58, 15, 20, 82, 135, 57, 26, 121, 40], T.intL());
    },
    get C116() {
      return C[116] = dart.constList([C[117] || CT.C117, C[118] || CT.C118, C[119] || CT.C119, C[120] || CT.C120, C[121] || CT.C121, C[122] || CT.C122, C[123] || CT.C123, C[124] || CT.C124, C[125] || CT.C125, C[126] || CT.C126], T.ListLOfintL());
    },
    get C128() {
      return C[128] = dart.constList([164, 50, 31, 137, 154, 133, 25, 35, 218], T.intL());
    },
    get C129() {
      return C[129] = dart.constList([51, 103, 44, 131, 131, 123, 31, 6, 158], T.intL());
    },
    get C130() {
      return C[130] = dart.constList([86, 40, 64, 135, 148, 224, 45, 183, 128], T.intL());
    },
    get C131() {
      return C[131] = dart.constList([22, 26, 17, 131, 240, 154, 14, 1, 209], T.intL());
    },
    get C132() {
      return C[132] = dart.constList([45, 16, 21, 91, 64, 222, 7, 1, 197], T.intL());
    },
    get C133() {
      return C[133] = dart.constList([56, 21, 39, 155, 60, 138, 23, 102, 213], T.intL());
    },
    get C134() {
      return C[134] = dart.constList([83, 12, 13, 54, 192, 255, 68, 47, 28], T.intL());
    },
    get C135() {
      return C[135] = dart.constList([85, 26, 85, 85, 128, 128, 32, 146, 171], T.intL());
    },
    get C136() {
      return C[136] = dart.constList([18, 11, 7, 63, 144, 171, 4, 4, 246], T.intL());
    },
    get C137() {
      return C[137] = dart.constList([35, 27, 10, 146, 174, 171, 12, 26, 128], T.intL());
    },
    get C127() {
      return C[127] = dart.constList([C[128] || CT.C128, C[129] || CT.C129, C[130] || CT.C130, C[131] || CT.C131, C[132] || CT.C132, C[133] || CT.C133, C[134] || CT.C134, C[135] || CT.C135, C[136] || CT.C136, C[137] || CT.C137], T.ListLOfintL());
    },
    get C139() {
      return C[139] = dart.constList([190, 80, 35, 99, 180, 80, 126, 54, 45], T.intL());
    },
    get C140() {
      return C[140] = dart.constList([85, 126, 47, 87, 176, 51, 41, 20, 32], T.intL());
    },
    get C141() {
      return C[141] = dart.constList([101, 75, 128, 139, 118, 146, 116, 128, 85], T.intL());
    },
    get C142() {
      return C[142] = dart.constList([56, 41, 15, 176, 236, 85, 37, 9, 62], T.intL());
    },
    get C143() {
      return C[143] = dart.constList([71, 30, 17, 119, 118, 255, 17, 18, 138], T.intL());
    },
    get C144() {
      return C[144] = dart.constList([101, 38, 60, 138, 55, 70, 43, 26, 142], T.intL());
    },
    get C145() {
      return C[145] = dart.constList([146, 36, 19, 30, 171, 255, 97, 27, 20], T.intL());
    },
    get C146() {
      return C[146] = dart.constList([138, 45, 61, 62, 219, 1, 81, 188, 64], T.intL());
    },
    get C147() {
      return C[147] = dart.constList([32, 41, 20, 117, 151, 142, 20, 21, 163], T.intL());
    },
    get C148() {
      return C[148] = dart.constList([112, 19, 12, 61, 195, 128, 48, 4, 24], T.intL());
    },
    get C138() {
      return C[138] = dart.constList([C[139] || CT.C139, C[140] || CT.C140, C[141] || CT.C141, C[142] || CT.C142, C[143] || CT.C143, C[144] || CT.C144, C[145] || CT.C145, C[146] || CT.C146, C[147] || CT.C147, C[148] || CT.C148], T.ListLOfintL());
    },
    get C38() {
      return C[38] = dart.constList([C[39] || CT.C39, C[50] || CT.C50, C[61] || CT.C61, C[72] || CT.C72, C[83] || CT.C83, C[94] || CT.C94, C[105] || CT.C105, C[116] || CT.C116, C[127] || CT.C127, C[138] || CT.C138], T.ListLOfListLOfintL());
    },
    get C152() {
      return C[152] = dart.constList([128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C151() {
      return C[151] = dart.constList([C[152] || CT.C152, C[152] || CT.C152, C[152] || CT.C152], T.ListLOfintL());
    },
    get C154() {
      return C[154] = dart.constList([253, 136, 254, 255, 228, 219, 128, 128, 128, 128, 128], T.intL());
    },
    get C155() {
      return C[155] = dart.constList([189, 129, 242, 255, 227, 213, 255, 219, 128, 128, 128], T.intL());
    },
    get C156() {
      return C[156] = dart.constList([106, 126, 227, 252, 214, 209, 255, 255, 128, 128, 128], T.intL());
    },
    get C153() {
      return C[153] = dart.constList([C[154] || CT.C154, C[155] || CT.C155, C[156] || CT.C156], T.ListLOfintL());
    },
    get C158() {
      return C[158] = dart.constList([1, 98, 248, 255, 236, 226, 255, 255, 128, 128, 128], T.intL());
    },
    get C159() {
      return C[159] = dart.constList([181, 133, 238, 254, 221, 234, 255, 154, 128, 128, 128], T.intL());
    },
    get C160() {
      return C[160] = dart.constList([78, 134, 202, 247, 198, 180, 255, 219, 128, 128, 128], T.intL());
    },
    get C157() {
      return C[157] = dart.constList([C[158] || CT.C158, C[159] || CT.C159, C[160] || CT.C160], T.ListLOfintL());
    },
    get C162() {
      return C[162] = dart.constList([1, 185, 249, 255, 243, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C163() {
      return C[163] = dart.constList([184, 150, 247, 255, 236, 224, 128, 128, 128, 128, 128], T.intL());
    },
    get C164() {
      return C[164] = dart.constList([77, 110, 216, 255, 236, 230, 128, 128, 128, 128, 128], T.intL());
    },
    get C161() {
      return C[161] = dart.constList([C[162] || CT.C162, C[163] || CT.C163, C[164] || CT.C164], T.ListLOfintL());
    },
    get C166() {
      return C[166] = dart.constList([1, 101, 251, 255, 241, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C167() {
      return C[167] = dart.constList([170, 139, 241, 252, 236, 209, 255, 255, 128, 128, 128], T.intL());
    },
    get C168() {
      return C[168] = dart.constList([37, 116, 196, 243, 228, 255, 255, 255, 128, 128, 128], T.intL());
    },
    get C165() {
      return C[165] = dart.constList([C[166] || CT.C166, C[167] || CT.C167, C[168] || CT.C168], T.ListLOfintL());
    },
    get C170() {
      return C[170] = dart.constList([1, 204, 254, 255, 245, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C171() {
      return C[171] = dart.constList([207, 160, 250, 255, 238, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C172() {
      return C[172] = dart.constList([102, 103, 231, 255, 211, 171, 128, 128, 128, 128, 128], T.intL());
    },
    get C169() {
      return C[169] = dart.constList([C[170] || CT.C170, C[171] || CT.C171, C[172] || CT.C172], T.ListLOfintL());
    },
    get C174() {
      return C[174] = dart.constList([1, 152, 252, 255, 240, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C175() {
      return C[175] = dart.constList([177, 135, 243, 255, 234, 225, 128, 128, 128, 128, 128], T.intL());
    },
    get C176() {
      return C[176] = dart.constList([80, 129, 211, 255, 194, 224, 128, 128, 128, 128, 128], T.intL());
    },
    get C173() {
      return C[173] = dart.constList([C[174] || CT.C174, C[175] || CT.C175, C[176] || CT.C176], T.ListLOfintL());
    },
    get C178() {
      return C[178] = dart.constList([1, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C179() {
      return C[179] = dart.constList([246, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C180() {
      return C[180] = dart.constList([255, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C177() {
      return C[177] = dart.constList([C[178] || CT.C178, C[179] || CT.C179, C[180] || CT.C180], T.ListLOfintL());
    },
    get C150() {
      return C[150] = dart.constList([C[151] || CT.C151, C[153] || CT.C153, C[157] || CT.C157, C[161] || CT.C161, C[165] || CT.C165, C[169] || CT.C169, C[173] || CT.C173, C[177] || CT.C177], T.ListLOfListLOfintL());
    },
    get C183() {
      return C[183] = dart.constList([198, 35, 237, 223, 193, 187, 162, 160, 145, 155, 62], T.intL());
    },
    get C184() {
      return C[184] = dart.constList([131, 45, 198, 221, 172, 176, 220, 157, 252, 221, 1], T.intL());
    },
    get C185() {
      return C[185] = dart.constList([68, 47, 146, 208, 149, 167, 221, 162, 255, 223, 128], T.intL());
    },
    get C182() {
      return C[182] = dart.constList([C[183] || CT.C183, C[184] || CT.C184, C[185] || CT.C185], T.ListLOfintL());
    },
    get C187() {
      return C[187] = dart.constList([1, 149, 241, 255, 221, 224, 255, 255, 128, 128, 128], T.intL());
    },
    get C188() {
      return C[188] = dart.constList([184, 141, 234, 253, 222, 220, 255, 199, 128, 128, 128], T.intL());
    },
    get C189() {
      return C[189] = dart.constList([81, 99, 181, 242, 176, 190, 249, 202, 255, 255, 128], T.intL());
    },
    get C186() {
      return C[186] = dart.constList([C[187] || CT.C187, C[188] || CT.C188, C[189] || CT.C189], T.ListLOfintL());
    },
    get C191() {
      return C[191] = dart.constList([1, 129, 232, 253, 214, 197, 242, 196, 255, 255, 128], T.intL());
    },
    get C192() {
      return C[192] = dart.constList([99, 121, 210, 250, 201, 198, 255, 202, 128, 128, 128], T.intL());
    },
    get C193() {
      return C[193] = dart.constList([23, 91, 163, 242, 170, 187, 247, 210, 255, 255, 128], T.intL());
    },
    get C190() {
      return C[190] = dart.constList([C[191] || CT.C191, C[192] || CT.C192, C[193] || CT.C193], T.ListLOfintL());
    },
    get C195() {
      return C[195] = dart.constList([1, 200, 246, 255, 234, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C196() {
      return C[196] = dart.constList([109, 178, 241, 255, 231, 245, 255, 255, 128, 128, 128], T.intL());
    },
    get C197() {
      return C[197] = dart.constList([44, 130, 201, 253, 205, 192, 255, 255, 128, 128, 128], T.intL());
    },
    get C194() {
      return C[194] = dart.constList([C[195] || CT.C195, C[196] || CT.C196, C[197] || CT.C197], T.ListLOfintL());
    },
    get C199() {
      return C[199] = dart.constList([1, 132, 239, 251, 219, 209, 255, 165, 128, 128, 128], T.intL());
    },
    get C200() {
      return C[200] = dart.constList([94, 136, 225, 251, 218, 190, 255, 255, 128, 128, 128], T.intL());
    },
    get C201() {
      return C[201] = dart.constList([22, 100, 174, 245, 186, 161, 255, 199, 128, 128, 128], T.intL());
    },
    get C198() {
      return C[198] = dart.constList([C[199] || CT.C199, C[200] || CT.C200, C[201] || CT.C201], T.ListLOfintL());
    },
    get C203() {
      return C[203] = dart.constList([1, 182, 249, 255, 232, 235, 128, 128, 128, 128, 128], T.intL());
    },
    get C204() {
      return C[204] = dart.constList([124, 143, 241, 255, 227, 234, 128, 128, 128, 128, 128], T.intL());
    },
    get C205() {
      return C[205] = dart.constList([35, 77, 181, 251, 193, 211, 255, 205, 128, 128, 128], T.intL());
    },
    get C202() {
      return C[202] = dart.constList([C[203] || CT.C203, C[204] || CT.C204, C[205] || CT.C205], T.ListLOfintL());
    },
    get C207() {
      return C[207] = dart.constList([1, 157, 247, 255, 236, 231, 255, 255, 128, 128, 128], T.intL());
    },
    get C208() {
      return C[208] = dart.constList([121, 141, 235, 255, 225, 227, 255, 255, 128, 128, 128], T.intL());
    },
    get C209() {
      return C[209] = dart.constList([45, 99, 188, 251, 195, 217, 255, 224, 128, 128, 128], T.intL());
    },
    get C206() {
      return C[206] = dart.constList([C[207] || CT.C207, C[208] || CT.C208, C[209] || CT.C209], T.ListLOfintL());
    },
    get C211() {
      return C[211] = dart.constList([1, 1, 251, 255, 213, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C212() {
      return C[212] = dart.constList([203, 1, 248, 255, 255, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C213() {
      return C[213] = dart.constList([137, 1, 177, 255, 224, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C210() {
      return C[210] = dart.constList([C[211] || CT.C211, C[212] || CT.C212, C[213] || CT.C213], T.ListLOfintL());
    },
    get C181() {
      return C[181] = dart.constList([C[182] || CT.C182, C[186] || CT.C186, C[190] || CT.C190, C[194] || CT.C194, C[198] || CT.C198, C[202] || CT.C202, C[206] || CT.C206, C[210] || CT.C210], T.ListLOfListLOfintL());
    },
    get C216() {
      return C[216] = dart.constList([253, 9, 248, 251, 207, 208, 255, 192, 128, 128, 128], T.intL());
    },
    get C217() {
      return C[217] = dart.constList([175, 13, 224, 243, 193, 185, 249, 198, 255, 255, 128], T.intL());
    },
    get C218() {
      return C[218] = dart.constList([73, 17, 171, 221, 161, 179, 236, 167, 255, 234, 128], T.intL());
    },
    get C215() {
      return C[215] = dart.constList([C[216] || CT.C216, C[217] || CT.C217, C[218] || CT.C218], T.ListLOfintL());
    },
    get C220() {
      return C[220] = dart.constList([1, 95, 247, 253, 212, 183, 255, 255, 128, 128, 128], T.intL());
    },
    get C221() {
      return C[221] = dart.constList([239, 90, 244, 250, 211, 209, 255, 255, 128, 128, 128], T.intL());
    },
    get C222() {
      return C[222] = dart.constList([155, 77, 195, 248, 188, 195, 255, 255, 128, 128, 128], T.intL());
    },
    get C219() {
      return C[219] = dart.constList([C[220] || CT.C220, C[221] || CT.C221, C[222] || CT.C222], T.ListLOfintL());
    },
    get C224() {
      return C[224] = dart.constList([1, 24, 239, 251, 218, 219, 255, 205, 128, 128, 128], T.intL());
    },
    get C225() {
      return C[225] = dart.constList([201, 51, 219, 255, 196, 186, 128, 128, 128, 128, 128], T.intL());
    },
    get C226() {
      return C[226] = dart.constList([69, 46, 190, 239, 201, 218, 255, 228, 128, 128, 128], T.intL());
    },
    get C223() {
      return C[223] = dart.constList([C[224] || CT.C224, C[225] || CT.C225, C[226] || CT.C226], T.ListLOfintL());
    },
    get C228() {
      return C[228] = dart.constList([1, 191, 251, 255, 255, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C229() {
      return C[229] = dart.constList([223, 165, 249, 255, 213, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C230() {
      return C[230] = dart.constList([141, 124, 248, 255, 255, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C227() {
      return C[227] = dart.constList([C[228] || CT.C228, C[229] || CT.C229, C[230] || CT.C230], T.ListLOfintL());
    },
    get C232() {
      return C[232] = dart.constList([1, 16, 248, 255, 255, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C233() {
      return C[233] = dart.constList([190, 36, 230, 255, 236, 255, 128, 128, 128, 128, 128], T.intL());
    },
    get C234() {
      return C[234] = dart.constList([149, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C231() {
      return C[231] = dart.constList([C[232] || CT.C232, C[233] || CT.C233, C[234] || CT.C234], T.ListLOfintL());
    },
    get C236() {
      return C[236] = dart.constList([1, 226, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C237() {
      return C[237] = dart.constList([247, 192, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C238() {
      return C[238] = dart.constList([240, 128, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C235() {
      return C[235] = dart.constList([C[236] || CT.C236, C[237] || CT.C237, C[238] || CT.C238], T.ListLOfintL());
    },
    get C240() {
      return C[240] = dart.constList([1, 134, 252, 255, 255, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C241() {
      return C[241] = dart.constList([213, 62, 250, 255, 255, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C242() {
      return C[242] = dart.constList([55, 93, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C239() {
      return C[239] = dart.constList([C[240] || CT.C240, C[241] || CT.C241, C[242] || CT.C242], T.ListLOfintL());
    },
    get C214() {
      return C[214] = dart.constList([C[215] || CT.C215, C[219] || CT.C219, C[223] || CT.C223, C[227] || CT.C227, C[231] || CT.C231, C[235] || CT.C235, C[239] || CT.C239, C[151] || CT.C151], T.ListLOfListLOfintL());
    },
    get C245() {
      return C[245] = dart.constList([202, 24, 213, 235, 186, 191, 220, 160, 240, 175, 255], T.intL());
    },
    get C246() {
      return C[246] = dart.constList([126, 38, 182, 232, 169, 184, 228, 174, 255, 187, 128], T.intL());
    },
    get C247() {
      return C[247] = dart.constList([61, 46, 138, 219, 151, 178, 240, 170, 255, 216, 128], T.intL());
    },
    get C244() {
      return C[244] = dart.constList([C[245] || CT.C245, C[246] || CT.C246, C[247] || CT.C247], T.ListLOfintL());
    },
    get C249() {
      return C[249] = dart.constList([1, 112, 230, 250, 199, 191, 247, 159, 255, 255, 128], T.intL());
    },
    get C250() {
      return C[250] = dart.constList([166, 109, 228, 252, 211, 215, 255, 174, 128, 128, 128], T.intL());
    },
    get C251() {
      return C[251] = dart.constList([39, 77, 162, 232, 172, 180, 245, 178, 255, 255, 128], T.intL());
    },
    get C248() {
      return C[248] = dart.constList([C[249] || CT.C249, C[250] || CT.C250, C[251] || CT.C251], T.ListLOfintL());
    },
    get C253() {
      return C[253] = dart.constList([1, 52, 220, 246, 198, 199, 249, 220, 255, 255, 128], T.intL());
    },
    get C254() {
      return C[254] = dart.constList([124, 74, 191, 243, 183, 193, 250, 221, 255, 255, 128], T.intL());
    },
    get C255() {
      return C[255] = dart.constList([24, 71, 130, 219, 154, 170, 243, 182, 255, 255, 128], T.intL());
    },
    get C252() {
      return C[252] = dart.constList([C[253] || CT.C253, C[254] || CT.C254, C[255] || CT.C255], T.ListLOfintL());
    },
    get C257() {
      return C[257] = dart.constList([1, 182, 225, 249, 219, 240, 255, 224, 128, 128, 128], T.intL());
    },
    get C258() {
      return C[258] = dart.constList([149, 150, 226, 252, 216, 205, 255, 171, 128, 128, 128], T.intL());
    },
    get C259() {
      return C[259] = dart.constList([28, 108, 170, 242, 183, 194, 254, 223, 255, 255, 128], T.intL());
    },
    get C256() {
      return C[256] = dart.constList([C[257] || CT.C257, C[258] || CT.C258, C[259] || CT.C259], T.ListLOfintL());
    },
    get C261() {
      return C[261] = dart.constList([1, 81, 230, 252, 204, 203, 255, 192, 128, 128, 128], T.intL());
    },
    get C262() {
      return C[262] = dart.constList([123, 102, 209, 247, 188, 196, 255, 233, 128, 128, 128], T.intL());
    },
    get C263() {
      return C[263] = dart.constList([20, 95, 153, 243, 164, 173, 255, 203, 128, 128, 128], T.intL());
    },
    get C260() {
      return C[260] = dart.constList([C[261] || CT.C261, C[262] || CT.C262, C[263] || CT.C263], T.ListLOfintL());
    },
    get C265() {
      return C[265] = dart.constList([1, 222, 248, 255, 216, 213, 128, 128, 128, 128, 128], T.intL());
    },
    get C266() {
      return C[266] = dart.constList([168, 175, 246, 252, 235, 205, 255, 255, 128, 128, 128], T.intL());
    },
    get C267() {
      return C[267] = dart.constList([47, 116, 215, 255, 211, 212, 255, 255, 128, 128, 128], T.intL());
    },
    get C264() {
      return C[264] = dart.constList([C[265] || CT.C265, C[266] || CT.C266, C[267] || CT.C267], T.ListLOfintL());
    },
    get C269() {
      return C[269] = dart.constList([1, 121, 236, 253, 212, 214, 255, 255, 128, 128, 128], T.intL());
    },
    get C270() {
      return C[270] = dart.constList([141, 84, 213, 252, 201, 202, 255, 219, 128, 128, 128], T.intL());
    },
    get C271() {
      return C[271] = dart.constList([42, 80, 160, 240, 162, 185, 255, 205, 128, 128, 128], T.intL());
    },
    get C268() {
      return C[268] = dart.constList([C[269] || CT.C269, C[270] || CT.C270, C[271] || CT.C271], T.ListLOfintL());
    },
    get C273() {
      return C[273] = dart.constList([244, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C274() {
      return C[274] = dart.constList([238, 1, 255, 128, 128, 128, 128, 128, 128, 128, 128], T.intL());
    },
    get C272() {
      return C[272] = dart.constList([C[178] || CT.C178, C[273] || CT.C273, C[274] || CT.C274], T.ListLOfintL());
    },
    get C243() {
      return C[243] = dart.constList([C[244] || CT.C244, C[248] || CT.C248, C[252] || CT.C252, C[256] || CT.C256, C[260] || CT.C260, C[264] || CT.C264, C[268] || CT.C268, C[272] || CT.C272], T.ListLOfListLOfintL());
    },
    get C149() {
      return C[149] = dart.constList([C[150] || CT.C150, C[181] || CT.C181, C[214] || CT.C214, C[243] || CT.C243], T.ListLOfListLOfListLOfintL());
    },
    get C278() {
      return C[278] = dart.constList([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C277() {
      return C[277] = dart.constList([C[278] || CT.C278, C[278] || CT.C278, C[278] || CT.C278], T.ListLOfintL());
    },
    get C280() {
      return C[280] = dart.constList([176, 246, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C281() {
      return C[281] = dart.constList([223, 241, 252, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C282() {
      return C[282] = dart.constList([249, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C279() {
      return C[279] = dart.constList([C[280] || CT.C280, C[281] || CT.C281, C[282] || CT.C282], T.ListLOfintL());
    },
    get C284() {
      return C[284] = dart.constList([255, 244, 252, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C285() {
      return C[285] = dart.constList([234, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C286() {
      return C[286] = dart.constList([253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C283() {
      return C[283] = dart.constList([C[284] || CT.C284, C[285] || CT.C285, C[286] || CT.C286], T.ListLOfintL());
    },
    get C288() {
      return C[288] = dart.constList([255, 246, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C289() {
      return C[289] = dart.constList([239, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C290() {
      return C[290] = dart.constList([254, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C287() {
      return C[287] = dart.constList([C[288] || CT.C288, C[289] || CT.C289, C[290] || CT.C290], T.ListLOfintL());
    },
    get C292() {
      return C[292] = dart.constList([255, 248, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C293() {
      return C[293] = dart.constList([251, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C291() {
      return C[291] = dart.constList([C[292] || CT.C292, C[293] || CT.C293, C[278] || CT.C278], T.ListLOfintL());
    },
    get C295() {
      return C[295] = dart.constList([255, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C296() {
      return C[296] = dart.constList([251, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C294() {
      return C[294] = dart.constList([C[295] || CT.C295, C[296] || CT.C296, C[290] || CT.C290], T.ListLOfintL());
    },
    get C298() {
      return C[298] = dart.constList([255, 254, 253, 255, 254, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C299() {
      return C[299] = dart.constList([250, 255, 254, 255, 254, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C300() {
      return C[300] = dart.constList([254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C297() {
      return C[297] = dart.constList([C[298] || CT.C298, C[299] || CT.C299, C[300] || CT.C300], T.ListLOfintL());
    },
    get C276() {
      return C[276] = dart.constList([C[277] || CT.C277, C[279] || CT.C279, C[283] || CT.C283, C[287] || CT.C287, C[291] || CT.C291, C[294] || CT.C294, C[297] || CT.C297, C[277] || CT.C277], T.ListLOfListLOfintL());
    },
    get C303() {
      return C[303] = dart.constList([217, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C304() {
      return C[304] = dart.constList([225, 252, 241, 253, 255, 255, 254, 255, 255, 255, 255], T.intL());
    },
    get C305() {
      return C[305] = dart.constList([234, 250, 241, 250, 253, 255, 253, 254, 255, 255, 255], T.intL());
    },
    get C302() {
      return C[302] = dart.constList([C[303] || CT.C303, C[304] || CT.C304, C[305] || CT.C305], T.ListLOfintL());
    },
    get C307() {
      return C[307] = dart.constList([255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C308() {
      return C[308] = dart.constList([223, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C309() {
      return C[309] = dart.constList([238, 253, 254, 254, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C306() {
      return C[306] = dart.constList([C[307] || CT.C307, C[308] || CT.C308, C[309] || CT.C309], T.ListLOfintL());
    },
    get C311() {
      return C[311] = dart.constList([249, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C310() {
      return C[310] = dart.constList([C[292] || CT.C292, C[311] || CT.C311, C[278] || CT.C278], T.ListLOfintL());
    },
    get C313() {
      return C[313] = dart.constList([255, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C314() {
      return C[314] = dart.constList([247, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C312() {
      return C[312] = dart.constList([C[313] || CT.C313, C[314] || CT.C314, C[278] || CT.C278], T.ListLOfintL());
    },
    get C316() {
      return C[316] = dart.constList([252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C315() {
      return C[315] = dart.constList([C[295] || CT.C295, C[316] || CT.C316, C[278] || CT.C278], T.ListLOfintL());
    },
    get C318() {
      return C[318] = dart.constList([255, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C317() {
      return C[317] = dart.constList([C[318] || CT.C318, C[286] || CT.C286, C[278] || CT.C278], T.ListLOfintL());
    },
    get C320() {
      return C[320] = dart.constList([255, 254, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C321() {
      return C[321] = dart.constList([250, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C319() {
      return C[319] = dart.constList([C[320] || CT.C320, C[321] || CT.C321, C[300] || CT.C300], T.ListLOfintL());
    },
    get C301() {
      return C[301] = dart.constList([C[302] || CT.C302, C[306] || CT.C306, C[310] || CT.C310, C[312] || CT.C312, C[315] || CT.C315, C[317] || CT.C317, C[319] || CT.C319, C[277] || CT.C277], T.ListLOfListLOfintL());
    },
    get C324() {
      return C[324] = dart.constList([186, 251, 250, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C325() {
      return C[325] = dart.constList([234, 251, 244, 254, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C326() {
      return C[326] = dart.constList([251, 251, 243, 253, 254, 255, 254, 255, 255, 255, 255], T.intL());
    },
    get C323() {
      return C[323] = dart.constList([C[324] || CT.C324, C[325] || CT.C325, C[326] || CT.C326], T.ListLOfintL());
    },
    get C328() {
      return C[328] = dart.constList([236, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C329() {
      return C[329] = dart.constList([251, 253, 253, 254, 254, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C327() {
      return C[327] = dart.constList([C[295] || CT.C295, C[328] || CT.C328, C[329] || CT.C329], T.ListLOfintL());
    },
    get C331() {
      return C[331] = dart.constList([254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C330() {
      return C[330] = dart.constList([C[318] || CT.C318, C[331] || CT.C331, C[278] || CT.C278], T.ListLOfintL());
    },
    get C333() {
      return C[333] = dart.constList([254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C332() {
      return C[332] = dart.constList([C[307] || CT.C307, C[333] || CT.C333, C[300] || CT.C300], T.ListLOfintL());
    },
    get C334() {
      return C[334] = dart.constList([C[278] || CT.C278, C[300] || CT.C300, C[278] || CT.C278], T.ListLOfintL());
    },
    get C322() {
      return C[322] = dart.constList([C[323] || CT.C323, C[327] || CT.C327, C[330] || CT.C330, C[332] || CT.C332, C[334] || CT.C334, C[277] || CT.C277, C[277] || CT.C277, C[277] || CT.C277], T.ListLOfListLOfintL());
    },
    get C337() {
      return C[337] = dart.constList([248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C338() {
      return C[338] = dart.constList([250, 254, 252, 254, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C339() {
      return C[339] = dart.constList([248, 254, 249, 253, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C336() {
      return C[336] = dart.constList([C[337] || CT.C337, C[338] || CT.C338, C[339] || CT.C339], T.ListLOfintL());
    },
    get C341() {
      return C[341] = dart.constList([255, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C342() {
      return C[342] = dart.constList([246, 253, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C343() {
      return C[343] = dart.constList([252, 254, 251, 254, 254, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C340() {
      return C[340] = dart.constList([C[341] || CT.C341, C[342] || CT.C342, C[343] || CT.C343], T.ListLOfintL());
    },
    get C345() {
      return C[345] = dart.constList([255, 254, 252, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C346() {
      return C[346] = dart.constList([248, 254, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C347() {
      return C[347] = dart.constList([253, 255, 254, 254, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C344() {
      return C[344] = dart.constList([C[345] || CT.C345, C[346] || CT.C346, C[347] || CT.C347], T.ListLOfintL());
    },
    get C349() {
      return C[349] = dart.constList([255, 251, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C350() {
      return C[350] = dart.constList([245, 251, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C351() {
      return C[351] = dart.constList([253, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C348() {
      return C[348] = dart.constList([C[349] || CT.C349, C[350] || CT.C350, C[351] || CT.C351], T.ListLOfintL());
    },
    get C353() {
      return C[353] = dart.constList([255, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C354() {
      return C[354] = dart.constList([252, 253, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C352() {
      return C[352] = dart.constList([C[353] || CT.C353, C[354] || CT.C354, C[307] || CT.C307], T.ListLOfintL());
    },
    get C356() {
      return C[356] = dart.constList([255, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C357() {
      return C[357] = dart.constList([249, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C358() {
      return C[358] = dart.constList([255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C355() {
      return C[355] = dart.constList([C[356] || CT.C356, C[357] || CT.C357, C[358] || CT.C358], T.ListLOfintL());
    },
    get C360() {
      return C[360] = dart.constList([255, 255, 253, 255, 255, 255, 255, 255, 255, 255, 255], T.intL());
    },
    get C359() {
      return C[359] = dart.constList([C[360] || CT.C360, C[321] || CT.C321, C[278] || CT.C278], T.ListLOfintL());
    },
    get C335() {
      return C[335] = dart.constList([C[336] || CT.C336, C[340] || CT.C340, C[344] || CT.C344, C[348] || CT.C348, C[352] || CT.C352, C[355] || CT.C355, C[359] || CT.C359, C[334] || CT.C334], T.ListLOfListLOfintL());
    },
    get C275() {
      return C[275] = dart.constList([C[276] || CT.C276, C[301] || CT.C301, C[322] || CT.C322, C[335] || CT.C335], T.ListLOfListLOfListLOfintL());
    },
    get C361() {
      return C[361] = dart.constList([4, 5, 6, 7, 8, 9, 10, 10, 11, 12, 13, 14, 15, 16, 17, 17, 18, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 25, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 95, 96, 98, 100, 101, 102, 104, 106, 108, 110, 112, 114, 116, 118, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 143, 145, 148, 151, 154, 157], T.intL());
    },
    get C362() {
      return C[362] = dart.constList([4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 167, 170, 173, 177, 181, 185, 189, 193, 197, 201, 205, 209, 213, 217, 221, 225, 229, 234, 239, 245, 249, 254, 259, 264, 269, 274, 279, 284], T.intL());
    }
  }, false);
  var C = Array(363).fill(void 0);
  var I$ = [
    "file:///C:/Users/shara/Flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.2/lib/src/formats/webp/vp8_types.dart",
    "package:image/src/formats/webp/vp8_types.dart",
    "file:///C:/Users/shara/Flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.2/lib/src/formats/webp/vp8_filter.dart",
    "package:image/src/formats/webp/vp8_filter.dart",
    "file:///C:/Users/shara/Flutter/.pub-cache/hosted/pub.dartlang.org/image-3.0.2/lib/src/formats/webp/vp8.dart",
    "package:image/src/formats/webp/vp8.dart"
  ];
  var keyFrame = dart.privateName(vp8_types, "VP8FrameHeader.keyFrame");
  var profile = dart.privateName(vp8_types, "VP8FrameHeader.profile");
  var show = dart.privateName(vp8_types, "VP8FrameHeader.show");
  var __VP8FrameHeader_partitionLength = dart.privateName(vp8_types, "_#VP8FrameHeader#partitionLength");
  var __VP8FrameHeader_partitionLength_isSet = dart.privateName(vp8_types, "_#VP8FrameHeader#partitionLength#isSet");
  vp8_types.VP8FrameHeader = class VP8FrameHeader extends core.Object {
    get keyFrame() {
      return this[keyFrame];
    }
    set keyFrame(value) {
      this[keyFrame] = value;
    }
    get profile() {
      return this[profile];
    }
    set profile(value) {
      this[profile] = value;
    }
    get show() {
      return this[show];
    }
    set show(value) {
      this[show] = value;
    }
    get partitionLength() {
      let t0;
      return dart.test(this[__VP8FrameHeader_partitionLength_isSet]) ? (t0 = this[__VP8FrameHeader_partitionLength], t0) : dart.throw(new _internal.LateError.fieldNI("partitionLength"));
    }
    set partitionLength(t0) {
      if (t0 == null) dart.nullFailed(I$[0], 9, 12, "null");
      this[__VP8FrameHeader_partitionLength_isSet] = true;
      this[__VP8FrameHeader_partitionLength] = t0;
    }
  };
  (vp8_types.VP8FrameHeader.new = function() {
    this[keyFrame] = null;
    this[profile] = null;
    this[show] = null;
    this[__VP8FrameHeader_partitionLength] = null;
    this[__VP8FrameHeader_partitionLength_isSet] = false;
    ;
  }).prototype = vp8_types.VP8FrameHeader.prototype;
  dart.addTypeTests(vp8_types.VP8FrameHeader);
  dart.addTypeCaches(vp8_types.VP8FrameHeader);
  dart.setGetterSignature(vp8_types.VP8FrameHeader, () => ({
    __proto__: dart.getGetters(vp8_types.VP8FrameHeader.__proto__),
    partitionLength: core.int
  }));
  dart.setSetterSignature(vp8_types.VP8FrameHeader, () => ({
    __proto__: dart.getSetters(vp8_types.VP8FrameHeader.__proto__),
    partitionLength: core.int
  }));
  dart.setLibraryUri(vp8_types.VP8FrameHeader, I$[1]);
  dart.setFieldSignature(vp8_types.VP8FrameHeader, () => ({
    __proto__: dart.getFields(vp8_types.VP8FrameHeader.__proto__),
    keyFrame: dart.fieldType(dart.nullable(core.bool)),
    profile: dart.fieldType(dart.nullable(core.int)),
    show: dart.fieldType(dart.nullable(core.int)),
    [__VP8FrameHeader_partitionLength]: dart.fieldType(dart.nullable(core.int)),
    [__VP8FrameHeader_partitionLength_isSet]: dart.fieldType(core.bool)
  }));
  var width = dart.privateName(vp8_types, "VP8PictureHeader.width");
  var height = dart.privateName(vp8_types, "VP8PictureHeader.height");
  var xscale = dart.privateName(vp8_types, "VP8PictureHeader.xscale");
  var yscale = dart.privateName(vp8_types, "VP8PictureHeader.yscale");
  var colorspace = dart.privateName(vp8_types, "VP8PictureHeader.colorspace");
  var clampType = dart.privateName(vp8_types, "VP8PictureHeader.clampType");
  vp8_types.VP8PictureHeader = class VP8PictureHeader extends core.Object {
    get width() {
      return this[width];
    }
    set width(value) {
      this[width] = value;
    }
    get height() {
      return this[height];
    }
    set height(value) {
      this[height] = value;
    }
    get xscale() {
      return this[xscale];
    }
    set xscale(value) {
      this[xscale] = value;
    }
    get yscale() {
      return this[yscale];
    }
    set yscale(value) {
      this[yscale] = value;
    }
    get colorspace() {
      return this[colorspace];
    }
    set colorspace(value) {
      this[colorspace] = value;
    }
    get clampType() {
      return this[clampType];
    }
    set clampType(value) {
      this[clampType] = value;
    }
  };
  (vp8_types.VP8PictureHeader.new = function() {
    this[width] = null;
    this[height] = null;
    this[xscale] = null;
    this[yscale] = null;
    this[colorspace] = null;
    this[clampType] = null;
    ;
  }).prototype = vp8_types.VP8PictureHeader.prototype;
  dart.addTypeTests(vp8_types.VP8PictureHeader);
  dart.addTypeCaches(vp8_types.VP8PictureHeader);
  dart.setLibraryUri(vp8_types.VP8PictureHeader, I$[1]);
  dart.setFieldSignature(vp8_types.VP8PictureHeader, () => ({
    __proto__: dart.getFields(vp8_types.VP8PictureHeader.__proto__),
    width: dart.fieldType(dart.nullable(core.int)),
    height: dart.fieldType(dart.nullable(core.int)),
    xscale: dart.fieldType(dart.nullable(core.int)),
    yscale: dart.fieldType(dart.nullable(core.int)),
    colorspace: dart.fieldType(dart.nullable(core.int)),
    clampType: dart.fieldType(dart.nullable(core.int))
  }));
  var useSegment = dart.privateName(vp8_types, "VP8SegmentHeader.useSegment");
  var updateMap = dart.privateName(vp8_types, "VP8SegmentHeader.updateMap");
  var absoluteDelta = dart.privateName(vp8_types, "VP8SegmentHeader.absoluteDelta");
  var quantizer = dart.privateName(vp8_types, "VP8SegmentHeader.quantizer");
  var filterStrength = dart.privateName(vp8_types, "VP8SegmentHeader.filterStrength");
  vp8_types.VP8SegmentHeader = class VP8SegmentHeader extends core.Object {
    get useSegment() {
      return this[useSegment];
    }
    set useSegment(value) {
      this[useSegment] = value;
    }
    get updateMap() {
      return this[updateMap];
    }
    set updateMap(value) {
      this[updateMap] = value;
    }
    get absoluteDelta() {
      return this[absoluteDelta];
    }
    set absoluteDelta(value) {
      this[absoluteDelta] = value;
    }
    get quantizer() {
      return this[quantizer];
    }
    set quantizer(value) {
      this[quantizer] = value;
    }
    get filterStrength() {
      return this[filterStrength];
    }
    set filterStrength(value) {
      this[filterStrength] = value;
    }
  };
  (vp8_types.VP8SegmentHeader.new = function() {
    this[useSegment] = false;
    this[updateMap] = false;
    this[absoluteDelta] = true;
    this[quantizer] = _native_typed_data.NativeInt8List.new(4);
    this[filterStrength] = _native_typed_data.NativeInt8List.new(4);
    ;
  }).prototype = vp8_types.VP8SegmentHeader.prototype;
  dart.addTypeTests(vp8_types.VP8SegmentHeader);
  dart.addTypeCaches(vp8_types.VP8SegmentHeader);
  dart.setLibraryUri(vp8_types.VP8SegmentHeader, I$[1]);
  dart.setFieldSignature(vp8_types.VP8SegmentHeader, () => ({
    __proto__: dart.getFields(vp8_types.VP8SegmentHeader.__proto__),
    useSegment: dart.fieldType(core.bool),
    updateMap: dart.fieldType(core.bool),
    absoluteDelta: dart.fieldType(core.bool),
    quantizer: dart.fieldType(typed_data.Int8List),
    filterStrength: dart.fieldType(typed_data.Int8List)
  }));
  var probas = dart.privateName(vp8_types, "VP8BandProbas.probas");
  vp8_types.VP8BandProbas = class VP8BandProbas extends core.Object {
    get probas() {
      return this[probas];
    }
    set probas(value) {
      this[probas] = value;
    }
  };
  (vp8_types.VP8BandProbas.new = function() {
    this[probas] = T.ListOfUint8List().generate(3, dart.fn(_ => {
      if (_ == null) dart.nullFailed(I$[0], 43, 27, "_");
      return _native_typed_data.NativeUint8List.new(11);
    }, T.intToUint8List()), {growable: false});
    ;
  }).prototype = vp8_types.VP8BandProbas.prototype;
  dart.addTypeTests(vp8_types.VP8BandProbas);
  dart.addTypeCaches(vp8_types.VP8BandProbas);
  dart.setLibraryUri(vp8_types.VP8BandProbas, I$[1]);
  dart.setFieldSignature(vp8_types.VP8BandProbas, () => ({
    __proto__: dart.getFields(vp8_types.VP8BandProbas.__proto__),
    probas: dart.fieldType(core.List$(typed_data.Uint8List))
  }));
  var segments = dart.privateName(vp8_types, "VP8Proba.segments");
  var bands = dart.privateName(vp8_types, "VP8Proba.bands");
  vp8_types.VP8Proba = class VP8Proba extends core.Object {
    get segments() {
      return this[segments];
    }
    set segments(value) {
      this[segments] = value;
    }
    get bands() {
      return this[bands];
    }
    set bands(value) {
      this[bands] = value;
    }
  };
  (vp8_types.VP8Proba.new = function() {
    this[segments] = _native_typed_data.NativeUint8List.new(3);
    this[bands] = T.ListOfListOfVP8BandProbas().generate(4, dart.fn(_ => {
      if (_ == null) dart.nullFailed(I$[0], 57, 14, "_");
      return T.ListOfVP8BandProbas().generate(8, dart.fn(_ => {
        if (_ == null) dart.nullFailed(I$[0], 58, 33, "_");
        return new vp8_types.VP8BandProbas.new();
      }, T.intToVP8BandProbas()), {growable: false});
    }, T.intToListOfVP8BandProbas()), {growable: false});
    this.segments[$fillRange](0, this.segments[$length], 255);
  }).prototype = vp8_types.VP8Proba.prototype;
  dart.addTypeTests(vp8_types.VP8Proba);
  dart.addTypeCaches(vp8_types.VP8Proba);
  dart.setLibraryUri(vp8_types.VP8Proba, I$[1]);
  dart.setFieldSignature(vp8_types.VP8Proba, () => ({
    __proto__: dart.getFields(vp8_types.VP8Proba.__proto__),
    segments: dart.fieldType(typed_data.Uint8List),
    bands: dart.fieldType(core.List$(core.List$(vp8_types.VP8BandProbas)))
  }));
  var level = dart.privateName(vp8_types, "VP8FilterHeader.level");
  var refLfDelta = dart.privateName(vp8_types, "VP8FilterHeader.refLfDelta");
  var modeLfDelta = dart.privateName(vp8_types, "VP8FilterHeader.modeLfDelta");
  var __VP8FilterHeader_simple = dart.privateName(vp8_types, "_#VP8FilterHeader#simple");
  var __VP8FilterHeader_simple_isSet = dart.privateName(vp8_types, "_#VP8FilterHeader#simple#isSet");
  var __VP8FilterHeader_sharpness = dart.privateName(vp8_types, "_#VP8FilterHeader#sharpness");
  var __VP8FilterHeader_sharpness_isSet = dart.privateName(vp8_types, "_#VP8FilterHeader#sharpness#isSet");
  var __VP8FilterHeader_useLfDelta = dart.privateName(vp8_types, "_#VP8FilterHeader#useLfDelta");
  var __VP8FilterHeader_useLfDelta_isSet = dart.privateName(vp8_types, "_#VP8FilterHeader#useLfDelta#isSet");
  vp8_types.VP8FilterHeader = class VP8FilterHeader extends core.Object {
    get level() {
      return this[level];
    }
    set level(value) {
      this[level] = value;
    }
    get refLfDelta() {
      return this[refLfDelta];
    }
    set refLfDelta(value) {
      this[refLfDelta] = value;
    }
    get modeLfDelta() {
      return this[modeLfDelta];
    }
    set modeLfDelta(value) {
      this[modeLfDelta] = value;
    }
    get simple() {
      let t1;
      return dart.test(this[__VP8FilterHeader_simple_isSet]) ? (t1 = this[__VP8FilterHeader_simple], t1) : dart.throw(new _internal.LateError.fieldNI("simple"));
    }
    set simple(t1) {
      if (t1 == null) dart.nullFailed(I$[0], 67, 13, "null");
      this[__VP8FilterHeader_simple_isSet] = true;
      this[__VP8FilterHeader_simple] = t1;
    }
    get sharpness() {
      let t2;
      return dart.test(this[__VP8FilterHeader_sharpness_isSet]) ? (t2 = this[__VP8FilterHeader_sharpness], t2) : dart.throw(new _internal.LateError.fieldNI("sharpness"));
    }
    set sharpness(t2) {
      if (t2 == null) dart.nullFailed(I$[0], 69, 12, "null");
      this[__VP8FilterHeader_sharpness_isSet] = true;
      this[__VP8FilterHeader_sharpness] = t2;
    }
    get useLfDelta() {
      let t3;
      return dart.test(this[__VP8FilterHeader_useLfDelta_isSet]) ? (t3 = this[__VP8FilterHeader_useLfDelta], t3) : dart.throw(new _internal.LateError.fieldNI("useLfDelta"));
    }
    set useLfDelta(t3) {
      if (t3 == null) dart.nullFailed(I$[0], 70, 13, "null");
      this[__VP8FilterHeader_useLfDelta_isSet] = true;
      this[__VP8FilterHeader_useLfDelta] = t3;
    }
  };
  (vp8_types.VP8FilterHeader.new = function() {
    this[__VP8FilterHeader_simple] = null;
    this[__VP8FilterHeader_simple_isSet] = false;
    this[level] = null;
    this[__VP8FilterHeader_sharpness] = null;
    this[__VP8FilterHeader_sharpness_isSet] = false;
    this[__VP8FilterHeader_useLfDelta] = null;
    this[__VP8FilterHeader_useLfDelta_isSet] = false;
    this[refLfDelta] = _native_typed_data.NativeInt32List.new(4);
    this[modeLfDelta] = _native_typed_data.NativeInt32List.new(4);
    ;
  }).prototype = vp8_types.VP8FilterHeader.prototype;
  dart.addTypeTests(vp8_types.VP8FilterHeader);
  dart.addTypeCaches(vp8_types.VP8FilterHeader);
  dart.setGetterSignature(vp8_types.VP8FilterHeader, () => ({
    __proto__: dart.getGetters(vp8_types.VP8FilterHeader.__proto__),
    simple: core.bool,
    sharpness: core.int,
    useLfDelta: core.bool
  }));
  dart.setSetterSignature(vp8_types.VP8FilterHeader, () => ({
    __proto__: dart.getSetters(vp8_types.VP8FilterHeader.__proto__),
    simple: core.bool,
    sharpness: core.int,
    useLfDelta: core.bool
  }));
  dart.setLibraryUri(vp8_types.VP8FilterHeader, I$[1]);
  dart.setFieldSignature(vp8_types.VP8FilterHeader, () => ({
    __proto__: dart.getFields(vp8_types.VP8FilterHeader.__proto__),
    [__VP8FilterHeader_simple]: dart.fieldType(dart.nullable(core.bool)),
    [__VP8FilterHeader_simple_isSet]: dart.fieldType(core.bool),
    level: dart.fieldType(dart.nullable(core.int)),
    [__VP8FilterHeader_sharpness]: dart.fieldType(dart.nullable(core.int)),
    [__VP8FilterHeader_sharpness_isSet]: dart.fieldType(core.bool),
    [__VP8FilterHeader_useLfDelta]: dart.fieldType(dart.nullable(core.bool)),
    [__VP8FilterHeader_useLfDelta_isSet]: dart.fieldType(core.bool),
    refLfDelta: dart.fieldType(typed_data.Int32List),
    modeLfDelta: dart.fieldType(typed_data.Int32List)
  }));
  var fLimit = dart.privateName(vp8_types, "VP8FInfo.fLimit");
  var fInnerLevel = dart.privateName(vp8_types, "VP8FInfo.fInnerLevel");
  var fInner = dart.privateName(vp8_types, "VP8FInfo.fInner");
  var hevThresh = dart.privateName(vp8_types, "VP8FInfo.hevThresh");
  vp8_types.VP8FInfo = class VP8FInfo extends core.Object {
    get fLimit() {
      return this[fLimit];
    }
    set fLimit(value) {
      this[fLimit] = value;
    }
    get fInnerLevel() {
      return this[fInnerLevel];
    }
    set fInnerLevel(value) {
      this[fInnerLevel] = value;
    }
    get fInner() {
      return this[fInner];
    }
    set fInner(value) {
      this[fInner] = value;
    }
    get hevThresh() {
      return this[hevThresh];
    }
    set hevThresh(value) {
      this[hevThresh] = value;
    }
  };
  (vp8_types.VP8FInfo.new = function() {
    this[fLimit] = 0;
    this[fInnerLevel] = 0;
    this[fInner] = false;
    this[hevThresh] = 0;
    ;
  }).prototype = vp8_types.VP8FInfo.prototype;
  dart.addTypeTests(vp8_types.VP8FInfo);
  dart.addTypeCaches(vp8_types.VP8FInfo);
  dart.setLibraryUri(vp8_types.VP8FInfo, I$[1]);
  dart.setFieldSignature(vp8_types.VP8FInfo, () => ({
    __proto__: dart.getFields(vp8_types.VP8FInfo.__proto__),
    fLimit: dart.fieldType(core.int),
    fInnerLevel: dart.fieldType(dart.nullable(core.int)),
    fInner: dart.fieldType(core.bool),
    hevThresh: dart.fieldType(core.int)
  }));
  var nz = dart.privateName(vp8_types, "VP8MB.nz");
  var nzDc = dart.privateName(vp8_types, "VP8MB.nzDc");
  vp8_types.VP8MB = class VP8MB extends core.Object {
    get nz() {
      return this[nz];
    }
    set nz(value) {
      this[nz] = value;
    }
    get nzDc() {
      return this[nzDc];
    }
    set nzDc(value) {
      this[nzDc] = value;
    }
  };
  (vp8_types.VP8MB.new = function() {
    this[nz] = 0;
    this[nzDc] = 0;
    ;
  }).prototype = vp8_types.VP8MB.prototype;
  dart.addTypeTests(vp8_types.VP8MB);
  dart.addTypeCaches(vp8_types.VP8MB);
  dart.setLibraryUri(vp8_types.VP8MB, I$[1]);
  dart.setFieldSignature(vp8_types.VP8MB, () => ({
    __proto__: dart.getFields(vp8_types.VP8MB.__proto__),
    nz: dart.fieldType(core.int),
    nzDc: dart.fieldType(core.int)
  }));
  var y1Mat = dart.privateName(vp8_types, "VP8QuantMatrix.y1Mat");
  var y2Mat = dart.privateName(vp8_types, "VP8QuantMatrix.y2Mat");
  var uvMat = dart.privateName(vp8_types, "VP8QuantMatrix.uvMat");
  var uvQuant = dart.privateName(vp8_types, "VP8QuantMatrix.uvQuant");
  var dither = dart.privateName(vp8_types, "VP8QuantMatrix.dither");
  vp8_types.VP8QuantMatrix = class VP8QuantMatrix extends core.Object {
    get y1Mat() {
      return this[y1Mat];
    }
    set y1Mat(value) {
      this[y1Mat] = value;
    }
    get y2Mat() {
      return this[y2Mat];
    }
    set y2Mat(value) {
      this[y2Mat] = value;
    }
    get uvMat() {
      return this[uvMat];
    }
    set uvMat(value) {
      this[uvMat] = value;
    }
    get uvQuant() {
      return this[uvQuant];
    }
    set uvQuant(value) {
      this[uvQuant] = value;
    }
    get dither() {
      return this[dither];
    }
    set dither(value) {
      this[dither] = value;
    }
  };
  (vp8_types.VP8QuantMatrix.new = function() {
    this[y1Mat] = _native_typed_data.NativeInt32List.new(2);
    this[y2Mat] = _native_typed_data.NativeInt32List.new(2);
    this[uvMat] = _native_typed_data.NativeInt32List.new(2);
    this[uvQuant] = null;
    this[dither] = null;
    ;
  }).prototype = vp8_types.VP8QuantMatrix.prototype;
  dart.addTypeTests(vp8_types.VP8QuantMatrix);
  dart.addTypeCaches(vp8_types.VP8QuantMatrix);
  dart.setLibraryUri(vp8_types.VP8QuantMatrix, I$[1]);
  dart.setFieldSignature(vp8_types.VP8QuantMatrix, () => ({
    __proto__: dart.getFields(vp8_types.VP8QuantMatrix.__proto__),
    y1Mat: dart.fieldType(typed_data.Int32List),
    y2Mat: dart.fieldType(typed_data.Int32List),
    uvMat: dart.fieldType(typed_data.Int32List),
    uvQuant: dart.fieldType(dart.nullable(core.int)),
    dither: dart.fieldType(dart.nullable(core.int))
  }));
  var coeffs = dart.privateName(vp8_types, "VP8MBData.coeffs");
  var imodes = dart.privateName(vp8_types, "VP8MBData.imodes");
  var uvmode = dart.privateName(vp8_types, "VP8MBData.uvmode");
  var nonZeroY = dart.privateName(vp8_types, "VP8MBData.nonZeroY");
  var dither$ = dart.privateName(vp8_types, "VP8MBData.dither");
  var __VP8MBData_isIntra4x4 = dart.privateName(vp8_types, "_#VP8MBData#isIntra4x4");
  var __VP8MBData_isIntra4x4_isSet = dart.privateName(vp8_types, "_#VP8MBData#isIntra4x4#isSet");
  var __VP8MBData_nonZeroUV = dart.privateName(vp8_types, "_#VP8MBData#nonZeroUV");
  var __VP8MBData_nonZeroUV_isSet = dart.privateName(vp8_types, "_#VP8MBData#nonZeroUV#isSet");
  vp8_types.VP8MBData = class VP8MBData extends core.Object {
    get coeffs() {
      return this[coeffs];
    }
    set coeffs(value) {
      this[coeffs] = value;
    }
    get imodes() {
      return this[imodes];
    }
    set imodes(value) {
      this[imodes] = value;
    }
    get uvmode() {
      return this[uvmode];
    }
    set uvmode(value) {
      this[uvmode] = value;
    }
    get nonZeroY() {
      return this[nonZeroY];
    }
    set nonZeroY(value) {
      this[nonZeroY] = value;
    }
    get dither() {
      return this[dither$];
    }
    set dither(value) {
      this[dither$] = value;
    }
    get isIntra4x4() {
      let t4;
      return dart.test(this[__VP8MBData_isIntra4x4_isSet]) ? (t4 = this[__VP8MBData_isIntra4x4], t4) : dart.throw(new _internal.LateError.fieldNI("isIntra4x4"));
    }
    set isIntra4x4(t4) {
      if (t4 == null) dart.nullFailed(I$[0], 107, 13, "null");
      this[__VP8MBData_isIntra4x4_isSet] = true;
      this[__VP8MBData_isIntra4x4] = t4;
    }
    get nonZeroUV() {
      let t5;
      return dart.test(this[__VP8MBData_nonZeroUV_isSet]) ? (t5 = this[__VP8MBData_nonZeroUV], t5) : dart.throw(new _internal.LateError.fieldNI("nonZeroUV"));
    }
    set nonZeroUV(t5) {
      if (t5 == null) dart.nullFailed(I$[0], 121, 12, "null");
      this[__VP8MBData_nonZeroUV_isSet] = true;
      this[__VP8MBData_nonZeroUV] = t5;
    }
  };
  (vp8_types.VP8MBData.new = function() {
    this[coeffs] = _native_typed_data.NativeInt16List.new(384);
    this[__VP8MBData_isIntra4x4] = null;
    this[__VP8MBData_isIntra4x4_isSet] = false;
    this[imodes] = _native_typed_data.NativeUint8List.new(16);
    this[uvmode] = null;
    this[nonZeroY] = null;
    this[__VP8MBData_nonZeroUV] = null;
    this[__VP8MBData_nonZeroUV_isSet] = false;
    this[dither$] = null;
    ;
  }).prototype = vp8_types.VP8MBData.prototype;
  dart.addTypeTests(vp8_types.VP8MBData);
  dart.addTypeCaches(vp8_types.VP8MBData);
  dart.setGetterSignature(vp8_types.VP8MBData, () => ({
    __proto__: dart.getGetters(vp8_types.VP8MBData.__proto__),
    isIntra4x4: core.bool,
    nonZeroUV: core.int
  }));
  dart.setSetterSignature(vp8_types.VP8MBData, () => ({
    __proto__: dart.getSetters(vp8_types.VP8MBData.__proto__),
    isIntra4x4: core.bool,
    nonZeroUV: core.int
  }));
  dart.setLibraryUri(vp8_types.VP8MBData, I$[1]);
  dart.setFieldSignature(vp8_types.VP8MBData, () => ({
    __proto__: dart.getFields(vp8_types.VP8MBData.__proto__),
    coeffs: dart.fieldType(typed_data.Int16List),
    [__VP8MBData_isIntra4x4]: dart.fieldType(dart.nullable(core.bool)),
    [__VP8MBData_isIntra4x4_isSet]: dart.fieldType(core.bool),
    imodes: dart.fieldType(typed_data.Uint8List),
    uvmode: dart.fieldType(dart.nullable(core.int)),
    nonZeroY: dart.fieldType(dart.nullable(core.int)),
    [__VP8MBData_nonZeroUV]: dart.fieldType(dart.nullable(core.int)),
    [__VP8MBData_nonZeroUV_isSet]: dart.fieldType(core.bool),
    dither: dart.fieldType(dart.nullable(core.int))
  }));
  var y = dart.privateName(vp8_types, "VP8TopSamples.y");
  var u = dart.privateName(vp8_types, "VP8TopSamples.u");
  var v = dart.privateName(vp8_types, "VP8TopSamples.v");
  vp8_types.VP8TopSamples = class VP8TopSamples extends core.Object {
    get y() {
      return this[y];
    }
    set y(value) {
      this[y] = value;
    }
    get u() {
      return this[u];
    }
    set u(value) {
      this[u] = value;
    }
    get v() {
      return this[v];
    }
    set v(value) {
      this[v] = value;
    }
  };
  (vp8_types.VP8TopSamples.new = function() {
    this[y] = _native_typed_data.NativeUint8List.new(16);
    this[u] = _native_typed_data.NativeUint8List.new(8);
    this[v] = _native_typed_data.NativeUint8List.new(8);
    ;
  }).prototype = vp8_types.VP8TopSamples.prototype;
  dart.addTypeTests(vp8_types.VP8TopSamples);
  dart.addTypeCaches(vp8_types.VP8TopSamples);
  dart.setLibraryUri(vp8_types.VP8TopSamples, I$[1]);
  dart.setFieldSignature(vp8_types.VP8TopSamples, () => ({
    __proto__: dart.getFields(vp8_types.VP8TopSamples.__proto__),
    y: dart.fieldType(typed_data.Uint8List),
    u: dart.fieldType(typed_data.Uint8List),
    v: dart.fieldType(typed_data.Uint8List)
  }));
  var __VP8Random__index1 = dart.privateName(vp8_types, "_#VP8Random#_index1");
  var __VP8Random__index1_isSet = dart.privateName(vp8_types, "_#VP8Random#_index1#isSet");
  var __VP8Random__index2 = dart.privateName(vp8_types, "_#VP8Random#_index2");
  var __VP8Random__index2_isSet = dart.privateName(vp8_types, "_#VP8Random#_index2#isSet");
  var _table = dart.privateName(vp8_types, "_table");
  var __VP8Random__amplitude = dart.privateName(vp8_types, "_#VP8Random#_amplitude");
  var __VP8Random__amplitude_isSet = dart.privateName(vp8_types, "_#VP8Random#_amplitude#isSet");
  var _index1 = dart.privateName(vp8_types, "_index1");
  var _index2 = dart.privateName(vp8_types, "_index2");
  var _amplitude = dart.privateName(vp8_types, "_amplitude");
  vp8_types.VP8Random = class VP8Random extends core.Object {
    get [_index1]() {
      let t6;
      return dart.test(this[__VP8Random__index1_isSet]) ? (t6 = this[__VP8Random__index1], t6) : dart.throw(new _internal.LateError.fieldNI("_index1"));
    }
    set [_index1](t6) {
      if (t6 == null) dart.nullFailed(I$[0], 135, 12, "null");
      this[__VP8Random__index1_isSet] = true;
      this[__VP8Random__index1] = t6;
    }
    get [_index2]() {
      let t7;
      return dart.test(this[__VP8Random__index2_isSet]) ? (t7 = this[__VP8Random__index2], t7) : dart.throw(new _internal.LateError.fieldNI("_index2"));
    }
    set [_index2](t7) {
      if (t7 == null) dart.nullFailed(I$[0], 136, 12, "null");
      this[__VP8Random__index2_isSet] = true;
      this[__VP8Random__index2] = t7;
    }
    get [_amplitude]() {
      let t8;
      return dart.test(this[__VP8Random__amplitude_isSet]) ? (t8 = this[__VP8Random__amplitude], t8) : dart.throw(new _internal.LateError.fieldNI("_amplitude"));
    }
    set [_amplitude](t8) {
      if (t8 == null) dart.nullFailed(I$[0], 138, 12, "null");
      this[__VP8Random__amplitude_isSet] = true;
      this[__VP8Random__amplitude] = t8;
    }
    randomBits2(numBits, amp) {
      if (numBits == null) dart.nullFailed(I$[0], 155, 23, "numBits");
      if (amp == null) dart.nullFailed(I$[0], 155, 36, "amp");
      let diff = dart.notNull(this[_table][$_get](this[_index1])) - dart.notNull(this[_table][$_get](this[_index2]));
      if (diff < 0) {
        diff = diff + (1 << 31 >>> 0);
      }
      this[_table][$_set](this[_index1], diff);
      if ((this[_index1] = dart.notNull(this[_index1]) + 1) === 55) {
        this[_index1] = 0;
      }
      if ((this[_index2] = dart.notNull(this[_index2]) + 1) === 55) {
        this[_index2] = 0;
      }
      diff = (diff << 1 >>> 0)[$rightShift](32 - dart.notNull(numBits));
      diff = (diff * dart.notNull(amp))[$rightShift](8);
      diff = diff + (1)[$leftShift](dart.notNull(numBits) - 1);
      return diff;
    }
    randomBits(numBits) {
      if (numBits == null) dart.nullFailed(I$[0], 180, 22, "numBits");
      return this.randomBits2(numBits, this[_amplitude]);
    }
  };
  (vp8_types.VP8Random.new = function(dithering) {
    if (dithering == null) dart.nullFailed(I$[0], 141, 20, "dithering");
    this[__VP8Random__index1] = null;
    this[__VP8Random__index1_isSet] = false;
    this[__VP8Random__index2] = null;
    this[__VP8Random__index2_isSet] = false;
    this[_table] = _native_typed_data.NativeUint32List.new(55);
    this[__VP8Random__amplitude] = null;
    this[__VP8Random__amplitude_isSet] = false;
    this[_table][$setRange](0, 55, vp8_types.VP8Random._RANDOM_TABLE);
    this[_index1] = 0;
    this[_index2] = 31;
    this[_amplitude] = dart.notNull(dithering) < 0.0 ? 0 : dart.notNull(dithering) > 1.0 ? (1)[$leftShift](8) : ((1)[$leftShift](8) * dart.notNull(dithering))[$toInt]();
  }).prototype = vp8_types.VP8Random.prototype;
  dart.addTypeTests(vp8_types.VP8Random);
  dart.addTypeCaches(vp8_types.VP8Random);
  dart.setMethodSignature(vp8_types.VP8Random, () => ({
    __proto__: dart.getMethods(vp8_types.VP8Random.__proto__),
    randomBits2: dart.fnType(core.int, [core.int, core.int]),
    randomBits: dart.fnType(core.int, [core.int])
  }));
  dart.setGetterSignature(vp8_types.VP8Random, () => ({
    __proto__: dart.getGetters(vp8_types.VP8Random.__proto__),
    [_index1]: core.int,
    [_index2]: core.int,
    [_amplitude]: core.int
  }));
  dart.setSetterSignature(vp8_types.VP8Random, () => ({
    __proto__: dart.getSetters(vp8_types.VP8Random.__proto__),
    [_index1]: core.int,
    [_index2]: core.int,
    [_amplitude]: core.int
  }));
  dart.setLibraryUri(vp8_types.VP8Random, I$[1]);
  dart.setFieldSignature(vp8_types.VP8Random, () => ({
    __proto__: dart.getFields(vp8_types.VP8Random.__proto__),
    [__VP8Random__index1]: dart.fieldType(dart.nullable(core.int)),
    [__VP8Random__index1_isSet]: dart.fieldType(core.bool),
    [__VP8Random__index2]: dart.fieldType(dart.nullable(core.int)),
    [__VP8Random__index2_isSet]: dart.fieldType(core.bool),
    [_table]: dart.finalFieldType(typed_data.Uint32List),
    [__VP8Random__amplitude]: dart.fieldType(dart.nullable(core.int)),
    [__VP8Random__amplitude_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(vp8_types.VP8Random, {
    /*vp8_types.VP8Random.RANDOM_DITHER_FIX*/get RANDOM_DITHER_FIX() {
      return 8;
    },
    /*vp8_types.VP8Random.RANDOM_TABLE_SIZE*/get RANDOM_TABLE_SIZE() {
      return 55;
    },
    /*vp8_types.VP8Random._RANDOM_TABLE*/get _RANDOM_TABLE() {
      return C[0] || CT.C0;
    }
  }, false);
  var _needsFilter = dart.privateName(vp8_filter, "_needsFilter");
  var _doFilter2 = dart.privateName(vp8_filter, "_doFilter2");
  var _filterLoop26 = dart.privateName(vp8_filter, "_filterLoop26");
  var _filterLoop24 = dart.privateName(vp8_filter, "_filterLoop24");
  var _needsFilter2 = dart.privateName(vp8_filter, "_needsFilter2");
  var _hev = dart.privateName(vp8_filter, "_hev");
  var _doFilter6 = dart.privateName(vp8_filter, "_doFilter6");
  var _doFilter4 = dart.privateName(vp8_filter, "_doFilter4");
  vp8_filter.VP8Filter = class VP8Filter extends core.Object {
    simpleVFilter16(p, stride, thresh) {
      if (p == null) dart.nullFailed(I$[2], 12, 36, "p");
      if (stride == null) dart.nullFailed(I$[2], 12, 43, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 12, 55, "thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      for (let i = 0; i < 16; i = i + 1) {
        p2.offset = dart.notNull(p.offset) + i;
        if (dart.test(this[_needsFilter](p2, stride, thresh))) {
          this[_doFilter2](p2, stride);
        }
      }
    }
    simpleHFilter16(p, stride, thresh) {
      if (p == null) dart.nullFailed(I$[2], 22, 36, "p");
      if (stride == null) dart.nullFailed(I$[2], 22, 43, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 22, 55, "thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      for (let i = 0; i < 16; i = i + 1) {
        p2.offset = dart.notNull(p.offset) + i * dart.notNull(stride);
        if (dart.test(this[_needsFilter](p2, 1, thresh))) {
          this[_doFilter2](p2, 1);
        }
      }
    }
    simpleVFilter16i(p, stride, thresh) {
      if (p == null) dart.nullFailed(I$[2], 32, 37, "p");
      if (stride == null) dart.nullFailed(I$[2], 32, 44, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 32, 56, "thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      for (let k = 3; k > 0; k = k - 1) {
        p2.offset = dart.notNull(p2.offset) + 4 * dart.notNull(stride);
        this.simpleVFilter16(p2, stride, thresh);
      }
    }
    simpleHFilter16i(p, stride, thresh) {
      if (p == null) dart.nullFailed(I$[2], 40, 37, "p");
      if (stride == null) dart.nullFailed(I$[2], 40, 44, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 40, 56, "thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      for (let k = 3; k > 0; k = k - 1) {
        p2.offset = dart.notNull(p2.offset) + 4;
        this.simpleHFilter16(p2, stride, thresh);
      }
    }
    vFilter16(p, stride, thresh, ithresh, hev_thresh) {
      if (p == null) dart.nullFailed(I$[2], 50, 19, "p");
      if (stride == null) dart.nullFailed(I$[2], 50, 26, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 50, 38, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 50, 64, "hev_thresh");
      this[_filterLoop26](p, stride, 1, 16, thresh, ithresh, hev_thresh);
    }
    hFilter16(p, stride, thresh, ithresh, hev_thresh) {
      if (p == null) dart.nullFailed(I$[2], 55, 19, "p");
      if (stride == null) dart.nullFailed(I$[2], 55, 26, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 55, 38, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 55, 64, "hev_thresh");
      this[_filterLoop26](p, 1, stride, 16, thresh, ithresh, hev_thresh);
    }
    vFilter16i(p, stride, thresh, ithresh, hev_thresh) {
      if (p == null) dart.nullFailed(I$[2], 61, 19, "p");
      if (stride == null) dart.nullFailed(I$[2], 61, 26, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 61, 38, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 61, 64, "hev_thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      for (let k = 3; k > 0; k = k - 1) {
        p2.offset = dart.notNull(p2.offset) + 4 * dart.notNull(stride);
        this[_filterLoop24](p2, stride, 1, 16, thresh, dart.nullCheck(ithresh), hev_thresh);
      }
    }
    hFilter16i(p, stride, thresh, ithresh, hev_thresh) {
      if (p == null) dart.nullFailed(I$[2], 70, 19, "p");
      if (stride == null) dart.nullFailed(I$[2], 70, 26, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 70, 38, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 70, 64, "hev_thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      for (let k = 3; k > 0; k = k - 1) {
        p2.offset = dart.notNull(p2.offset) + 4;
        this[_filterLoop24](p2, 1, stride, 16, thresh, dart.nullCheck(ithresh), hev_thresh);
      }
    }
    vFilter8(u, v, stride, thresh, ithresh, hev_thresh) {
      if (u == null) dart.nullFailed(I$[2], 79, 29, "u");
      if (v == null) dart.nullFailed(I$[2], 79, 44, "v");
      if (stride == null) dart.nullFailed(I$[2], 79, 51, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 79, 63, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 80, 25, "hev_thresh");
      this[_filterLoop26](u, stride, 1, 8, thresh, ithresh, hev_thresh);
      this[_filterLoop26](v, stride, 1, 8, thresh, ithresh, hev_thresh);
    }
    hFilter8(u, v, stride, thresh, ithresh, hev_thresh) {
      if (u == null) dart.nullFailed(I$[2], 85, 29, "u");
      if (v == null) dart.nullFailed(I$[2], 85, 44, "v");
      if (stride == null) dart.nullFailed(I$[2], 85, 51, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 85, 63, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 86, 25, "hev_thresh");
      this[_filterLoop26](u, 1, stride, 8, thresh, ithresh, hev_thresh);
      this[_filterLoop26](v, 1, stride, 8, thresh, ithresh, hev_thresh);
    }
    vFilter8i(u, v, stride, thresh, ithresh, hev_thresh) {
      if (u == null) dart.nullFailed(I$[2], 91, 30, "u");
      if (v == null) dart.nullFailed(I$[2], 91, 45, "v");
      if (stride == null) dart.nullFailed(I$[2], 91, 52, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 91, 64, "thresh");
      if (ithresh == null) dart.nullFailed(I$[2], 92, 11, "ithresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 92, 24, "hev_thresh");
      let u2 = new input_buffer.InputBuffer.from(u, {offset: 4 * dart.notNull(stride)});
      let v2 = new input_buffer.InputBuffer.from(v, {offset: 4 * dart.notNull(stride)});
      this[_filterLoop24](u2, stride, 1, 8, thresh, ithresh, hev_thresh);
      this[_filterLoop24](v2, stride, 1, 8, thresh, ithresh, hev_thresh);
    }
    hFilter8i(u, v, stride, thresh, ithresh, hev_thresh) {
      if (u == null) dart.nullFailed(I$[2], 99, 30, "u");
      if (v == null) dart.nullFailed(I$[2], 99, 45, "v");
      if (stride == null) dart.nullFailed(I$[2], 99, 52, "stride");
      if (thresh == null) dart.nullFailed(I$[2], 99, 64, "thresh");
      if (ithresh == null) dart.nullFailed(I$[2], 100, 11, "ithresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 100, 24, "hev_thresh");
      let u2 = new input_buffer.InputBuffer.from(u, {offset: 4});
      let v2 = new input_buffer.InputBuffer.from(v, {offset: 4});
      this[_filterLoop24](u2, 1, stride, 8, thresh, ithresh, hev_thresh);
      this[_filterLoop24](v2, 1, stride, 8, thresh, ithresh, hev_thresh);
    }
    [_filterLoop26](p, hstride, vstride, size, thresh, ithresh, hev_thresh) {
      let t9;
      if (p == null) dart.nullFailed(I$[2], 107, 34, "p");
      if (hstride == null) dart.nullFailed(I$[2], 107, 41, "hstride");
      if (vstride == null) dart.nullFailed(I$[2], 107, 54, "vstride");
      if (size == null) dart.nullFailed(I$[2], 107, 67, "size");
      if (thresh == null) dart.nullFailed(I$[2], 108, 11, "thresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 108, 37, "hev_thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      while (dart.notNull((t9 = size, size = dart.notNull(t9) - 1, t9)) > 0) {
        if (dart.test(this[_needsFilter2](p2, hstride, thresh, ithresh))) {
          if (dart.test(this[_hev](p2, hstride, hev_thresh))) {
            this[_doFilter2](p2, hstride);
          } else {
            this[_doFilter6](p2, hstride);
          }
        }
        p2.offset = dart.notNull(p2.offset) + dart.notNull(vstride);
      }
    }
    [_filterLoop24](p, hstride, vstride, size, thresh, ithresh, hev_thresh) {
      let t9;
      if (p == null) dart.nullFailed(I$[2], 122, 34, "p");
      if (hstride == null) dart.nullFailed(I$[2], 122, 41, "hstride");
      if (vstride == null) dart.nullFailed(I$[2], 122, 54, "vstride");
      if (size == null) dart.nullFailed(I$[2], 122, 67, "size");
      if (thresh == null) dart.nullFailed(I$[2], 123, 11, "thresh");
      if (ithresh == null) dart.nullFailed(I$[2], 123, 23, "ithresh");
      if (hev_thresh == null) dart.nullFailed(I$[2], 123, 36, "hev_thresh");
      let p2 = new input_buffer.InputBuffer.from(p);
      while (dart.notNull((t9 = size, size = dart.notNull(t9) - 1, t9)) > 0) {
        if (dart.test(this[_needsFilter2](p2, hstride, thresh, ithresh))) {
          if (dart.test(this[_hev](p2, hstride, hev_thresh))) {
            this[_doFilter2](p2, hstride);
          } else {
            this[_doFilter4](p2, hstride);
          }
        }
        p2.offset = dart.notNull(p2.offset) + dart.notNull(vstride);
      }
    }
    [_doFilter2](p, step) {
      if (p == null) dart.nullFailed(I$[2], 138, 31, "p");
      if (step == null) dart.nullFailed(I$[2], 138, 38, "step");
      let p1 = p._get(-2 * dart.notNull(step));
      let p0 = p._get(-dart.notNull(step));
      let q0 = p._get(0);
      let q1 = p._get(step);
      let a = 3 * (dart.notNull(q0) - dart.notNull(p0)) + dart.notNull(vp8_filter.VP8Filter.sclip1[$_get](1020 + dart.notNull(p1) - dart.notNull(q1)));
      let a1 = vp8_filter.VP8Filter.sclip2[$_get](112 + dart.notNull(bit_operators.shiftR(a + 4, 3)));
      let a2 = vp8_filter.VP8Filter.sclip2[$_get](112 + dart.notNull(bit_operators.shiftR(a + 3, 3)));
      p._set(-dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(p0) + dart.notNull(a2)));
      p._set(0, vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(q0) - dart.notNull(a1)));
    }
    [_doFilter4](p, step) {
      if (p == null) dart.nullFailed(I$[2], 151, 31, "p");
      if (step == null) dart.nullFailed(I$[2], 151, 38, "step");
      let p1 = p._get(-2 * dart.notNull(step));
      let p0 = p._get(-dart.notNull(step));
      let q0 = p._get(0);
      let q1 = p._get(step);
      let a = 3 * (dart.notNull(q0) - dart.notNull(p0));
      let a1 = vp8_filter.VP8Filter.sclip2[$_get](112 + dart.notNull(bit_operators.shiftR(a + 4, 3)));
      let a2 = vp8_filter.VP8Filter.sclip2[$_get](112 + dart.notNull(bit_operators.shiftR(a + 3, 3)));
      let a3 = bit_operators.shiftR(dart.notNull(a1) + 1, 1);
      p._set(-2 * dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(p1) + dart.notNull(a3)));
      p._set(-dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(p0) + dart.notNull(a2)));
      p._set(0, vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(q0) - dart.notNull(a1)));
      p._set(step, vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(q1) - dart.notNull(a3)));
    }
    [_doFilter6](p, step) {
      if (p == null) dart.nullFailed(I$[2], 167, 31, "p");
      if (step == null) dart.nullFailed(I$[2], 167, 38, "step");
      let p2 = p._get(-3 * dart.notNull(step));
      let p1 = p._get(-2 * dart.notNull(step));
      let p0 = p._get(-dart.notNull(step));
      let q0 = p._get(0);
      let q1 = p._get(step);
      let q2 = p._get(2 * dart.notNull(step));
      let a = vp8_filter.VP8Filter.sclip1[$_get](1020 + 3 * (dart.notNull(q0) - dart.notNull(p0)) + dart.notNull(vp8_filter.VP8Filter.sclip1[$_get](1020 + dart.notNull(p1) - dart.notNull(q1))));
      let a1 = bit_operators.shiftR(27 * dart.notNull(a) + 63, 7);
      let a2 = bit_operators.shiftR(18 * dart.notNull(a) + 63, 7);
      let a3 = bit_operators.shiftR(9 * dart.notNull(a) + 63, 7);
      p._set(-3 * dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(p2) + dart.notNull(a3)));
      p._set(-2 * dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(p1) + dart.notNull(a2)));
      p._set(-dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(p0) + dart.notNull(a1)));
      p._set(0, vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(q0) - dart.notNull(a1)));
      p._set(step, vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(q1) - dart.notNull(a2)));
      p._set(2 * dart.notNull(step), vp8_filter.VP8Filter.clip1[$_get](255 + dart.notNull(q2) - dart.notNull(a3)));
    }
    [_hev](p, step, thresh) {
      if (p == null) dart.nullFailed(I$[2], 186, 25, "p");
      if (step == null) dart.nullFailed(I$[2], 186, 32, "step");
      if (thresh == null) dart.nullFailed(I$[2], 186, 42, "thresh");
      let p1 = p._get(-2 * dart.notNull(step));
      let p0 = p._get(-dart.notNull(step));
      let q0 = p._get(0);
      let q1 = p._get(step);
      return dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(p1) - dart.notNull(p0))) > dart.notNull(thresh) || dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(q1) - dart.notNull(q0))) > dart.notNull(thresh);
    }
    [_needsFilter](p, step, thresh) {
      if (p == null) dart.nullFailed(I$[2], 194, 33, "p");
      if (step == null) dart.nullFailed(I$[2], 194, 40, "step");
      if (thresh == null) dart.nullFailed(I$[2], 194, 50, "thresh");
      let p1 = p._get(-2 * dart.notNull(step));
      let p0 = p._get(-dart.notNull(step));
      let q0 = p._get(0);
      let q1 = p._get(step);
      return 2 * dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(p0) - dart.notNull(q0))) + dart.notNull(vp8_filter.VP8Filter.abs1[$_get](255 + dart.notNull(p1) - dart.notNull(q1))) <= dart.notNull(thresh);
    }
    [_needsFilter2](p, step, t, it) {
      if (p == null) dart.nullFailed(I$[2], 202, 34, "p");
      if (step == null) dart.nullFailed(I$[2], 202, 41, "step");
      if (t == null) dart.nullFailed(I$[2], 202, 51, "t");
      let p3 = p._get(-4 * dart.notNull(step));
      let p2 = p._get(-3 * dart.notNull(step));
      let p1 = p._get(-2 * dart.notNull(step));
      let p0 = p._get(-dart.notNull(step));
      let q0 = p._get(0);
      let q1 = p._get(step);
      let q2 = p._get(2 * dart.notNull(step));
      let q3 = p._get(3 * dart.notNull(step));
      if (2 * dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(p0) - dart.notNull(q0))) + dart.notNull(vp8_filter.VP8Filter.abs1[$_get](255 + dart.notNull(p1) - dart.notNull(q1))) > dart.notNull(t)) {
        return false;
      }
      return dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(p3) - dart.notNull(p2))) <= dart.nullCheck(it) && dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(p2) - dart.notNull(p1))) <= dart.notNull(it) && dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(p1) - dart.notNull(p0))) <= dart.notNull(it) && dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(q3) - dart.notNull(q2))) <= dart.notNull(it) && dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(q2) - dart.notNull(q1))) <= dart.notNull(it) && dart.notNull(vp8_filter.VP8Filter.abs0[$_get](255 + dart.notNull(q1) - dart.notNull(q0))) <= dart.notNull(it);
    }
    transformOne(src, dst) {
      let t9, t9$, t9$0, t9$1;
      if (src == null) dart.nullFailed(I$[2], 223, 33, "src");
      if (dst == null) dart.nullFailed(I$[2], 223, 50, "dst");
      let C = _native_typed_data.NativeInt32List.new(4 * 4);
      let si = 0;
      let di = 0;
      let tmp = 0;
      for (let i = 0; i < 4; i = i + 1) {
        let a = dart.notNull(src._get(si)) + dart.notNull(src._get(si + 8));
        let b = dart.notNull(src._get(si)) - dart.notNull(src._get(si + 8));
        let c = dart.notNull(vp8_filter.VP8Filter._mul(src._get(si + 4), 35468)) - dart.notNull(vp8_filter.VP8Filter._mul(src._get(si + 12), 85627));
        let d = dart.notNull(vp8_filter.VP8Filter._mul(src._get(si + 4), 85627)) + dart.notNull(vp8_filter.VP8Filter._mul(src._get(si + 12), 35468));
        C[$_set]((t9 = tmp, tmp = t9 + 1, t9), a + d);
        C[$_set]((t9$ = tmp, tmp = t9$ + 1, t9$), b + c);
        C[$_set]((t9$0 = tmp, tmp = t9$0 + 1, t9$0), b - c);
        C[$_set]((t9$1 = tmp, tmp = t9$1 + 1, t9$1), a - d);
        si = si + 1;
      }
      tmp = 0;
      for (let i = 0; i < 4; i = i + 1) {
        let dc = dart.notNull(C[$_get](tmp)) + 4;
        let a = dc + dart.notNull(C[$_get](tmp + 8));
        let b = dc - dart.notNull(C[$_get](tmp + 8));
        let c = dart.notNull(vp8_filter.VP8Filter._mul(C[$_get](tmp + 4), 35468)) - dart.notNull(vp8_filter.VP8Filter._mul(C[$_get](tmp + 12), 85627));
        let d = dart.notNull(vp8_filter.VP8Filter._mul(C[$_get](tmp + 4), 85627)) + dart.notNull(vp8_filter.VP8Filter._mul(C[$_get](tmp + 12), 35468));
        vp8_filter.VP8Filter._store(dst, di, 0, 0, a + d);
        vp8_filter.VP8Filter._store(dst, di, 1, 0, b + c);
        vp8_filter.VP8Filter._store(dst, di, 2, 0, b - c);
        vp8_filter.VP8Filter._store(dst, di, 3, 0, a - d);
        tmp = tmp + 1;
        di = di + 32;
      }
    }
    transform(src, dst, doTwo) {
      if (src == null) dart.nullFailed(I$[2], 267, 30, "src");
      if (dst == null) dart.nullFailed(I$[2], 267, 47, "dst");
      if (doTwo == null) dart.nullFailed(I$[2], 267, 57, "doTwo");
      this.transformOne(src, dst);
      if (dart.test(doTwo)) {
        this.transformOne(new input_buffer.InputBuffer.from(src, {offset: 16}), new input_buffer.InputBuffer.from(dst, {offset: 4}));
      }
    }
    transformUV(src, dst) {
      if (src == null) dart.nullFailed(I$[2], 275, 32, "src");
      if (dst == null) dart.nullFailed(I$[2], 275, 49, "dst");
      this.transform(src, dst, true);
      this.transform(new input_buffer.InputBuffer.from(src, {offset: 2 * 16}), new input_buffer.InputBuffer.from(dst, {offset: 4 * 32}), true);
    }
    transformDC(src, dst) {
      if (src == null) dart.nullFailed(I$[2], 281, 32, "src");
      if (dst == null) dart.nullFailed(I$[2], 281, 49, "dst");
      let DC = dart.notNull(src._get(0)) + 4;
      for (let j = 0; j < 4; j = j + 1) {
        for (let i = 0; i < 4; i = i + 1) {
          vp8_filter.VP8Filter._store(dst, 0, i, j, DC);
        }
      }
    }
    transformDCUV(src, dst) {
      if (src == null) dart.nullFailed(I$[2], 290, 34, "src");
      if (dst == null) dart.nullFailed(I$[2], 290, 51, "dst");
      if (src._get(0 * 16) !== 0) {
        this.transformDC(src, dst);
      }
      if (src._get(1 * 16) !== 0) {
        this.transformDC(new input_buffer.InputBuffer.from(src, {offset: 1 * 16}), new input_buffer.InputBuffer.from(dst, {offset: 4}));
      }
      if (src._get(2 * 16) !== 0) {
        this.transformDC(new input_buffer.InputBuffer.from(src, {offset: 2 * 16}), new input_buffer.InputBuffer.from(dst, {offset: 4 * 32}));
      }
      if (src._get(3 * 16) !== 0) {
        this.transformDC(new input_buffer.InputBuffer.from(src, {offset: 3 * 16}), new input_buffer.InputBuffer.from(dst, {offset: 4 * 32 + 4}));
      }
    }
    transformAC3(src, dst) {
      if (src == null) dart.nullFailed(I$[2], 309, 33, "src");
      if (dst == null) dart.nullFailed(I$[2], 309, 50, "dst");
      let a = dart.notNull(src._get(0)) + 4;
      let c4 = vp8_filter.VP8Filter._mul(src._get(4), 35468);
      let d4 = vp8_filter.VP8Filter._mul(src._get(4), 85627);
      let c1 = vp8_filter.VP8Filter._mul(src._get(1), 35468);
      let d1 = vp8_filter.VP8Filter._mul(src._get(1), 85627);
      vp8_filter.VP8Filter._store2(dst, 0, a + dart.notNull(d4), d1, c1);
      vp8_filter.VP8Filter._store2(dst, 1, a + dart.notNull(c4), d1, c1);
      vp8_filter.VP8Filter._store2(dst, 2, a - dart.notNull(c4), d1, c1);
      vp8_filter.VP8Filter._store2(dst, 3, a - dart.notNull(d4), d1, c1);
    }
    static AVG3(a, b, c) {
      if (a == null) dart.nullFailed(I$[2], 321, 23, "a");
      if (b == null) dart.nullFailed(I$[2], 321, 30, "b");
      if (c == null) dart.nullFailed(I$[2], 321, 37, "c");
      return bit_operators.shiftR(dart.notNull(a) + 2 * dart.notNull(b) + dart.notNull(c) + 2, 2);
    }
    static AVG2(a, b) {
      if (a == null) dart.nullFailed(I$[2], 322, 23, "a");
      if (b == null) dart.nullFailed(I$[2], 322, 30, "b");
      return bit_operators.shiftR(dart.notNull(a) + dart.notNull(b) + 1, 1);
    }
    static VE4(dst) {
      if (dst == null) dart.nullFailed(I$[2], 324, 31, "dst");
      let vals = T.JSArrayOfint().of([vp8_filter.VP8Filter.AVG3(dst._get(-32 - 1), dst._get(-32), dst._get(-32 + 1)), vp8_filter.VP8Filter.AVG3(dst._get(-32), dst._get(-32 + 1), dst._get(-32 + 2)), vp8_filter.VP8Filter.AVG3(dst._get(-32 + 1), dst._get(-32 + 2), dst._get(-32 + 3)), vp8_filter.VP8Filter.AVG3(dst._get(-32 + 2), dst._get(-32 + 3), dst._get(-32 + 4))]);
      for (let i = 0; i < 4; i = i + 1) {
        dst.memcpy(i * 32, 4, vals);
      }
    }
    static HE4(dst) {
      if (dst == null) dart.nullFailed(I$[2], 338, 31, "dst");
      let A = dst._get(-1 - 32);
      let B = dst._get(-1);
      let C = dst._get(-1 + 32);
      let D = dst._get(-1 + 2 * 32);
      let E = dst._get(-1 + 3 * 32);
      let d2 = new input_buffer.InputBuffer.from(dst);
      d2.toUint32List()[$_set](0, 16843009 * dart.notNull(vp8_filter.VP8Filter.AVG3(A, B, C)));
      d2.offset = dart.notNull(d2.offset) + 32;
      d2.toUint32List()[$_set](0, 16843009 * dart.notNull(vp8_filter.VP8Filter.AVG3(B, C, D)));
      d2.offset = dart.notNull(d2.offset) + 32;
      d2.toUint32List()[$_set](0, 16843009 * dart.notNull(vp8_filter.VP8Filter.AVG3(C, D, E)));
      d2.offset = dart.notNull(d2.offset) + 32;
      d2.toUint32List()[$_set](0, 16843009 * dart.notNull(vp8_filter.VP8Filter.AVG3(D, E, E)));
    }
    static DC4(dst) {
      if (dst == null) dart.nullFailed(I$[2], 356, 31, "dst");
      let dc = 4;
      for (let i = 0; i < 4; i = i + 1) {
        dc = dc + (dart.notNull(dst._get(i - 32)) + dart.notNull(dst._get(-1 + i * 32)));
      }
      dc = dc[$rightShift](3);
      for (let i = 0; i < 4; i = i + 1) {
        dst.memset(i * 32, 4, dc);
      }
    }
    static trueMotion(dst, size) {
      if (dst == null) dart.nullFailed(I$[2], 368, 38, "dst");
      if (size == null) dart.nullFailed(I$[2], 368, 47, "size");
      let di = 0;
      let clip0 = 255 - dart.notNull(dst._get(-32 - 1));
      for (let y = 0; y < dart.notNull(size); y = y + 1) {
        let clip = clip0 + dart.notNull(dst._get(di - 1));
        for (let x = 0; x < dart.notNull(size); x = x + 1) {
          dst._set(di + x, vp8_filter.VP8Filter.clip1[$_get](clip + dart.notNull(dst._get(-32 + x))));
        }
        di = di + 32;
      }
    }
    static TM4(dst) {
      if (dst == null) dart.nullFailed(I$[2], 383, 31, "dst");
      vp8_filter.VP8Filter.trueMotion(dst, 4);
    }
    static TM8uv(dst) {
      if (dst == null) dart.nullFailed(I$[2], 387, 33, "dst");
      vp8_filter.VP8Filter.trueMotion(dst, 8);
    }
    static TM16(dst) {
      if (dst == null) dart.nullFailed(I$[2], 391, 32, "dst");
      vp8_filter.VP8Filter.trueMotion(dst, 16);
    }
    static DST(x, y) {
      if (x == null) dart.nullFailed(I$[2], 395, 22, "x");
      if (y == null) dart.nullFailed(I$[2], 395, 29, "y");
      return dart.notNull(x) + dart.notNull(y) * 32;
    }
    static RD4(dst) {
      let t11, t10, t9, t11$, t10$, t9$, t11$0, t10$0, t9$0, t11$1, t10$1, t9$1, t11$2, t10$2, t9$2, t11$3, t10$3, t9$3, t11$4, t10$4, t9$4, t11$5, t10$5, t9$5, t11$6, t10$6, t9$6;
      if (dst == null) dart.nullFailed(I$[2], 398, 31, "dst");
      let I = dst._get(-1 + 0 * 32);
      let J = dst._get(-1 + 1 * 32);
      let K = dst._get(-1 + 2 * 32);
      let L = dst._get(-1 + 3 * 32);
      let X = dst._get(-1 - 32);
      let A = dst._get(0 - 32);
      let B = dst._get(1 - 32);
      let C = dst._get(2 - 32);
      let D = dst._get(3 - 32);
      dst._set(vp8_filter.VP8Filter.DST(0, 3), vp8_filter.VP8Filter.AVG3(J, K, L));
      dst._set(vp8_filter.VP8Filter.DST(0, 2), (t9 = dst, t10 = vp8_filter.VP8Filter.DST(1, 3), t11 = vp8_filter.VP8Filter.AVG3(I, J, K), t9._set(t10, t11), t11));
      dst._set(vp8_filter.VP8Filter.DST(0, 1), (t9$0 = dst, t10$0 = vp8_filter.VP8Filter.DST(1, 2), t11$0 = (t9$ = dst, t10$ = vp8_filter.VP8Filter.DST(2, 3), t11$ = vp8_filter.VP8Filter.AVG3(X, I, J), t9$._set(t10$, t11$), t11$), t9$0._set(t10$0, t11$0), t11$0));
      dst._set(vp8_filter.VP8Filter.DST(0, 0), (t9$3 = dst, t10$3 = vp8_filter.VP8Filter.DST(1, 1), t11$3 = (t9$2 = dst, t10$2 = vp8_filter.VP8Filter.DST(2, 2), t11$2 = (t9$1 = dst, t10$1 = vp8_filter.VP8Filter.DST(3, 3), t11$1 = vp8_filter.VP8Filter.AVG3(A, X, I), t9$1._set(t10$1, t11$1), t11$1), t9$2._set(t10$2, t11$2), t11$2), t9$3._set(t10$3, t11$3), t11$3));
      dst._set(vp8_filter.VP8Filter.DST(1, 0), (t9$5 = dst, t10$5 = vp8_filter.VP8Filter.DST(2, 1), t11$5 = (t9$4 = dst, t10$4 = vp8_filter.VP8Filter.DST(3, 2), t11$4 = vp8_filter.VP8Filter.AVG3(B, A, X), t9$4._set(t10$4, t11$4), t11$4), t9$5._set(t10$5, t11$5), t11$5));
      dst._set(vp8_filter.VP8Filter.DST(2, 0), (t9$6 = dst, t10$6 = vp8_filter.VP8Filter.DST(3, 1), t11$6 = vp8_filter.VP8Filter.AVG3(C, B, A), t9$6._set(t10$6, t11$6), t11$6));
      dst._set(vp8_filter.VP8Filter.DST(3, 0), vp8_filter.VP8Filter.AVG3(D, C, B));
    }
    static LD4(dst) {
      let t11, t10, t9, t11$, t10$, t9$, t11$0, t10$0, t9$0, t11$1, t10$1, t9$1, t11$2, t10$2, t9$2, t11$3, t10$3, t9$3, t11$4, t10$4, t9$4, t11$5, t10$5, t9$5, t11$6, t10$6, t9$6;
      if (dst == null) dart.nullFailed(I$[2], 420, 31, "dst");
      let A = dst._get(0 - 32);
      let B = dst._get(1 - 32);
      let C = dst._get(2 - 32);
      let D = dst._get(3 - 32);
      let E = dst._get(4 - 32);
      let F = dst._get(5 - 32);
      let G = dst._get(6 - 32);
      let H = dst._get(7 - 32);
      dst._set(vp8_filter.VP8Filter.DST(0, 0), vp8_filter.VP8Filter.AVG3(A, B, C));
      dst._set(vp8_filter.VP8Filter.DST(1, 0), (t9 = dst, t10 = vp8_filter.VP8Filter.DST(0, 1), t11 = vp8_filter.VP8Filter.AVG3(B, C, D), t9._set(t10, t11), t11));
      dst._set(vp8_filter.VP8Filter.DST(2, 0), (t9$0 = dst, t10$0 = vp8_filter.VP8Filter.DST(1, 1), t11$0 = (t9$ = dst, t10$ = vp8_filter.VP8Filter.DST(0, 2), t11$ = vp8_filter.VP8Filter.AVG3(C, D, E), t9$._set(t10$, t11$), t11$), t9$0._set(t10$0, t11$0), t11$0));
      dst._set(vp8_filter.VP8Filter.DST(3, 0), (t9$3 = dst, t10$3 = vp8_filter.VP8Filter.DST(2, 1), t11$3 = (t9$2 = dst, t10$2 = vp8_filter.VP8Filter.DST(1, 2), t11$2 = (t9$1 = dst, t10$1 = vp8_filter.VP8Filter.DST(0, 3), t11$1 = vp8_filter.VP8Filter.AVG3(D, E, F), t9$1._set(t10$1, t11$1), t11$1), t9$2._set(t10$2, t11$2), t11$2), t9$3._set(t10$3, t11$3), t11$3));
      dst._set(vp8_filter.VP8Filter.DST(3, 1), (t9$5 = dst, t10$5 = vp8_filter.VP8Filter.DST(2, 2), t11$5 = (t9$4 = dst, t10$4 = vp8_filter.VP8Filter.DST(1, 3), t11$4 = vp8_filter.VP8Filter.AVG3(E, F, G), t9$4._set(t10$4, t11$4), t11$4), t9$5._set(t10$5, t11$5), t11$5));
      dst._set(vp8_filter.VP8Filter.DST(3, 2), (t9$6 = dst, t10$6 = vp8_filter.VP8Filter.DST(2, 3), t11$6 = vp8_filter.VP8Filter.AVG3(F, G, H), t9$6._set(t10$6, t11$6), t11$6));
      dst._set(vp8_filter.VP8Filter.DST(3, 3), vp8_filter.VP8Filter.AVG3(G, H, H));
    }
    static VR4(dst) {
      let t11, t10, t9, t11$, t10$, t9$, t11$0, t10$0, t9$0, t11$1, t10$1, t9$1, t11$2, t10$2, t9$2, t11$3, t10$3, t9$3;
      if (dst == null) dart.nullFailed(I$[2], 440, 31, "dst");
      let I = dst._get(-1 + 0 * 32);
      let J = dst._get(-1 + 1 * 32);
      let K = dst._get(-1 + 2 * 32);
      let X = dst._get(-1 - 32);
      let A = dst._get(0 - 32);
      let B = dst._get(1 - 32);
      let C = dst._get(2 - 32);
      let D = dst._get(3 - 32);
      dst._set(vp8_filter.VP8Filter.DST(0, 0), (t9 = dst, t10 = vp8_filter.VP8Filter.DST(1, 2), t11 = vp8_filter.VP8Filter.AVG2(X, A), t9._set(t10, t11), t11));
      dst._set(vp8_filter.VP8Filter.DST(1, 0), (t9$ = dst, t10$ = vp8_filter.VP8Filter.DST(2, 2), t11$ = vp8_filter.VP8Filter.AVG2(A, B), t9$._set(t10$, t11$), t11$));
      dst._set(vp8_filter.VP8Filter.DST(2, 0), (t9$0 = dst, t10$0 = vp8_filter.VP8Filter.DST(3, 2), t11$0 = vp8_filter.VP8Filter.AVG2(B, C), t9$0._set(t10$0, t11$0), t11$0));
      dst._set(vp8_filter.VP8Filter.DST(3, 0), vp8_filter.VP8Filter.AVG2(C, D));
      dst._set(vp8_filter.VP8Filter.DST(0, 3), vp8_filter.VP8Filter.AVG3(K, J, I));
      dst._set(vp8_filter.VP8Filter.DST(0, 2), vp8_filter.VP8Filter.AVG3(J, I, X));
      dst._set(vp8_filter.VP8Filter.DST(0, 1), (t9$1 = dst, t10$1 = vp8_filter.VP8Filter.DST(1, 3), t11$1 = vp8_filter.VP8Filter.AVG3(I, X, A), t9$1._set(t10$1, t11$1), t11$1));
      dst._set(vp8_filter.VP8Filter.DST(1, 1), (t9$2 = dst, t10$2 = vp8_filter.VP8Filter.DST(2, 3), t11$2 = vp8_filter.VP8Filter.AVG3(X, A, B), t9$2._set(t10$2, t11$2), t11$2));
      dst._set(vp8_filter.VP8Filter.DST(2, 1), (t9$3 = dst, t10$3 = vp8_filter.VP8Filter.DST(3, 3), t11$3 = vp8_filter.VP8Filter.AVG3(A, B, C), t9$3._set(t10$3, t11$3), t11$3));
      dst._set(vp8_filter.VP8Filter.DST(3, 1), vp8_filter.VP8Filter.AVG3(B, C, D));
    }
    static VL4(dst) {
      let t11, t10, t9, t11$, t10$, t9$, t11$0, t10$0, t9$0, t11$1, t10$1, t9$1, t11$2, t10$2, t9$2, t11$3, t10$3, t9$3;
      if (dst == null) dart.nullFailed(I$[2], 463, 31, "dst");
      let A = dst._get(0 - 32);
      let B = dst._get(1 - 32);
      let C = dst._get(2 - 32);
      let D = dst._get(3 - 32);
      let E = dst._get(4 - 32);
      let F = dst._get(5 - 32);
      let G = dst._get(6 - 32);
      let H = dst._get(7 - 32);
      dst._set(vp8_filter.VP8Filter.DST(0, 0), vp8_filter.VP8Filter.AVG2(A, B));
      dst._set(vp8_filter.VP8Filter.DST(1, 0), (t9 = dst, t10 = vp8_filter.VP8Filter.DST(0, 2), t11 = vp8_filter.VP8Filter.AVG2(B, C), t9._set(t10, t11), t11));
      dst._set(vp8_filter.VP8Filter.DST(2, 0), (t9$ = dst, t10$ = vp8_filter.VP8Filter.DST(1, 2), t11$ = vp8_filter.VP8Filter.AVG2(C, D), t9$._set(t10$, t11$), t11$));
      dst._set(vp8_filter.VP8Filter.DST(3, 0), (t9$0 = dst, t10$0 = vp8_filter.VP8Filter.DST(2, 2), t11$0 = vp8_filter.VP8Filter.AVG2(D, E), t9$0._set(t10$0, t11$0), t11$0));
      dst._set(vp8_filter.VP8Filter.DST(0, 1), vp8_filter.VP8Filter.AVG3(A, B, C));
      dst._set(vp8_filter.VP8Filter.DST(1, 1), (t9$1 = dst, t10$1 = vp8_filter.VP8Filter.DST(0, 3), t11$1 = vp8_filter.VP8Filter.AVG3(B, C, D), t9$1._set(t10$1, t11$1), t11$1));
      dst._set(vp8_filter.VP8Filter.DST(2, 1), (t9$2 = dst, t10$2 = vp8_filter.VP8Filter.DST(1, 3), t11$2 = vp8_filter.VP8Filter.AVG3(C, D, E), t9$2._set(t10$2, t11$2), t11$2));
      dst._set(vp8_filter.VP8Filter.DST(3, 1), (t9$3 = dst, t10$3 = vp8_filter.VP8Filter.DST(2, 3), t11$3 = vp8_filter.VP8Filter.AVG3(D, E, F), t9$3._set(t10$3, t11$3), t11$3));
      dst._set(vp8_filter.VP8Filter.DST(3, 2), vp8_filter.VP8Filter.AVG3(E, F, G));
      dst._set(vp8_filter.VP8Filter.DST(3, 3), vp8_filter.VP8Filter.AVG3(F, G, H));
    }
    static HU4(dst) {
      let t11, t10, t9, t11$, t10$, t9$, t11$0, t10$0, t9$0, t11$1, t10$1, t9$1, t10$2, t9$2, t11$2, t10$3, t9$3, t11$3, t10$4, t9$4, t11$4, t10$5, t9$5, t11$5, t10$6, t9$6;
      if (dst == null) dart.nullFailed(I$[2], 486, 31, "dst");
      let I = dst._get(-1 + 0 * 32);
      let J = dst._get(-1 + 1 * 32);
      let K = dst._get(-1 + 2 * 32);
      let L = dst._get(-1 + 3 * 32);
      dst._set(vp8_filter.VP8Filter.DST(0, 0), vp8_filter.VP8Filter.AVG2(I, J));
      dst._set(vp8_filter.VP8Filter.DST(2, 0), (t9 = dst, t10 = vp8_filter.VP8Filter.DST(0, 1), t11 = vp8_filter.VP8Filter.AVG2(J, K), t9._set(t10, t11), t11));
      dst._set(vp8_filter.VP8Filter.DST(2, 1), (t9$ = dst, t10$ = vp8_filter.VP8Filter.DST(0, 2), t11$ = vp8_filter.VP8Filter.AVG2(K, L), t9$._set(t10$, t11$), t11$));
      dst._set(vp8_filter.VP8Filter.DST(1, 0), vp8_filter.VP8Filter.AVG3(I, J, K));
      dst._set(vp8_filter.VP8Filter.DST(3, 0), (t9$0 = dst, t10$0 = vp8_filter.VP8Filter.DST(1, 1), t11$0 = vp8_filter.VP8Filter.AVG3(J, K, L), t9$0._set(t10$0, t11$0), t11$0));
      dst._set(vp8_filter.VP8Filter.DST(3, 1), (t9$1 = dst, t10$1 = vp8_filter.VP8Filter.DST(1, 2), t11$1 = vp8_filter.VP8Filter.AVG3(K, L, L), t9$1._set(t10$1, t11$1), t11$1));
      dst._set(vp8_filter.VP8Filter.DST(3, 2), (t9$6 = dst, t10$6 = vp8_filter.VP8Filter.DST(2, 2), t11$5 = (t9$5 = dst, t10$5 = vp8_filter.VP8Filter.DST(0, 3), t11$4 = (t9$4 = dst, t10$4 = vp8_filter.VP8Filter.DST(1, 3), t11$3 = (t9$3 = dst, t10$3 = vp8_filter.VP8Filter.DST(2, 3), t11$2 = (t9$2 = dst, t10$2 = vp8_filter.VP8Filter.DST(3, 3), t9$2._set(t10$2, L), L), t9$3._set(t10$3, t11$2), t11$2), t9$4._set(t10$4, t11$3), t11$3), t9$5._set(t10$5, t11$4), t11$4), t9$6._set(t10$6, t11$5), t11$5));
    }
    static HD4(dst) {
      let t11, t10, t9, t11$, t10$, t9$, t11$0, t10$0, t9$0, t11$1, t10$1, t9$1, t11$2, t10$2, t9$2, t11$3, t10$3, t9$3;
      if (dst == null) dart.nullFailed(I$[2], 502, 31, "dst");
      let I = dst._get(-1 + 0 * 32);
      let J = dst._get(-1 + 1 * 32);
      let K = dst._get(-1 + 2 * 32);
      let L = dst._get(-1 + 3 * 32);
      let X = dst._get(-1 - 32);
      let A = dst._get(0 - 32);
      let B = dst._get(1 - 32);
      let C = dst._get(2 - 32);
      dst._set(vp8_filter.VP8Filter.DST(0, 0), (t9 = dst, t10 = vp8_filter.VP8Filter.DST(2, 1), t11 = vp8_filter.VP8Filter.AVG2(I, X), t9._set(t10, t11), t11));
      dst._set(vp8_filter.VP8Filter.DST(0, 1), (t9$ = dst, t10$ = vp8_filter.VP8Filter.DST(2, 2), t11$ = vp8_filter.VP8Filter.AVG2(J, I), t9$._set(t10$, t11$), t11$));
      dst._set(vp8_filter.VP8Filter.DST(0, 2), (t9$0 = dst, t10$0 = vp8_filter.VP8Filter.DST(2, 3), t11$0 = vp8_filter.VP8Filter.AVG2(K, J), t9$0._set(t10$0, t11$0), t11$0));
      dst._set(vp8_filter.VP8Filter.DST(0, 3), vp8_filter.VP8Filter.AVG2(L, K));
      dst._set(vp8_filter.VP8Filter.DST(3, 0), vp8_filter.VP8Filter.AVG3(A, B, C));
      dst._set(vp8_filter.VP8Filter.DST(2, 0), vp8_filter.VP8Filter.AVG3(X, A, B));
      dst._set(vp8_filter.VP8Filter.DST(1, 0), (t9$1 = dst, t10$1 = vp8_filter.VP8Filter.DST(3, 1), t11$1 = vp8_filter.VP8Filter.AVG3(I, X, A), t9$1._set(t10$1, t11$1), t11$1));
      dst._set(vp8_filter.VP8Filter.DST(1, 1), (t9$2 = dst, t10$2 = vp8_filter.VP8Filter.DST(3, 2), t11$2 = vp8_filter.VP8Filter.AVG3(J, I, X), t9$2._set(t10$2, t11$2), t11$2));
      dst._set(vp8_filter.VP8Filter.DST(1, 2), (t9$3 = dst, t10$3 = vp8_filter.VP8Filter.DST(3, 3), t11$3 = vp8_filter.VP8Filter.AVG3(K, J, I), t9$3._set(t10$3, t11$3), t11$3));
      dst._set(vp8_filter.VP8Filter.DST(1, 3), vp8_filter.VP8Filter.AVG3(L, K, J));
    }
    static VE16(dst) {
      if (dst == null) dart.nullFailed(I$[2], 525, 32, "dst");
      for (let j = 0; j < 16; j = j + 1) {
        dst.memcpy(j * 32, 16, dst, -32);
      }
    }
    static HE16(dst) {
      if (dst == null) dart.nullFailed(I$[2], 532, 32, "dst");
      let di = 0;
      for (let j = 16; j > 0; j = j - 1) {
        dst.memset(di, 16, dst._get(di - 1));
        di = di + 32;
      }
    }
    static Put16(v, dst) {
      if (v == null) dart.nullFailed(I$[2], 541, 25, "v");
      if (dst == null) dart.nullFailed(I$[2], 541, 40, "dst");
      for (let j = 0; j < 16; j = j + 1) {
        dst.memset(j * 32, 16, v);
      }
    }
    static DC16(dst) {
      if (dst == null) dart.nullFailed(I$[2], 547, 32, "dst");
      let DC = 16;
      for (let j = 0; j < 16; j = j + 1) {
        DC = DC + (dart.notNull(dst._get(-1 + j * 32)) + dart.notNull(dst._get(j - 32)));
      }
      vp8_filter.VP8Filter.Put16(DC[$rightShift](5), dst);
    }
    static DC16NoTop(dst) {
      if (dst == null) dart.nullFailed(I$[2], 557, 37, "dst");
      let DC = 8;
      for (let j = 0; j < 16; j = j + 1) {
        DC = DC + dart.notNull(dst._get(-1 + j * 32));
      }
      vp8_filter.VP8Filter.Put16(DC[$rightShift](4), dst);
    }
    static DC16NoLeft(dst) {
      if (dst == null) dart.nullFailed(I$[2], 566, 38, "dst");
      let DC = 8;
      for (let i = 0; i < 16; i = i + 1) {
        DC = DC + dart.notNull(dst._get(i - 32));
      }
      vp8_filter.VP8Filter.Put16(DC[$rightShift](4), dst);
    }
    static DC16NoTopLeft(dst) {
      if (dst == null) dart.nullFailed(I$[2], 575, 41, "dst");
      vp8_filter.VP8Filter.Put16(128, dst);
    }
    static VE8uv(dst) {
      if (dst == null) dart.nullFailed(I$[2], 579, 33, "dst");
      for (let j = 0; j < 8; j = j + 1) {
        dst.memcpy(j * 32, 8, dst, -32);
      }
    }
    static HE8uv(dst) {
      if (dst == null) dart.nullFailed(I$[2], 585, 33, "dst");
      let di = 0;
      for (let j = 0; j < 8; j = j + 1) {
        dst.memset(di, 8, dst._get(di - 1));
        di = di + 32;
      }
    }
    static Put8x8uv(value, dst) {
      if (value == null) dart.nullFailed(I$[2], 594, 28, "value");
      if (dst == null) dart.nullFailed(I$[2], 594, 47, "dst");
      for (let j = 0; j < 8; j = j + 1) {
        dst.memset(j * 32, 8, value);
      }
    }
    static DC8uv(dst) {
      if (dst == null) dart.nullFailed(I$[2], 600, 33, "dst");
      let dc0 = 8;
      for (let i = 0; i < 8; i = i + 1) {
        dc0 = dc0 + (dart.notNull(dst._get(i - 32)) + dart.notNull(dst._get(-1 + i * 32)));
      }
      vp8_filter.VP8Filter.Put8x8uv(dc0[$rightShift](4), dst);
    }
    static DC8uvNoLeft(dst) {
      if (dst == null) dart.nullFailed(I$[2], 609, 39, "dst");
      let dc0 = 4;
      for (let i = 0; i < 8; i = i + 1) {
        dc0 = dc0 + dart.notNull(dst._get(i - 32));
      }
      vp8_filter.VP8Filter.Put8x8uv(dc0[$rightShift](3), dst);
    }
    static DC8uvNoTop(dst) {
      if (dst == null) dart.nullFailed(I$[2], 618, 38, "dst");
      let dc0 = 4;
      for (let i = 0; i < 8; i = i + 1) {
        dc0 = dc0 + dart.notNull(dst._get(-1 + i * 32));
      }
      vp8_filter.VP8Filter.Put8x8uv(dc0[$rightShift](3), dst);
    }
    static DC8uvNoTopLeft(dst) {
      if (dst == null) dart.nullFailed(I$[2], 627, 42, "dst");
      vp8_filter.VP8Filter.Put8x8uv(128, dst);
    }
    static _mul(a, b) {
      if (a == null) dart.nullFailed(I$[2], 656, 23, "a");
      if (b == null) dart.nullFailed(I$[2], 656, 30, "b");
      let c = dart.notNull(a) * dart.notNull(b);
      return bit_operators.shiftR(c, 16);
    }
    static _store(dst, di, x, y, v) {
      if (dst == null) dart.nullFailed(I$[2], 661, 34, "dst");
      if (di == null) dart.nullFailed(I$[2], 661, 43, "di");
      if (x == null) dart.nullFailed(I$[2], 661, 51, "x");
      if (y == null) dart.nullFailed(I$[2], 661, 58, "y");
      if (v == null) dart.nullFailed(I$[2], 661, 65, "v");
      dst._set(dart.notNull(di) + dart.notNull(x) + dart.notNull(y) * 32, vp8_filter.VP8Filter._clip8b(dart.notNull(dst._get(dart.notNull(di) + dart.notNull(x) + dart.notNull(y) * 32)) + v[$rightShift](3)));
    }
    static _store2(dst, y, dc, d, c) {
      if (dst == null) dart.nullFailed(I$[2], 665, 35, "dst");
      if (y == null) dart.nullFailed(I$[2], 665, 44, "y");
      if (dc == null) dart.nullFailed(I$[2], 665, 51, "dc");
      if (d == null) dart.nullFailed(I$[2], 665, 59, "d");
      if (c == null) dart.nullFailed(I$[2], 665, 66, "c");
      vp8_filter.VP8Filter._store(dst, 0, 0, y, dart.notNull(dc) + dart.notNull(d));
      vp8_filter.VP8Filter._store(dst, 0, 1, y, dart.notNull(dc) + dart.notNull(c));
      vp8_filter.VP8Filter._store(dst, 0, 2, y, dart.notNull(dc) - dart.notNull(c));
      vp8_filter.VP8Filter._store(dst, 0, 3, y, dart.notNull(dc) - dart.notNull(d));
    }
    static _initTables() {
      if (!dart.test(vp8_filter.VP8Filter._tablesInitialized)) {
        for (let i = -255; i <= 255; i = i + 1) {
          vp8_filter.VP8Filter.abs0[$_set](255 + i, i < 0 ? -i : i);
          vp8_filter.VP8Filter.abs1[$_set](255 + i, vp8_filter.VP8Filter.abs0[$_get](255 + i)[$rightShift](1));
        }
        for (let i = -1020; i <= 1020; i = i + 1) {
          vp8_filter.VP8Filter.sclip1[$_set](1020 + i, i < -128 ? -128 : i > 127 ? 127 : i);
        }
        for (let i = -112; i <= 112; i = i + 1) {
          vp8_filter.VP8Filter.sclip2[$_set](112 + i, i < -16 ? -16 : i > 15 ? 15 : i);
        }
        for (let i = -255; i <= 255 + 255; i = i + 1) {
          vp8_filter.VP8Filter.clip1[$_set](255 + i, i < 0 ? 0 : i > 255 ? 255 : i);
        }
        vp8_filter.VP8Filter._tablesInitialized = true;
      }
    }
    static _clip8b(v) {
      if (v == null) dart.nullFailed(I$[2], 718, 26, "v");
      return (dart.notNull(v) & -256) === 0 ? v : dart.notNull(v) < 0 ? 0 : 255;
    }
  };
  (vp8_filter.VP8Filter.new = function() {
    vp8_filter.VP8Filter._initTables();
  }).prototype = vp8_filter.VP8Filter.prototype;
  dart.addTypeTests(vp8_filter.VP8Filter);
  dart.addTypeCaches(vp8_filter.VP8Filter);
  dart.setMethodSignature(vp8_filter.VP8Filter, () => ({
    __proto__: dart.getMethods(vp8_filter.VP8Filter.__proto__),
    simpleVFilter16: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int]),
    simpleHFilter16: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int]),
    simpleVFilter16i: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int]),
    simpleHFilter16i: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int]),
    vFilter16: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int), core.int]),
    hFilter16: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int), core.int]),
    vFilter16i: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int), core.int]),
    hFilter16i: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int), core.int]),
    vFilter8: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int), core.int]),
    hFilter8: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int), core.int]),
    vFilter8i: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer, core.int, core.int, core.int, core.int]),
    hFilter8i: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer, core.int, core.int, core.int, core.int]),
    [_filterLoop26]: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int, core.int, core.int, dart.nullable(core.int), core.int]),
    [_filterLoop24]: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int, core.int, core.int, core.int, core.int, core.int]),
    [_doFilter2]: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int]),
    [_doFilter4]: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int]),
    [_doFilter6]: dart.fnType(dart.void, [input_buffer.InputBuffer, core.int]),
    [_hev]: dart.fnType(core.bool, [input_buffer.InputBuffer, core.int, core.int]),
    [_needsFilter]: dart.fnType(core.bool, [input_buffer.InputBuffer, core.int, core.int]),
    [_needsFilter2]: dart.fnType(core.bool, [input_buffer.InputBuffer, core.int, core.int, dart.nullable(core.int)]),
    transformOne: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer]),
    transform: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer, core.bool]),
    transformUV: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer]),
    transformDC: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer]),
    transformDCUV: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer]),
    transformAC3: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer])
  }));
  dart.setLibraryUri(vp8_filter.VP8Filter, I$[3]);
  dart.defineLazy(vp8_filter.VP8Filter, {
    /*vp8_filter.VP8Filter.PredLuma4*/get PredLuma4() {
      return C[1] || CT.C1;
    },
    /*vp8_filter.VP8Filter.PredLuma16*/get PredLuma16() {
      return C[12] || CT.C12;
    },
    /*vp8_filter.VP8Filter.PredChroma8*/get PredChroma8() {
      return C[20] || CT.C20;
    },
    /*vp8_filter.VP8Filter.kC1*/get kC1() {
      return 85627;
    },
    /*vp8_filter.VP8Filter.kC2*/get kC2() {
      return 35468;
    },
    /*vp8_filter.VP8Filter.abs0*/get abs0() {
      return _native_typed_data.NativeUint8List.new(255 + 255 + 1);
    },
    set abs0(_) {},
    /*vp8_filter.VP8Filter.abs1*/get abs1() {
      return _native_typed_data.NativeUint8List.new(255 + 255 + 1);
    },
    set abs1(_) {},
    /*vp8_filter.VP8Filter.sclip1*/get sclip1() {
      return _native_typed_data.NativeInt8List.new(1020 + 1020 + 1);
    },
    set sclip1(_) {},
    /*vp8_filter.VP8Filter.sclip2*/get sclip2() {
      return _native_typed_data.NativeInt8List.new(112 + 112 + 1);
    },
    set sclip2(_) {},
    /*vp8_filter.VP8Filter.clip1*/get clip1() {
      return _native_typed_data.NativeUint8List.new(255 + 510 + 1);
    },
    set clip1(_) {},
    /*vp8_filter.VP8Filter._tablesInitialized*/get _tablesInitialized() {
      return false;
    },
    set _tablesInitialized(_) {}
  }, false);
  var input$ = dart.privateName(vp8, "VP8.input");
  var output = dart.privateName(vp8, "VP8.output");
  var __VP8_br = dart.privateName(vp8, "_#VP8#br");
  var __VP8_br_isSet = dart.privateName(vp8, "_#VP8#br#isSet");
  var __VP8__dsp = dart.privateName(vp8, "_#VP8#_dsp");
  var __VP8__dsp_isSet = dart.privateName(vp8, "_#VP8#_dsp#isSet");
  var _frameHeader = dart.privateName(vp8, "_frameHeader");
  var _picHeader = dart.privateName(vp8, "_picHeader");
  var _filterHeader = dart.privateName(vp8, "_filterHeader");
  var _segmentHeader = dart.privateName(vp8, "_segmentHeader");
  var __VP8__cropLeft = dart.privateName(vp8, "_#VP8#_cropLeft");
  var __VP8__cropLeft_isSet = dart.privateName(vp8, "_#VP8#_cropLeft#isSet");
  var __VP8__cropRight = dart.privateName(vp8, "_#VP8#_cropRight");
  var __VP8__cropRight_isSet = dart.privateName(vp8, "_#VP8#_cropRight#isSet");
  var _cropTop = dart.privateName(vp8, "_cropTop");
  var _cropBottom = dart.privateName(vp8, "_cropBottom");
  var _mbWidth = dart.privateName(vp8, "_mbWidth");
  var _mbHeight = dart.privateName(vp8, "_mbHeight");
  var __VP8__tlMbX = dart.privateName(vp8, "_#VP8#_tlMbX");
  var __VP8__tlMbX_isSet = dart.privateName(vp8, "_#VP8#_tlMbX#isSet");
  var __VP8__tlMbY = dart.privateName(vp8, "_#VP8#_tlMbY");
  var __VP8__tlMbY_isSet = dart.privateName(vp8, "_#VP8#_tlMbY#isSet");
  var _brMbX = dart.privateName(vp8, "_brMbX");
  var _brMbY = dart.privateName(vp8, "_brMbY");
  var __VP8__numPartitions = dart.privateName(vp8, "_#VP8#_numPartitions");
  var __VP8__numPartitions_isSet = dart.privateName(vp8, "_#VP8#_numPartitions#isSet");
  var _partitions = dart.privateName(vp8, "_partitions");
  var _dither = dart.privateName(vp8, "_dither");
  var _dqm = dart.privateName(vp8, "_dqm");
  var _proba = dart.privateName(vp8, "_proba");
  var __VP8__useSkipProba = dart.privateName(vp8, "_#VP8#_useSkipProba");
  var __VP8__useSkipProba_isSet = dart.privateName(vp8, "_#VP8#_useSkipProba#isSet");
  var __VP8__skipP = dart.privateName(vp8, "_#VP8#_skipP");
  var __VP8__skipP_isSet = dart.privateName(vp8, "_#VP8#_skipP#isSet");
  var _intraT = dart.privateName(vp8, "_intraT");
  var _intraL = dart.privateName(vp8, "_intraL");
  var __VP8__segment = dart.privateName(vp8, "_#VP8#_segment");
  var __VP8__segment_isSet = dart.privateName(vp8, "_#VP8#_segment#isSet");
  var __VP8__yuvT = dart.privateName(vp8, "_#VP8#_yuvT");
  var __VP8__yuvT_isSet = dart.privateName(vp8, "_#VP8#_yuvT#isSet");
  var __VP8__mbInfo = dart.privateName(vp8, "_#VP8#_mbInfo");
  var __VP8__mbInfo_isSet = dart.privateName(vp8, "_#VP8#_mbInfo#isSet");
  var __VP8__fInfo = dart.privateName(vp8, "_#VP8#_fInfo");
  var __VP8__fInfo_isSet = dart.privateName(vp8, "_#VP8#_fInfo#isSet");
  var __VP8__yuvBlock = dart.privateName(vp8, "_#VP8#_yuvBlock");
  var __VP8__yuvBlock_isSet = dart.privateName(vp8, "_#VP8#_yuvBlock#isSet");
  var __VP8__cacheY = dart.privateName(vp8, "_#VP8#_cacheY");
  var __VP8__cacheY_isSet = dart.privateName(vp8, "_#VP8#_cacheY#isSet");
  var __VP8__cacheU = dart.privateName(vp8, "_#VP8#_cacheU");
  var __VP8__cacheU_isSet = dart.privateName(vp8, "_#VP8#_cacheU#isSet");
  var __VP8__cacheV = dart.privateName(vp8, "_#VP8#_cacheV");
  var __VP8__cacheV_isSet = dart.privateName(vp8, "_#VP8#_cacheV#isSet");
  var _cacheYStride = dart.privateName(vp8, "_cacheYStride");
  var _cacheUVStride = dart.privateName(vp8, "_cacheUVStride");
  var __VP8__tmpY = dart.privateName(vp8, "_#VP8#_tmpY");
  var __VP8__tmpY_isSet = dart.privateName(vp8, "_#VP8#_tmpY#isSet");
  var __VP8__tmpU = dart.privateName(vp8, "_#VP8#_tmpU");
  var __VP8__tmpU_isSet = dart.privateName(vp8, "_#VP8#_tmpU#isSet");
  var __VP8__tmpV = dart.privateName(vp8, "_#VP8#_tmpV");
  var __VP8__tmpV_isSet = dart.privateName(vp8, "_#VP8#_tmpV#isSet");
  var __VP8__y = dart.privateName(vp8, "_#VP8#_y");
  var __VP8__y_isSet = dart.privateName(vp8, "_#VP8#_y#isSet");
  var __VP8__u = dart.privateName(vp8, "_#VP8#_u");
  var __VP8__u_isSet = dart.privateName(vp8, "_#VP8#_u#isSet");
  var __VP8__v = dart.privateName(vp8, "_#VP8#_v");
  var __VP8__v_isSet = dart.privateName(vp8, "_#VP8#_v#isSet");
  var _a = dart.privateName(vp8, "_a");
  var _mbX = dart.privateName(vp8, "_mbX");
  var _mbY = dart.privateName(vp8, "_mbY");
  var __VP8__mbData = dart.privateName(vp8, "_#VP8#_mbData");
  var __VP8__mbData_isSet = dart.privateName(vp8, "_#VP8#_mbData#isSet");
  var _filterType = dart.privateName(vp8, "_filterType");
  var __VP8__fStrengths = dart.privateName(vp8, "_#VP8#_fStrengths");
  var __VP8__fStrengths_isSet = dart.privateName(vp8, "_#VP8#_fStrengths#isSet");
  var __VP8__alpha = dart.privateName(vp8, "_#VP8#_alpha");
  var __VP8__alpha_isSet = dart.privateName(vp8, "_#VP8#_alpha#isSet");
  var _alphaData = dart.privateName(vp8, "_alphaData");
  var __VP8__alphaPlane = dart.privateName(vp8, "_#VP8#_alphaPlane");
  var __VP8__alphaPlane_isSet = dart.privateName(vp8, "_#VP8#_alphaPlane#isSet");
  var _webp$ = dart.privateName(vp8, "_webp");
  var _getHeaders = dart.privateName(vp8, "_getHeaders");
  var _initFrame = dart.privateName(vp8, "_initFrame");
  var _parseFrame = dart.privateName(vp8, "_parseFrame");
  var _cropLeft = dart.privateName(vp8, "_cropLeft");
  var _cropRight = dart.privateName(vp8, "_cropRight");
  var _segment = dart.privateName(vp8, "_segment");
  var _parseSegmentHeader = dart.privateName(vp8, "_parseSegmentHeader");
  var _parseFilterHeader = dart.privateName(vp8, "_parseFilterHeader");
  var _parsePartitions = dart.privateName(vp8, "_parsePartitions");
  var _parseQuant = dart.privateName(vp8, "_parseQuant");
  var _parseProba = dart.privateName(vp8, "_parseProba");
  var _numPartitions = dart.privateName(vp8, "_numPartitions");
  var _useSkipProba = dart.privateName(vp8, "_useSkipProba");
  var _skipP = dart.privateName(vp8, "_skipP");
  var _fStrengths = dart.privateName(vp8, "_fStrengths");
  var _precomputeFilterStrengths = dart.privateName(vp8, "_precomputeFilterStrengths");
  var _yuvT = dart.privateName(vp8, "_yuvT");
  var _yuvBlock = dart.privateName(vp8, "_yuvBlock");
  var _cacheY = dart.privateName(vp8, "_cacheY");
  var _cacheU = dart.privateName(vp8, "_cacheU");
  var _cacheV = dart.privateName(vp8, "_cacheV");
  var _tmpY = dart.privateName(vp8, "_tmpY");
  var _tmpU = dart.privateName(vp8, "_tmpU");
  var _tmpV = dart.privateName(vp8, "_tmpV");
  var _tlMbX = dart.privateName(vp8, "_tlMbX");
  var _tlMbY = dart.privateName(vp8, "_tlMbY");
  var _mbInfo = dart.privateName(vp8, "_mbInfo");
  var _mbData = dart.privateName(vp8, "_mbData");
  var _fInfo = dart.privateName(vp8, "_fInfo");
  var _dsp = dart.privateName(vp8, "_dsp");
  var _decodeMB = dart.privateName(vp8, "_decodeMB");
  var _processRow = dart.privateName(vp8, "_processRow");
  var _reconstructRow = dart.privateName(vp8, "_reconstructRow");
  var _finishRow = dart.privateName(vp8, "_finishRow");
  var _doTransform = dart.privateName(vp8, "_doTransform");
  var _doUVTransform = dart.privateName(vp8, "_doUVTransform");
  var _doFilter = dart.privateName(vp8, "_doFilter");
  var _filterRow = dart.privateName(vp8, "_filterRow");
  var _ditherRow = dart.privateName(vp8, "_ditherRow");
  var _y = dart.privateName(vp8, "_y");
  var _u = dart.privateName(vp8, "_u");
  var _v = dart.privateName(vp8, "_v");
  var _decompressAlphaRows = dart.privateName(vp8, "_decompressAlphaRows");
  var _put = dart.privateName(vp8, "_put");
  var _emitFancyRGB = dart.privateName(vp8, "_emitFancyRGB");
  var _emitAlphaRGB = dart.privateName(vp8, "_emitAlphaRGB");
  var _clip8 = dart.privateName(vp8, "_clip8");
  var _yuvToR = dart.privateName(vp8, "_yuvToR");
  var _yuvToG = dart.privateName(vp8, "_yuvToG");
  var _yuvToB = dart.privateName(vp8, "_yuvToB");
  var _yuvToRgb = dart.privateName(vp8, "_yuvToRgb");
  var _yuvToRgba = dart.privateName(vp8, "_yuvToRgba");
  var _upsample = dart.privateName(vp8, "_upsample");
  var _alphaPlane = dart.privateName(vp8, "_alphaPlane");
  var _alpha = dart.privateName(vp8, "_alpha");
  var _parseIntraMode = dart.privateName(vp8, "_parseIntraMode");
  var _parseResiduals = dart.privateName(vp8, "_parseResiduals");
  var _getCoeffs = dart.privateName(vp8, "_getCoeffs");
  var _transformWHT = dart.privateName(vp8, "_transformWHT");
  var _nzCodeBits = dart.privateName(vp8, "_nzCodeBits");
  var _getLargeValue = dart.privateName(vp8, "_getLargeValue");
  vp8.VP8 = class VP8 extends core.Object {
    get input() {
      return this[input$];
    }
    set input(value) {
      this[input$] = value;
    }
    get output() {
      return this[output];
    }
    set output(value) {
      this[output] = value;
    }
    get webp() {
      return this[_webp$];
    }
    decodeHeader() {
      let bits = this.input.readUint24();
      let keyFrame = (dart.notNull(bits) & 1) === 0;
      if (!keyFrame) {
        return false;
      }
      if ((dart.notNull(bits) >> 1 & 7) > 3) {
        return false;
      }
      if ((dart.notNull(bits) >> 4 & 1) === 0) {
        return false;
      }
      this[_frameHeader].keyFrame = (dart.notNull(bits) & 1) === 0;
      this[_frameHeader].profile = dart.notNull(bits) >> 1 & 7;
      this[_frameHeader].show = dart.notNull(bits) >> 4 & 1;
      this[_frameHeader].partitionLength = bits[$rightShift](5);
      let signature = this.input.readUint24();
      if (signature !== 2752925) {
        return false;
      }
      this.webp.width = this.input.readUint16();
      this.webp.height = this.input.readUint16();
      return true;
    }
    decode() {
      if (!dart.test(this[_getHeaders]())) {
        return null;
      }
      this.output = new image.Image.new(this.webp.width, this.webp.height);
      if (!dart.test(this[_initFrame]())) {
        return null;
      }
      if (!dart.test(this[_parseFrame]())) {
        return null;
      }
      return this.output;
    }
    [_getHeaders]() {
      if (!dart.test(this.decodeHeader())) {
        return false;
      }
      this[_proba] = new vp8_types.VP8Proba.new();
      for (let i = 0; i < 4; i = i + 1) {
        this[_dqm][$_set](i, new vp8_types.VP8QuantMatrix.new());
      }
      this[_picHeader].width = this.webp.width;
      this[_picHeader].height = this.webp.height;
      this[_picHeader].xscale = this.webp.width[$rightShift](8)[$rightShift](6);
      this[_picHeader].yscale = this.webp.height[$rightShift](8)[$rightShift](6);
      this[_cropTop] = 0;
      this[_cropLeft] = 0;
      this[_cropRight] = this.webp.width;
      this[_cropBottom] = this.webp.height;
      this[_mbWidth] = (dart.notNull(this.webp.width) + 15)[$rightShift](4);
      this[_mbHeight] = (dart.notNull(this.webp.height) + 15)[$rightShift](4);
      this[_segment] = 0;
      this.br = new vp8_bit_reader.VP8BitReader.new(this.input.subset(this[_frameHeader].partitionLength));
      this.input.skip(this[_frameHeader].partitionLength);
      this[_picHeader].colorspace = this.br.get();
      this[_picHeader].clampType = this.br.get();
      if (!dart.test(this[_parseSegmentHeader](this[_segmentHeader], this[_proba]))) {
        return false;
      }
      if (!dart.test(this[_parseFilterHeader]())) {
        return false;
      }
      if (!dart.test(this[_parsePartitions](this.input))) {
        return false;
      }
      this[_parseQuant]();
      this.br.get();
      this[_parseProba]();
      return true;
    }
    [_parseSegmentHeader](hdr, proba) {
      if (hdr == null) dart.nullFailed(I$[4], 127, 45, "hdr");
      hdr.useSegment = this.br.get() !== 0;
      if (dart.test(hdr.useSegment)) {
        hdr.updateMap = this.br.get() !== 0;
        if (this.br.get() !== 0) {
          hdr.absoluteDelta = this.br.get() !== 0;
          for (let s = 0; s < 4; s = s + 1) {
            hdr.quantizer[$_set](s, this.br.get() !== 0 ? this.br.getSignedValue(7) : 0);
          }
          for (let s = 0; s < 4; s = s + 1) {
            hdr.filterStrength[$_set](s, this.br.get() !== 0 ? this.br.getSignedValue(6) : 0);
          }
        }
        if (dart.test(hdr.updateMap)) {
          for (let s = 0; s < 3; s = s + 1) {
            dart.nullCheck(proba).segments[$_set](s, this.br.get() !== 0 ? this.br.getValue(8) : 255);
          }
        }
      } else {
        hdr.updateMap = false;
      }
      return true;
    }
    [_parseFilterHeader]() {
      let hdr = this[_filterHeader];
      hdr.simple = this.br.get() !== 0;
      hdr.level = this.br.getValue(6);
      hdr.sharpness = this.br.getValue(3);
      hdr.useLfDelta = this.br.get() !== 0;
      if (dart.test(hdr.useLfDelta)) {
        if (this.br.get() !== 0) {
          for (let i = 0; i < 4; i = i + 1) {
            if (this.br.get() !== 0) {
              hdr.refLfDelta[$_set](i, this.br.getSignedValue(6));
            }
          }
          for (let i = 0; i < 4; i = i + 1) {
            if (this.br.get() !== 0) {
              hdr.modeLfDelta[$_set](i, this.br.getSignedValue(6));
            }
          }
        }
      }
      this[_filterType] = hdr.level === 0 ? 0 : dart.test(hdr.simple) ? 1 : 2;
      return true;
    }
    [_parsePartitions](input) {
      if (input == null) dart.nullFailed(I$[4], 193, 37, "input");
      let sz = 0;
      let bufEnd = input.length;
      this[_numPartitions] = (1)[$leftShift](this.br.getValue(2));
      let lastPart = dart.notNull(this[_numPartitions]) - 1;
      let partStart = lastPart * 3;
      if (dart.notNull(bufEnd) < dart.notNull(partStart)) {
        return false;
      }
      for (let p = 0; p < lastPart; p = p + 1) {
        let szb = input.peekBytes(3, sz);
        let psize = (dart.notNull(szb._get(0)) | dart.notNull(szb._get(1)) << 8 >>> 0 | dart.notNull(szb._get(2)) << 16 >>> 0) >>> 0;
        let partEnd = dart.notNull(partStart) + psize;
        if (dart.notNull(partEnd) > dart.notNull(bufEnd)) {
          partEnd = bufEnd;
        }
        let pin = input.subset(dart.notNull(partEnd) - dart.notNull(partStart), {position: partStart});
        this[_partitions][$_set](p, new vp8_bit_reader.VP8BitReader.new(pin));
        partStart = partEnd;
        sz = sz + 3;
      }
      let pin = input.subset(dart.notNull(bufEnd) - dart.notNull(partStart), {position: dart.notNull(input.position) + dart.notNull(partStart)});
      this[_partitions][$_set](lastPart, new vp8_bit_reader.VP8BitReader.new(pin));
      return dart.notNull(partStart) < dart.notNull(bufEnd);
    }
    [_parseQuant]() {
      let base_q0 = this.br.getValue(7);
      let dqy1_dc = this.br.get() !== 0 ? this.br.getSignedValue(4) : 0;
      let dqy2_dc = this.br.get() !== 0 ? this.br.getSignedValue(4) : 0;
      let dqy2_ac = this.br.get() !== 0 ? this.br.getSignedValue(4) : 0;
      let dquv_dc = this.br.get() !== 0 ? this.br.getSignedValue(4) : 0;
      let dquv_ac = this.br.get() !== 0 ? this.br.getSignedValue(4) : 0;
      let hdr = this[_segmentHeader];
      for (let i = 0; i < 4; i = i + 1) {
        let q = null;
        if (dart.test(hdr.useSegment)) {
          q = hdr.quantizer[$_get](i);
          if (!dart.test(hdr.absoluteDelta)) {
            q = dart.notNull(q) + dart.notNull(base_q0);
          }
        } else {
          if (i > 0) {
            this[_dqm][$_set](i, this[_dqm][$_get](0));
            continue;
          } else {
            q = base_q0;
          }
        }
        let m = dart.nullCheck(this[_dqm][$_get](i));
        m.y1Mat[$_set](0, vp8.VP8.DC_TABLE[$_get](vp8.VP8._clip(dart.notNull(q) + dart.notNull(dqy1_dc), 127)));
        m.y1Mat[$_set](1, vp8.VP8.AC_TABLE[$_get](vp8.VP8._clip(dart.notNull(q) + 0, 127)));
        m.y2Mat[$_set](0, dart.notNull(vp8.VP8.DC_TABLE[$_get](vp8.VP8._clip(dart.notNull(q) + dart.notNull(dqy2_dc), 127))) * 2);
        m.y2Mat[$_set](1, (dart.notNull(vp8.VP8.AC_TABLE[$_get](vp8.VP8._clip(dart.notNull(q) + dart.notNull(dqy2_ac), 127))) * 101581)[$rightShift](16));
        if (dart.notNull(m.y2Mat[$_get](1)) < 8) {
          m.y2Mat[$_set](1, 8);
        }
        m.uvMat[$_set](0, vp8.VP8.DC_TABLE[$_get](vp8.VP8._clip(dart.notNull(q) + dart.notNull(dquv_dc), 117)));
        m.uvMat[$_set](1, vp8.VP8.AC_TABLE[$_get](vp8.VP8._clip(dart.notNull(q) + dart.notNull(dquv_ac), 127)));
        m.uvQuant = dart.notNull(q) + dart.notNull(dquv_ac);
      }
    }
    [_parseProba]() {
      let proba = this[_proba];
      for (let t = 0; t < 4; t = t + 1) {
        for (let b = 0; b < 8; b = b + 1) {
          for (let c = 0; c < 3; c = c + 1) {
            for (let p = 0; p < 11; p = p + 1) {
              let v = this.br.getBit(vp8.VP8.COEFFS_UPDATE_PROBA[$_get](t)[$_get](b)[$_get](c)[$_get](p)) !== 0 ? this.br.getValue(8) : vp8.VP8.COEFFS_PROBA_0[$_get](t)[$_get](b)[$_get](c)[$_get](p);
              dart.nullCheck(proba).bands[$_get](t)[$_get](b).probas[$_get](c)[$_set](p, v);
            }
          }
        }
      }
      this[_useSkipProba] = this.br.get() !== 0;
      if (dart.test(this[_useSkipProba])) {
        this[_skipP] = this.br.getValue(8);
      }
    }
    [_precomputeFilterStrengths]() {
      if (dart.nullCheck(this[_filterType]) > 0) {
        let hdr = this[_filterHeader];
        for (let s = 0; s < 4; s = s + 1) {
          let baseLevel = null;
          if (dart.test(this[_segmentHeader].useSegment)) {
            baseLevel = this[_segmentHeader].filterStrength[$_get](s);
            if (!dart.test(this[_segmentHeader].absoluteDelta)) {
              baseLevel = dart.notNull(baseLevel) + dart.nullCheck(hdr.level);
            }
          } else {
            baseLevel = hdr.level;
          }
          for (let i4x4 = 0; i4x4 <= 1; i4x4 = i4x4 + 1) {
            let info = this[_fStrengths][$_get](s)[$_get](i4x4);
            let level = baseLevel;
            if (dart.test(hdr.useLfDelta)) {
              level = dart.nullCheck(level) + dart.notNull(hdr.refLfDelta[$_get](0));
              if (i4x4 !== 0) {
                level = dart.notNull(level) + dart.notNull(hdr.modeLfDelta[$_get](0));
              }
            }
            level = dart.nullCheck(level) < 0 ? 0 : dart.notNull(level) > 63 ? 63 : level;
            if (dart.notNull(level) > 0) {
              let ilevel = level;
              if (dart.notNull(hdr.sharpness) > 0) {
                if (dart.notNull(hdr.sharpness) > 4) {
                  ilevel = ilevel[$rightShift](2);
                } else {
                  ilevel = ilevel[$rightShift](1);
                }
                if (dart.notNull(ilevel) > 9 - dart.notNull(hdr.sharpness)) {
                  ilevel = 9 - dart.notNull(hdr.sharpness);
                }
              }
              if (dart.notNull(ilevel) < 1) {
                ilevel = 1;
              }
              info.fInnerLevel = ilevel;
              info.fLimit = 2 * dart.notNull(level) + dart.notNull(ilevel);
              info.hevThresh = dart.notNull(level) >= 40 ? 2 : dart.notNull(level) >= 15 ? 1 : 0;
            } else {
              info.fLimit = 0;
            }
            info.fInner = i4x4 !== 0;
          }
        }
      }
    }
    [_initFrame]() {
      if (this[_webp$].alphaData != null) {
        this[_alphaData] = this[_webp$].alphaData;
      }
      this[_fStrengths] = T.ListOfListOfVP8FInfo().generate(4, dart.fn(i => {
        if (i == null) dart.nullFailed(I$[4], 367, 27, "i");
        return T.JSArrayOfVP8FInfo().of([new vp8_types.VP8FInfo.new(), new vp8_types.VP8FInfo.new()]);
      }, T.intToListOfVP8FInfo()), {growable: false});
      this[_yuvT] = T.ListOfVP8TopSamples().generate(dart.nullCheck(this[_mbWidth]), dart.fn(_ => {
        if (_ == null) dart.nullFailed(I$[4], 370, 54, "_");
        return new vp8_types.VP8TopSamples.new();
      }, T.intToVP8TopSamples()), {growable: false});
      this[_yuvBlock] = _native_typed_data.NativeUint8List.new(832);
      this[_intraT] = _native_typed_data.NativeUint8List.new(4 * dart.nullCheck(this[_mbWidth]));
      this[_cacheYStride] = 16 * dart.nullCheck(this[_mbWidth]);
      this[_cacheUVStride] = 8 * dart.nullCheck(this[_mbWidth]);
      let extra_rows = vp8.VP8.FILTER_EXTRA_ROWS[$_get](dart.nullCheck(this[_filterType]));
      let extra_y = dart.notNull(extra_rows) * dart.nullCheck(this[_cacheYStride]);
      let extra_uv = (dart.notNull(extra_rows) / 2)[$truncate]() * dart.nullCheck(this[_cacheUVStride]);
      this[_cacheY] = new input_buffer.InputBuffer.new(_native_typed_data.NativeUint8List.new(16 * dart.nullCheck(this[_cacheYStride]) + extra_y), {offset: extra_y});
      this[_cacheU] = new input_buffer.InputBuffer.new(_native_typed_data.NativeUint8List.new(8 * dart.nullCheck(this[_cacheUVStride]) + extra_uv), {offset: extra_uv});
      this[_cacheV] = new input_buffer.InputBuffer.new(_native_typed_data.NativeUint8List.new(8 * dart.nullCheck(this[_cacheUVStride]) + extra_uv), {offset: extra_uv});
      this[_tmpY] = new input_buffer.InputBuffer.new(_native_typed_data.NativeUint8List.new(this.webp.width));
      let uvWidth = (dart.notNull(this.webp.width) + 1)[$rightShift](1);
      this[_tmpU] = new input_buffer.InputBuffer.new(_native_typed_data.NativeUint8List.new(uvWidth));
      this[_tmpV] = new input_buffer.InputBuffer.new(_native_typed_data.NativeUint8List.new(uvWidth));
      {
        let extraPixels = vp8.VP8.FILTER_EXTRA_ROWS[$_get](dart.nullCheck(this[_filterType]));
        if (this[_filterType] === 2) {
          this[_tlMbX] = 0;
          this[_tlMbY] = 0;
        } else {
          this[_tlMbX] = ((dart.notNull(this[_cropLeft]) - dart.notNull(extraPixels)) / 16)[$truncate]();
          this[_tlMbY] = ((dart.nullCheck(this[_cropTop]) - dart.notNull(extraPixels)) / 16)[$truncate]();
          if (dart.notNull(this[_tlMbX]) < 0) {
            this[_tlMbX] = 0;
          }
          if (dart.notNull(this[_tlMbY]) < 0) {
            this[_tlMbY] = 0;
          }
        }
        this[_brMbY] = ((dart.nullCheck(this[_cropBottom]) + 15 + dart.notNull(extraPixels)) / 16)[$truncate]();
        this[_brMbX] = ((dart.notNull(this[_cropRight]) + 15 + dart.notNull(extraPixels)) / 16)[$truncate]();
        if (dart.nullCheck(this[_brMbX]) > dart.nullCheck(this[_mbWidth])) {
          this[_brMbX] = this[_mbWidth];
        }
        if (dart.nullCheck(this[_brMbY]) > dart.nullCheck(this[_mbHeight])) {
          this[_brMbY] = this[_mbHeight];
        }
      }
      this[_mbInfo] = T.ListOfVP8MB().generate(dart.nullCheck(this[_mbWidth]) + 1, dart.fn(_ => {
        if (_ == null) dart.nullFailed(I$[4], 441, 46, "_");
        return new vp8_types.VP8MB.new();
      }, T.intToVP8MB()), {growable: false});
      this[_mbData] = T.ListOfVP8MBData().generate(dart.nullCheck(this[_mbWidth]), dart.fn(_ => {
        if (_ == null) dart.nullFailed(I$[4], 442, 52, "_");
        return new vp8_types.VP8MBData.new();
      }, T.intToVP8MBData()), {growable: false});
      this[_fInfo] = T.ListOfVP8FInfoN().filled(dart.nullCheck(this[_mbWidth]), null);
      this[_precomputeFilterStrengths]();
      this[_dsp] = new vp8_filter.VP8Filter.new();
      return true;
    }
    [_parseFrame]() {
      for (let t9 = this[_mbY] = 0; dart.notNull(this[_mbY]) < dart.nullCheck(this[_brMbY]); this[_mbY] = dart.notNull(this[_mbY]) + 1) {
        let tokenBr = this[_partitions][$_get]((dart.notNull(this[_mbY]) & dart.notNull(this[_numPartitions]) - 1) >>> 0);
        for (; dart.notNull(this[_mbX]) < dart.nullCheck(this[_mbWidth]); this[_mbX] = dart.notNull(this[_mbX]) + 1) {
          if (!dart.test(this[_decodeMB](tokenBr))) {
            return false;
          }
        }
        let left = this[_mbInfo][$_get](0);
        left.nz = 0;
        left.nzDc = 0;
        this[_intraL][$fillRange](0, this[_intraL][$length], 0);
        this[_mbX] = 0;
        if (!dart.test(this[_processRow]())) {
          return false;
        }
      }
      return true;
    }
    [_processRow]() {
      this[_reconstructRow]();
      let useFilter = dart.nullCheck(this[_filterType]) > 0 && dart.notNull(this[_mbY]) >= dart.notNull(this[_tlMbY]) && dart.notNull(this[_mbY]) <= dart.nullCheck(this[_brMbY]);
      return this[_finishRow](useFilter);
    }
    [_reconstructRow]() {
      let t11, t10, t11$, t10$;
      let mb_y = this[_mbY];
      let y_dst = new input_buffer.InputBuffer.new(this[_yuvBlock], {offset: 40});
      let u_dst = new input_buffer.InputBuffer.new(this[_yuvBlock], {offset: 584});
      let v_dst = new input_buffer.InputBuffer.new(this[_yuvBlock], {offset: 600});
      for (let mb_x = 0; mb_x < dart.nullCheck(this[_mbWidth]); mb_x = mb_x + 1) {
        let block = this[_mbData][$_get](mb_x);
        if (mb_x > 0) {
          for (let j = -1; j < 16; j = j + 1) {
            y_dst.memcpy(j * 32 - 4, 4, y_dst, j * 32 + 12);
          }
          for (let j = -1; j < 8; j = j + 1) {
            u_dst.memcpy(j * 32 - 4, 4, u_dst, j * 32 + 4);
            v_dst.memcpy(j * 32 - 4, 4, v_dst, j * 32 + 4);
          }
        } else {
          for (let j = 0; j < 16; j = j + 1) {
            y_dst._set(j * 32 - 1, 129);
          }
          for (let j = 0; j < 8; j = j + 1) {
            u_dst._set(j * 32 - 1, 129);
            v_dst._set(j * 32 - 1, 129);
          }
          if (dart.notNull(mb_y) > 0) {
            y_dst._set(-1 - 32, (t10$ = -1 - 32, t11$ = (t10 = -1 - 32, t11 = 129, v_dst._set(t10, t11), t11), u_dst._set(t10$, t11$), t11$));
          }
        }
        let top_yuv = this[_yuvT][$_get](mb_x);
        let coeffs = block.coeffs;
        let bits = block.nonZeroY;
        if (dart.notNull(mb_y) > 0) {
          y_dst.memcpy(-32, 16, top_yuv.y);
          u_dst.memcpy(-32, 8, top_yuv.u);
          v_dst.memcpy(-32, 8, top_yuv.v);
        } else if (mb_x === 0) {
          y_dst.memset(-32 - 1, 16 + 4 + 1, 127);
          u_dst.memset(-32 - 1, 8 + 1, 127);
          v_dst.memset(-32 - 1, 8 + 1, 127);
        }
        if (dart.test(block.isIntra4x4)) {
          let topRight = new input_buffer.InputBuffer.from(y_dst, {offset: -32 + 16});
          let topRight32 = topRight.toUint32List();
          if (dart.notNull(mb_y) > 0) {
            if (mb_x >= dart.nullCheck(this[_mbWidth]) - 1) {
              topRight.memset(0, 4, top_yuv.y[$_get](15));
            } else {
              topRight.memcpy(0, 4, this[_yuvT][$_get](mb_x + 1).y);
            }
          }
          let p = topRight32[$_get](0);
          topRight32[$_set](3 * 32, p);
          topRight32[$_set](2 * 32, p);
          topRight32[$_set](32, p);
          for (let n = 0; n < 16; n = n + 1, bits = (dart.notNull(bits) << 2 & 4294967295) >>> 0) {
            let dst = new input_buffer.InputBuffer.from(y_dst, {offset: vp8.VP8.kScan[$_get](n)});
            vp8_filter.VP8Filter.PredLuma4[$_get](block.imodes[$_get](n))(dst);
            this[_doTransform](dart.nullCheck(bits), new input_buffer.InputBuffer.new(coeffs, {offset: n * 16}), dst);
          }
        } else {
          let predFunc = dart.nullCheck(vp8.VP8._checkMode(mb_x, mb_y, block.imodes[$_get](0)));
          vp8_filter.VP8Filter.PredLuma16[$_get](predFunc)(y_dst);
          if (bits !== 0) {
            for (let n = 0; n < 16; n = n + 1, bits = (dart.notNull(bits) << 2 & 4294967295) >>> 0) {
              let dst = new input_buffer.InputBuffer.from(y_dst, {offset: vp8.VP8.kScan[$_get](n)});
              this[_doTransform](dart.nullCheck(bits), new input_buffer.InputBuffer.new(coeffs, {offset: n * 16}), dst);
            }
          }
        }
        let bits_uv = block.nonZeroUV;
        let pred_func = dart.nullCheck(vp8.VP8._checkMode(mb_x, mb_y, block.uvmode));
        vp8_filter.VP8Filter.PredChroma8[$_get](pred_func)(u_dst);
        vp8_filter.VP8Filter.PredChroma8[$_get](pred_func)(v_dst);
        let c1 = new input_buffer.InputBuffer.new(coeffs, {offset: 16 * 16});
        this[_doUVTransform](bits_uv, c1, u_dst);
        let c2 = new input_buffer.InputBuffer.new(coeffs, {offset: 20 * 16});
        this[_doUVTransform](bits_uv[$rightShift](8), c2, v_dst);
        if (dart.notNull(mb_y) < dart.nullCheck(this[_mbHeight]) - 1) {
          top_yuv.y[$setRange](0, 16, y_dst.toUint8List(), 15 * 32);
          top_yuv.u[$setRange](0, 8, u_dst.toUint8List(), 7 * 32);
          top_yuv.v[$setRange](0, 8, v_dst.toUint8List(), 7 * 32);
        }
        let y_out = mb_x * 16;
        let u_out = mb_x * 8;
        let v_out = mb_x * 8;
        for (let j = 0; j < 16; j = j + 1) {
          let start = y_out + j * dart.nullCheck(this[_cacheYStride]);
          this[_cacheY].memcpy(start, 16, y_dst, j * 32);
        }
        for (let j = 0; j < 8; j = j + 1) {
          let start = u_out + j * dart.nullCheck(this[_cacheUVStride]);
          this[_cacheU].memcpy(start, 8, u_dst, j * 32);
          start = v_out + j * dart.nullCheck(this[_cacheUVStride]);
          this[_cacheV].memcpy(start, 8, v_dst, j * 32);
        }
      }
    }
    static _checkMode(mb_x, mb_y, mode) {
      if (mb_x == null) dart.nullFailed(I$[4], 641, 30, "mb_x");
      if (mb_y == null) dart.nullFailed(I$[4], 641, 40, "mb_y");
      if (mode === 0) {
        if (mb_x === 0) {
          return mb_y === 0 ? 6 : 5;
        } else {
          return mb_y === 0 ? 4 : 0;
        }
      }
      return mode;
    }
    [_doTransform](bits, src, dst) {
      if (bits == null) dart.nullFailed(I$[4], 652, 25, "bits");
      if (src == null) dart.nullFailed(I$[4], 652, 43, "src");
      if (dst == null) dart.nullFailed(I$[4], 652, 60, "dst");
      switch (bits[$rightShift](30)) {
        case 3:
        {
          this[_dsp].transform(src, dst, false);
          break;
        }
        case 2:
        {
          this[_dsp].transformAC3(src, dst);
          break;
        }
        case 1:
        {
          this[_dsp].transformDC(src, dst);
          break;
        }
        default:
        {
          break;
        }
      }
    }
    [_doUVTransform](bits, src, dst) {
      if (bits == null) dart.nullFailed(I$[4], 668, 27, "bits");
      if (src == null) dart.nullFailed(I$[4], 668, 45, "src");
      if (dst == null) dart.nullFailed(I$[4], 668, 62, "dst");
      if ((dart.notNull(bits) & 255) !== 0) {
        if ((dart.notNull(bits) & 170) !== 0) {
          this[_dsp].transformUV(src, dst);
        } else {
          this[_dsp].transformDCUV(src, dst);
        }
      }
    }
    MACROBLOCK_VPOS(mb_y) {
      if (mb_y == null) dart.nullFailed(I$[4], 682, 27, "mb_y");
      return dart.notNull(mb_y) * 16;
    }
    [_doFilter](mbX, mbY) {
      if (mbX == null) dart.nullFailed(I$[4], 691, 22, "mbX");
      if (mbY == null) dart.nullFailed(I$[4], 691, 31, "mbY");
      let yBps = this[_cacheYStride];
      let fInfo = dart.nullCheck(this[_fInfo][$_get](mbX));
      let yDst = new input_buffer.InputBuffer.from(this[_cacheY], {offset: dart.notNull(mbX) * 16});
      let ilevel = fInfo.fInnerLevel;
      let limit = fInfo.fLimit;
      if (limit === 0) {
        return;
      }
      if (this[_filterType] === 1) {
        if (dart.notNull(mbX) > 0) {
          this[_dsp].simpleHFilter16(yDst, dart.nullCheck(yBps), dart.notNull(limit) + 4);
        }
        if (dart.test(fInfo.fInner)) {
          this[_dsp].simpleHFilter16i(yDst, dart.nullCheck(yBps), limit);
        }
        if (dart.notNull(mbY) > 0) {
          this[_dsp].simpleVFilter16(yDst, dart.nullCheck(yBps), dart.notNull(limit) + 4);
        }
        if (dart.test(fInfo.fInner)) {
          this[_dsp].simpleVFilter16i(yDst, dart.nullCheck(yBps), limit);
        }
      } else {
        let uvBps = this[_cacheUVStride];
        let uDst = new input_buffer.InputBuffer.from(this[_cacheU], {offset: dart.notNull(mbX) * 8});
        let vDst = new input_buffer.InputBuffer.from(this[_cacheV], {offset: dart.notNull(mbX) * 8});
        let hevThresh = fInfo.hevThresh;
        if (dart.notNull(mbX) > 0) {
          this[_dsp].hFilter16(yDst, dart.nullCheck(yBps), dart.notNull(limit) + 4, ilevel, hevThresh);
          this[_dsp].hFilter8(uDst, vDst, dart.nullCheck(uvBps), dart.notNull(limit) + 4, ilevel, hevThresh);
        }
        if (dart.test(fInfo.fInner)) {
          this[_dsp].hFilter16i(yDst, dart.nullCheck(yBps), limit, ilevel, hevThresh);
          this[_dsp].hFilter8i(uDst, vDst, dart.nullCheck(uvBps), limit, dart.nullCheck(ilevel), hevThresh);
        }
        if (dart.notNull(mbY) > 0) {
          this[_dsp].vFilter16(yDst, dart.nullCheck(yBps), dart.notNull(limit) + 4, ilevel, hevThresh);
          this[_dsp].vFilter8(uDst, vDst, dart.nullCheck(uvBps), dart.notNull(limit) + 4, ilevel, hevThresh);
        }
        if (dart.test(fInfo.fInner)) {
          this[_dsp].vFilter16i(yDst, dart.nullCheck(yBps), limit, ilevel, hevThresh);
          this[_dsp].vFilter8i(uDst, vDst, dart.nullCheck(uvBps), limit, dart.nullCheck(ilevel), hevThresh);
        }
      }
    }
    [_filterRow]() {
      for (let mbX = this[_tlMbX]; dart.notNull(mbX) < dart.nullCheck(this[_brMbX]); mbX = dart.notNull(mbX) + 1) {
        this[_doFilter](mbX, this[_mbY]);
      }
    }
    [_ditherRow]() {
    }
    [_finishRow](useFilter) {
      let t10, t10$, t10$0, t10$1, t10$2, t10$3, t10$4, t10$5;
      if (useFilter == null) dart.nullFailed(I$[4], 760, 24, "useFilter");
      let extraYRows = vp8.VP8.kFilterExtraRows[$_get](dart.nullCheck(this[_filterType]));
      let ySize = dart.notNull(extraYRows) * dart.nullCheck(this[_cacheYStride]);
      let uvSize = (dart.notNull(extraYRows) / 2)[$truncate]() * dart.nullCheck(this[_cacheUVStride]);
      let yDst = new input_buffer.InputBuffer.from(this[_cacheY], {offset: -ySize});
      let uDst = new input_buffer.InputBuffer.from(this[_cacheU], {offset: -uvSize});
      let vDst = new input_buffer.InputBuffer.from(this[_cacheV], {offset: -uvSize});
      let mbY = this[_mbY];
      let isFirstRow = mbY === 0;
      let isLastRow = dart.notNull(mbY) >= dart.nullCheck(this[_brMbY]) - 1;
      let yStart = this.MACROBLOCK_VPOS(mbY);
      let yEnd = this.MACROBLOCK_VPOS(dart.notNull(mbY) + 1);
      if (dart.test(useFilter)) {
        this[_filterRow]();
      }
      if (dart.test(this[_dither])) {
        this[_ditherRow]();
      }
      if (!isFirstRow) {
        yStart = dart.notNull(yStart) - dart.notNull(extraYRows);
        this[_y] = new input_buffer.InputBuffer.from(yDst);
        this[_u] = new input_buffer.InputBuffer.from(uDst);
        this[_v] = new input_buffer.InputBuffer.from(vDst);
      } else {
        this[_y] = new input_buffer.InputBuffer.from(this[_cacheY]);
        this[_u] = new input_buffer.InputBuffer.from(this[_cacheU]);
        this[_v] = new input_buffer.InputBuffer.from(this[_cacheV]);
      }
      if (!isLastRow) {
        yEnd = dart.notNull(yEnd) - dart.notNull(extraYRows);
      }
      if (dart.notNull(yEnd) > dart.nullCheck(this[_cropBottom])) {
        yEnd = this[_cropBottom];
      }
      this[_a] = null;
      if (this[_alphaData] != null && dart.notNull(yStart) < dart.nullCheck(yEnd)) {
        this[_a] = this[_decompressAlphaRows](yStart, dart.notNull(yEnd) - dart.notNull(yStart));
        if (this[_a] == null) {
          return false;
        }
      }
      if (dart.notNull(yStart) < dart.nullCheck(this[_cropTop])) {
        let deltaY = dart.nullCheck(this[_cropTop]) - dart.notNull(yStart);
        yStart = this[_cropTop];
        t10 = this[_y];
        t10.offset = dart.notNull(t10.offset) + dart.nullCheck(this[_cacheYStride]) * deltaY;
        t10$ = this[_u];
        t10$.offset = dart.notNull(t10$.offset) + dart.nullCheck(this[_cacheUVStride]) * deltaY[$rightShift](1);
        t10$0 = this[_v];
        t10$0.offset = dart.notNull(t10$0.offset) + dart.nullCheck(this[_cacheUVStride]) * deltaY[$rightShift](1);
        if (this[_a] != null) {
          t10$1 = dart.nullCheck(this[_a]);
          t10$1.offset = dart.notNull(t10$1.offset) + dart.notNull(this.webp.width) * deltaY;
        }
      }
      if (dart.nullCheck(yStart) < dart.nullCheck(yEnd)) {
        t10$2 = this[_y];
        t10$2.offset = dart.notNull(t10$2.offset) + dart.notNull(this[_cropLeft]);
        t10$3 = this[_u];
        t10$3.offset = dart.notNull(t10$3.offset) + this[_cropLeft][$rightShift](1);
        t10$4 = this[_v];
        t10$4.offset = dart.notNull(t10$4.offset) + this[_cropLeft][$rightShift](1);
        if (this[_a] != null) {
          t10$5 = dart.nullCheck(this[_a]);
          t10$5.offset = dart.notNull(t10$5.offset) + dart.notNull(this[_cropLeft]);
        }
        this[_put](dart.notNull(yStart) - dart.nullCheck(this[_cropTop]), dart.notNull(this[_cropRight]) - dart.notNull(this[_cropLeft]), dart.notNull(yEnd) - dart.notNull(yStart));
      }
      if (!isLastRow) {
        this[_cacheY].memcpy(-ySize, ySize, yDst, 16 * dart.nullCheck(this[_cacheYStride]));
        this[_cacheU].memcpy(-uvSize, uvSize, uDst, 8 * dart.nullCheck(this[_cacheUVStride]));
        this[_cacheV].memcpy(-uvSize, uvSize, vDst, 8 * dart.nullCheck(this[_cacheUVStride]));
      }
      return true;
    }
    [_put](mbY, mbW, mbH) {
      if (mbY == null) dart.nullFailed(I$[4], 842, 17, "mbY");
      if (mbW == null) dart.nullFailed(I$[4], 842, 26, "mbW");
      if (mbH == null) dart.nullFailed(I$[4], 842, 35, "mbH");
      if (dart.notNull(mbW) <= 0 || dart.notNull(mbH) <= 0) {
        return false;
      }
      this[_emitFancyRGB](mbY, mbW, mbH);
      this[_emitAlphaRGB](mbY, mbW, mbH);
      return true;
    }
    [_clip8](v) {
      if (v == null) dart.nullFailed(I$[4], 855, 18, "v");
      let d = (dart.notNull(v) & -4194304) === 0 ? v[$rightShift](14) : dart.notNull(v) < 0 ? 0 : 255;
      return d;
    }
    [_yuvToR](y, v) {
      if (y == null) dart.nullFailed(I$[4], 864, 19, "y");
      if (v == null) dart.nullFailed(I$[4], 864, 26, "v");
      return this[_clip8](19077 * dart.notNull(y) + 26149 * dart.notNull(v) + -3644112);
    }
    [_yuvToG](y, u, v) {
      if (y == null) dart.nullFailed(I$[4], 866, 19, "y");
      if (u == null) dart.nullFailed(I$[4], 866, 26, "u");
      if (v == null) dart.nullFailed(I$[4], 866, 33, "v");
      return this[_clip8](19077 * dart.notNull(y) - 6419 * dart.notNull(u) - 13320 * dart.notNull(v) + 2229552);
    }
    [_yuvToB](y, u) {
      if (y == null) dart.nullFailed(I$[4], 869, 19, "y");
      if (u == null) dart.nullFailed(I$[4], 869, 26, "u");
      return this[_clip8](19077 * dart.notNull(y) + 33050 * dart.notNull(u) + -4527440);
    }
    [_yuvToRgb](y, u, v, rgb) {
      if (y == null) dart.nullFailed(I$[4], 871, 22, "y");
      if (u == null) dart.nullFailed(I$[4], 871, 29, "u");
      if (v == null) dart.nullFailed(I$[4], 871, 36, "v");
      if (rgb == null) dart.nullFailed(I$[4], 871, 51, "rgb");
      rgb._set(0, this[_yuvToR](y, v));
      rgb._set(1, this[_yuvToG](y, u, v));
      rgb._set(2, this[_yuvToB](y, u));
    }
    [_yuvToRgba](y, u, v, rgba) {
      if (y == null) dart.nullFailed(I$[4], 877, 23, "y");
      if (u == null) dart.nullFailed(I$[4], 877, 30, "u");
      if (v == null) dart.nullFailed(I$[4], 877, 37, "v");
      if (rgba == null) dart.nullFailed(I$[4], 877, 52, "rgba");
      this[_yuvToRgb](y, u, v, rgba);
      rgba._set(3, 255);
    }
    [_upsample](topY, bottomY, topU, topV, curU, curV, topDst, bottomDst, len) {
      if (topY == null) dart.nullFailed(I$[4], 883, 19, "topY");
      if (topU == null) dart.nullFailed(I$[4], 885, 19, "topU");
      if (topV == null) dart.nullFailed(I$[4], 886, 19, "topV");
      if (curU == null) dart.nullFailed(I$[4], 887, 19, "curU");
      if (curV == null) dart.nullFailed(I$[4], 888, 19, "curV");
      if (topDst == null) dart.nullFailed(I$[4], 889, 19, "topDst");
      if (len == null) dart.nullFailed(I$[4], 891, 11, "len");
      function LOAD_UV(u, v) {
        if (u == null) dart.nullFailed(I$[4], 892, 21, "u");
        if (v == null) dart.nullFailed(I$[4], 892, 28, "v");
        return (dart.notNull(u) | dart.notNull(v) << 16 >>> 0) >>> 0;
      }
      dart.fn(LOAD_UV, T.intAndintToint());
      let lastPixelPair = (dart.notNull(len) - 1)[$rightShift](1);
      let tl_uv = LOAD_UV(topU._get(0), topV._get(0));
      let l_uv = LOAD_UV(curU._get(0), curV._get(0));
      let uv0 = (3 * dart.notNull(tl_uv) + dart.notNull(l_uv) + 131074)[$rightShift](2);
      this[_yuvToRgba](topY._get(0), uv0 & 255, uv0[$rightShift](16), topDst);
      if (bottomY != null) {
        let uv0 = (3 * dart.notNull(l_uv) + dart.notNull(tl_uv) + 131074)[$rightShift](2);
        this[_yuvToRgba](bottomY._get(0), uv0 & 255, uv0[$rightShift](16), dart.nullCheck(bottomDst));
      }
      for (let x = 1; x <= lastPixelPair; x = x + 1) {
        let t_uv = LOAD_UV(topU._get(x), topV._get(x));
        let uv = LOAD_UV(curU._get(x), curV._get(x));
        let avg = dart.notNull(tl_uv) + dart.notNull(t_uv) + dart.notNull(l_uv) + dart.notNull(uv) + 524296;
        let diag_12 = (avg + 2 * (dart.notNull(t_uv) + dart.notNull(l_uv)))[$rightShift](3);
        let diag_03 = (avg + 2 * (dart.notNull(tl_uv) + dart.notNull(uv)))[$rightShift](3);
        let uv0 = (diag_12 + dart.notNull(tl_uv))[$rightShift](1);
        let uv1 = (diag_03 + dart.notNull(t_uv))[$rightShift](1);
        this[_yuvToRgba](topY._get(2 * x - 1), uv0 & 255, uv0[$rightShift](16), new input_buffer.InputBuffer.from(topDst, {offset: (2 * x - 1) * 4}));
        this[_yuvToRgba](topY._get(2 * x - 0), uv1 & 255, uv1[$rightShift](16), new input_buffer.InputBuffer.from(topDst, {offset: (2 * x - 0) * 4}));
        if (bottomY != null) {
          uv0 = (diag_03 + dart.notNull(l_uv))[$rightShift](1);
          uv1 = (diag_12 + dart.notNull(uv))[$rightShift](1);
          this[_yuvToRgba](bottomY._get(2 * x - 1), uv0 & 255, uv0[$rightShift](16), new input_buffer.InputBuffer.from(dart.nullCheck(bottomDst), {offset: (2 * x - 1) * 4}));
          this[_yuvToRgba](bottomY._get(2 * x), uv1 & 255, uv1[$rightShift](16), new input_buffer.InputBuffer.from(bottomDst, {offset: (2 * x + 0) * 4}));
        }
        tl_uv = t_uv;
        l_uv = uv;
      }
      if ((dart.notNull(len) & 1) === 0) {
        let uv0 = (3 * dart.notNull(tl_uv) + dart.notNull(l_uv) + 131074)[$rightShift](2);
        this[_yuvToRgba](topY._get(dart.notNull(len) - 1), uv0 & 255, uv0[$rightShift](16), new input_buffer.InputBuffer.from(topDst, {offset: (dart.notNull(len) - 1) * 4}));
        if (bottomY != null) {
          let uv0 = (3 * dart.notNull(l_uv) + dart.notNull(tl_uv) + 131074)[$rightShift](2);
          this[_yuvToRgba](bottomY._get(dart.notNull(len) - 1), uv0 & 255, uv0[$rightShift](16), new input_buffer.InputBuffer.from(dart.nullCheck(bottomDst), {offset: (dart.notNull(len) - 1) * 4}));
        }
      }
    }
    [_emitAlphaRGB](mbY, mbW, mbH) {
      if (mbY == null) dart.nullFailed(I$[4], 951, 26, "mbY");
      if (mbW == null) dart.nullFailed(I$[4], 951, 35, "mbW");
      if (mbH == null) dart.nullFailed(I$[4], 951, 44, "mbH");
      if (this[_a] == null) {
        return;
      }
      let stride = dart.notNull(this.webp.width) * 4;
      let alpha = new input_buffer.InputBuffer.from(dart.nullCheck(this[_a]));
      let startY = mbY;
      let numRows = mbH;
      if (startY === 0) {
        numRows = dart.notNull(numRows) - 1;
      } else {
        startY = dart.notNull(startY) - 1;
        alpha.offset = dart.notNull(alpha.offset) - dart.notNull(this.webp.width);
      }
      let dst = new input_buffer.InputBuffer.new(dart.nullCheck(this.output).getBytes(), {offset: dart.notNull(startY) * stride + 3});
      if (dart.nullCheck(this[_cropTop]) + dart.notNull(mbY) + dart.notNull(mbH) === this[_cropBottom]) {
        numRows = dart.nullCheck(this[_cropBottom]) - dart.nullCheck(this[_cropTop]) - dart.notNull(startY);
      }
      for (let y = 0; y < dart.notNull(numRows); y = y + 1) {
        for (let x = 0; x < dart.notNull(mbW); x = x + 1) {
          let alphaValue = alpha._get(x);
          dst._set(4 * x, dart.notNull(alphaValue) & 255);
        }
        alpha.offset = dart.notNull(alpha.offset) + dart.notNull(this.webp.width);
        dst.offset = dart.notNull(dst.offset) + stride;
      }
    }
    [_emitFancyRGB](mbY, mbW, mbH) {
      if (mbY == null) dart.nullFailed(I$[4], 992, 25, "mbY");
      if (mbW == null) dart.nullFailed(I$[4], 992, 34, "mbW");
      if (mbH == null) dart.nullFailed(I$[4], 992, 43, "mbH");
      let numLinesOut = mbH;
      let dst = new input_buffer.InputBuffer.new(dart.nullCheck(this.output).getBytes(), {offset: dart.notNull(mbY) * dart.notNull(this.webp.width) * 4});
      let curY = new input_buffer.InputBuffer.from(this[_y]);
      let curU = new input_buffer.InputBuffer.from(this[_u]);
      let curV = new input_buffer.InputBuffer.from(this[_v]);
      let y = mbY;
      let yEnd = dart.notNull(mbY) + dart.notNull(mbH);
      let uvW = (dart.notNull(mbW) + 1)[$rightShift](1);
      let stride = dart.notNull(this.webp.width) * 4;
      let topU = new input_buffer.InputBuffer.from(this[_tmpU]);
      let topV = new input_buffer.InputBuffer.from(this[_tmpV]);
      if (y === 0) {
        this[_upsample](curY, null, curU, curV, curU, curV, dst, null, mbW);
      } else {
        this[_upsample](this[_tmpY], curY, topU, topV, curU, curV, new input_buffer.InputBuffer.from(dst, {offset: -stride}), dst, mbW);
        numLinesOut = dart.notNull(numLinesOut) + 1;
      }
      topU.buffer = curU.buffer;
      topV.buffer = curV.buffer;
      for (; dart.notNull(y) + 2 < yEnd; y = dart.notNull(y) + 2) {
        topU.offset = curU.offset;
        topV.offset = curV.offset;
        curU.offset = dart.notNull(curU.offset) + dart.nullCheck(this[_cacheUVStride]);
        curV.offset = dart.notNull(curV.offset) + dart.nullCheck(this[_cacheUVStride]);
        dst.offset = dart.notNull(dst.offset) + 2 * stride;
        curY.offset = dart.notNull(curY.offset) + 2 * dart.nullCheck(this[_cacheYStride]);
        this[_upsample](new input_buffer.InputBuffer.from(curY, {offset: -dart.nullCheck(this[_cacheYStride])}), curY, topU, topV, curU, curV, new input_buffer.InputBuffer.from(dst, {offset: -stride}), dst, mbW);
      }
      curY.offset = dart.notNull(curY.offset) + dart.nullCheck(this[_cacheYStride]);
      if (dart.nullCheck(this[_cropTop]) + yEnd < dart.nullCheck(this[_cropBottom])) {
        this[_tmpY].memcpy(0, mbW, curY);
        this[_tmpU].memcpy(0, uvW, curU);
        this[_tmpV].memcpy(0, uvW, curV);
        numLinesOut = dart.notNull(numLinesOut) - 1;
      } else {
        if ((yEnd & 1) === 0) {
          this[_upsample](curY, null, curU, curV, curU, curV, new input_buffer.InputBuffer.from(dst, {offset: stride}), null, mbW);
        }
      }
      return numLinesOut;
    }
    [_decompressAlphaRows](row, numRows) {
      if (row == null) dart.nullFailed(I$[4], 1050, 41, "row");
      if (numRows == null) dart.nullFailed(I$[4], 1050, 50, "numRows");
      let width = this.webp.width;
      let height = this.webp.height;
      if (dart.notNull(row) < 0 || dart.notNull(numRows) <= 0 || dart.notNull(row) + dart.notNull(numRows) > dart.notNull(height)) {
        return null;
      }
      if (row === 0) {
        this[_alphaPlane] = _native_typed_data.NativeUint8List.new(dart.notNull(width) * dart.notNull(height));
        this[_alpha] = new webp_alpha.WebPAlpha.new(dart.nullCheck(this[_alphaData]), width, height);
      }
      if (!dart.test(this[_alpha].isAlphaDecoded)) {
        if (!dart.test(this[_alpha].decode(row, numRows, this[_alphaPlane]))) {
          return null;
        }
      }
      return new input_buffer.InputBuffer.new(this[_alphaPlane], {offset: dart.notNull(row) * dart.notNull(width)});
    }
    [_decodeMB](tokenBr) {
      let left = this[_mbInfo][$_get](0);
      let mb = this[_mbInfo][$_get](1 + dart.notNull(this[_mbX]));
      let block = this[_mbData][$_get](this[_mbX]);
      let skip = null;
      if (dart.test(this[_segmentHeader].updateMap)) {
        this[_segment] = this.br.getBit(dart.nullCheck(this[_proba]).segments[$_get](0)) === 0 ? this.br.getBit(dart.nullCheck(this[_proba]).segments[$_get](1)) : 2 + dart.notNull(this.br.getBit(dart.nullCheck(this[_proba]).segments[$_get](2)));
      }
      skip = dart.test(this[_useSkipProba]) ? this.br.getBit(this[_skipP]) !== 0 : false;
      this[_parseIntraMode]();
      if (!dart.test(skip)) {
        skip = this[_parseResiduals](mb, tokenBr);
      } else {
        left.nz = mb.nz = 0;
        if (!dart.test(block.isIntra4x4)) {
          left.nzDc = mb.nzDc = 0;
        }
        block.nonZeroY = 0;
        block.nonZeroUV = 0;
      }
      if (dart.nullCheck(this[_filterType]) > 0) {
        this[_fInfo][$_set](this[_mbX], this[_fStrengths][$_get](this[_segment])[$_get](dart.test(block.isIntra4x4) ? 1 : 0));
        let finfo = dart.nullCheck(this[_fInfo][$_get](this[_mbX]));
        finfo.fInner = dart.test(finfo.fInner) || !dart.test(skip);
      }
      return true;
    }
    [_parseResiduals](mb, tokenBr) {
      if (mb == null) dart.nullFailed(I$[4], 1113, 30, "mb");
      let bands = dart.nullCheck(this[_proba]).bands;
      let acProba = null;
      let q = this[_dqm][$_get](this[_segment]);
      let block = this[_mbData][$_get](this[_mbX]);
      let dst = new input_buffer.InputBuffer.new(block.coeffs);
      let leftMb = this[_mbInfo][$_get](0);
      let tnz = null;
      let lnz = null;
      let nonZeroY = 0;
      let nonZeroUV = 0;
      let outTopNz = null;
      let outLeftNz = null;
      let first = null;
      dst.memset(0, dst.length, 0);
      if (!dart.test(block.isIntra4x4)) {
        let dc = new input_buffer.InputBuffer.new(_native_typed_data.NativeInt16List.new(16));
        let ctx = dart.notNull(mb.nzDc) + dart.notNull(leftMb.nzDc);
        let nz = this[_getCoeffs](tokenBr, bands[$_get](1), ctx, dart.nullCheck(q).y2Mat, 0, dc);
        mb.nzDc = leftMb.nzDc = dart.notNull(nz) > 0 ? 1 : 0;
        if (dart.notNull(nz) > 1) {
          this[_transformWHT](dc, dst);
        } else {
          let dc0 = (dart.notNull(dc._get(0)) + 3)[$rightShift](3);
          for (let i = 0; i < 16 * 16; i = i + 16) {
            dst._set(i, dc0);
          }
        }
        first = 1;
        acProba = bands[$_get](0);
      } else {
        first = 0;
        acProba = bands[$_get](3);
      }
      tnz = dart.notNull(mb.nz) & 15;
      lnz = dart.notNull(leftMb.nz) & 15;
      for (let y = 0; y < 4; y = y + 1) {
        let l = dart.notNull(lnz) & 1;
        let nzCoeffs = 0;
        for (let x = 0; x < 4; x = x + 1) {
          let ctx = l + (dart.notNull(tnz) & 1);
          let nz = this[_getCoeffs](tokenBr, acProba, ctx, dart.nullCheck(q).y1Mat, first, dst);
          l = dart.notNull(nz) > dart.notNull(first) ? 1 : 0;
          tnz = (tnz[$rightShift](1) | l << 7 >>> 0) >>> 0;
          nzCoeffs = this[_nzCodeBits](nzCoeffs, nz, dst._get(0) !== 0 ? 1 : 0);
          dst.offset = dart.notNull(dst.offset) + 16;
        }
        tnz = tnz[$rightShift](4);
        lnz = (lnz[$rightShift](1) | l << 7 >>> 0) >>> 0;
        nonZeroY = (nonZeroY << 8 | dart.notNull(nzCoeffs)) >>> 0;
      }
      outTopNz = tnz;
      outLeftNz = lnz[$rightShift](4);
      for (let ch = 0; ch < 4; ch = ch + 2) {
        let nzCoeffs = 0;
        tnz = mb.nz[$rightShift](4 + ch);
        lnz = leftMb.nz[$rightShift](4 + ch);
        for (let y = 0; y < 2; y = y + 1) {
          let l = dart.notNull(lnz) & 1;
          for (let x = 0; x < 2; x = x + 1) {
            let ctx = l + (dart.notNull(tnz) & 1);
            let nz = this[_getCoeffs](tokenBr, bands[$_get](2), ctx, dart.nullCheck(q).uvMat, 0, dst);
            l = dart.notNull(nz) > 0 ? 1 : 0;
            tnz = (tnz[$rightShift](1) | l << 3 >>> 0) >>> 0;
            nzCoeffs = this[_nzCodeBits](nzCoeffs, nz, dst._get(0) !== 0 ? 1 : 0);
            dst.offset = dart.notNull(dst.offset) + 16;
          }
          tnz = tnz[$rightShift](2);
          lnz = (lnz[$rightShift](1) | l << 5 >>> 0) >>> 0;
        }
        nonZeroUV = (nonZeroUV | nzCoeffs[$leftShift](4 * ch)) >>> 0;
        outTopNz = (dart.notNull(outTopNz) | (dart.notNull(tnz) << 4 >>> 0)[$leftShift](ch)) >>> 0;
        outLeftNz = (dart.notNull(outLeftNz) | (dart.notNull(lnz) & 240)[$leftShift](ch)) >>> 0;
      }
      mb.nz = outTopNz;
      leftMb.nz = outLeftNz;
      block.nonZeroY = nonZeroY;
      block.nonZeroUV = nonZeroUV;
      block.dither = (nonZeroUV & 43690) !== 0 ? 0 : dart.nullCheck(q).dither;
      return (nonZeroY | nonZeroUV) === 0;
    }
    [_transformWHT](src, out) {
      if (src == null) dart.nullFailed(I$[4], 1216, 34, "src");
      if (out == null) dart.nullFailed(I$[4], 1216, 51, "out");
      let tmp = _native_typed_data.NativeInt32List.new(16);
      let oi = 0;
      for (let i = 0; i < 4; i = i + 1) {
        let a0 = dart.notNull(src._get(0 + i)) + dart.notNull(src._get(12 + i));
        let a1 = dart.notNull(src._get(4 + i)) + dart.notNull(src._get(8 + i));
        let a2 = dart.notNull(src._get(4 + i)) - dart.notNull(src._get(8 + i));
        let a3 = dart.notNull(src._get(0 + i)) - dart.notNull(src._get(12 + i));
        tmp[$_set](0 + i, a0 + a1);
        tmp[$_set](8 + i, a0 - a1);
        tmp[$_set](4 + i, a3 + a2);
        tmp[$_set](12 + i, a3 - a2);
      }
      for (let i = 0; i < 4; i = i + 1) {
        let dc = dart.notNull(tmp[$_get](0 + i * 4)) + 3;
        let a0 = dc + dart.notNull(tmp[$_get](3 + i * 4));
        let a1 = dart.notNull(tmp[$_get](1 + i * 4)) + dart.notNull(tmp[$_get](2 + i * 4));
        let a2 = dart.notNull(tmp[$_get](1 + i * 4)) - dart.notNull(tmp[$_get](2 + i * 4));
        let a3 = dc - dart.notNull(tmp[$_get](3 + i * 4));
        out._set(oi + 0, (a0 + a1)[$rightShift](3));
        out._set(oi + 16, (a3 + a2)[$rightShift](3));
        out._set(oi + 32, (a0 - a1)[$rightShift](3));
        out._set(oi + 48, (a3 - a2)[$rightShift](3));
        oi = oi + 64;
      }
    }
    [_nzCodeBits](nz_coeffs, nz, dc_nz) {
      if (nz_coeffs == null) dart.nullFailed(I$[4], 1246, 23, "nz_coeffs");
      if (nz == null) dart.nullFailed(I$[4], 1246, 38, "nz");
      if (dc_nz == null) dart.nullFailed(I$[4], 1246, 46, "dc_nz");
      nz_coeffs = dart.notNull(nz_coeffs) << 2 >>> 0;
      nz_coeffs = (dart.notNull(nz_coeffs) | dart.notNull(dart.notNull(nz) > 3 ? 3 : dart.notNull(nz) > 1 ? 2 : dc_nz)) >>> 0;
      return nz_coeffs;
    }
    [_getLargeValue](br, p) {
      if (br == null) dart.nullFailed(I$[4], 1313, 35, "br");
      if (p == null) dart.nullFailed(I$[4], 1313, 49, "p");
      let v = null;
      if (br.getBit(p[$_get](3)) === 0) {
        if (br.getBit(p[$_get](4)) === 0) {
          v = 2;
        } else {
          v = 3 + dart.notNull(br.getBit(p[$_get](5)));
        }
      } else {
        if (br.getBit(p[$_get](6)) === 0) {
          if (br.getBit(p[$_get](7)) === 0) {
            v = 5 + dart.notNull(br.getBit(159));
          } else {
            v = 7 + 2 * dart.notNull(br.getBit(165));
            v = dart.notNull(v) + dart.notNull(br.getBit(145));
          }
        } else {
          let bit1 = br.getBit(p[$_get](8));
          let bit0 = br.getBit(p[$_get](9 + dart.notNull(bit1)));
          let cat = 2 * dart.notNull(bit1) + dart.notNull(bit0);
          v = 0;
          let tab = vp8.VP8.kCat3456[$_get](cat);
          for (let i = 0, len = tab[$length]; i < dart.notNull(len); i = i + 1) {
            v = dart.notNull(v) + (dart.notNull(v) + dart.notNull(br.getBit(tab[$_get](i))));
          }
          v = dart.notNull(v) + (3 + (8)[$leftShift](cat));
        }
      }
      return v;
    }
    [_getCoeffs](br, prob, ctx, dq, n, out) {
      if (prob == null) dart.nullFailed(I$[4], 1345, 56, "prob");
      if (ctx == null) dart.nullFailed(I$[4], 1345, 66, "ctx");
      if (dq == null) dart.nullFailed(I$[4], 1346, 17, "dq");
      if (n == null) dart.nullFailed(I$[4], 1346, 25, "n");
      if (out == null) dart.nullFailed(I$[4], 1346, 40, "out");
      let p = prob[$_get](n).probas[$_get](ctx);
      for (; dart.notNull(n) < 16; n = dart.notNull(n) + 1) {
        if (dart.nullCheck(br).getBit(p[$_get](0)) === 0) {
          return n;
        }
        while (br.getBit(p[$_get](1)) === 0) {
          p = prob[$_get](vp8.VP8.kBands[$_get](n = dart.notNull(n) + 1)).probas[$_get](0);
          if (n === 16) {
            return 16;
          }
        }
        {
          let p_ctx = prob[$_get](vp8.VP8.kBands[$_get](dart.notNull(n) + 1)).probas;
          let v = null;
          if (br.getBit(p[$_get](2)) === 0) {
            v = 1;
            p = p_ctx[$_get](1);
          } else {
            v = this[_getLargeValue](br, p);
            p = p_ctx[$_get](2);
          }
          out._set(vp8.VP8.kZigzag[$_get](n), dart.notNull(br.getSigned(v)) * dart.notNull(dq[$_get](dart.notNull(n) > 0 ? 1 : 0)));
        }
      }
      return 16;
    }
    [_parseIntraMode]() {
      let ti = 4 * dart.notNull(this[_mbX]);
      let top = this[_intraT];
      let left = this[_intraL];
      let block = this[_mbData][$_get](this[_mbX]);
      block.isIntra4x4 = this.br.getBit(145) === 0;
      if (!dart.test(block.isIntra4x4)) {
        let ymode = this.br.getBit(156) !== 0 ? this.br.getBit(128) !== 0 ? 1 : 3 : this.br.getBit(163) !== 0 ? 2 : 0;
        block.imodes[$_set](0, ymode);
        dart.nullCheck(top)[$fillRange](ti, ti + 4, ymode);
        left[$fillRange](0, 0 + 4, ymode);
      } else {
        let modes = block.imodes;
        let mi = 0;
        for (let y = 0; y < 4; y = y + 1) {
          let ymode = left[$_get](y);
          for (let x = 0; x < 4; x = x + 1) {
            let prob = vp8.VP8.kBModesProba[$_get](dart.nullCheck(top)[$_get](ti + x))[$_get](ymode);
            let b = this.br.getBit(prob[$_get](0));
            let i = vp8.VP8.kYModesIntra4[$_get](b);
            while (dart.notNull(i) > 0) {
              i = vp8.VP8.kYModesIntra4[$_get](2 * dart.notNull(i) + dart.notNull(this.br.getBit(prob[$_get](i))));
            }
            ymode = -dart.notNull(i);
            top[$_set](ti + x, ymode);
          }
          modes[$setRange](mi, mi + 4, dart.nullCheck(top), ti);
          mi = mi + 4;
          left[$_set](y, ymode);
        }
      }
      block.uvmode = this.br.getBit(142) === 0 ? 0 : this.br.getBit(114) === 0 ? 2 : this.br.getBit(183) !== 0 ? 1 : 3;
    }
    get br() {
      let t10;
      return dart.test(this[__VP8_br_isSet]) ? (t10 = this[__VP8_br], t10) : dart.throw(new _internal.LateError.fieldNI("br"));
    }
    set br(t10) {
      if (t10 == null) dart.nullFailed(I$[4], 1437, 21, "null");
      this[__VP8_br_isSet] = true;
      this[__VP8_br] = t10;
    }
    get [_dsp]() {
      let t11;
      return dart.test(this[__VP8__dsp_isSet]) ? (t11 = this[__VP8__dsp], t11) : dart.throw(new _internal.LateError.fieldNI("_dsp"));
    }
    set [_dsp](t11) {
      if (t11 == null) dart.nullFailed(I$[4], 1441, 18, "null");
      this[__VP8__dsp_isSet] = true;
      this[__VP8__dsp] = t11;
    }
    get [_cropLeft]() {
      let t12;
      return dart.test(this[__VP8__cropLeft_isSet]) ? (t12 = this[__VP8__cropLeft], t12) : dart.throw(new _internal.LateError.fieldNI("_cropLeft"));
    }
    set [_cropLeft](t12) {
      if (t12 == null) dart.nullFailed(I$[4], 1449, 12, "null");
      this[__VP8__cropLeft_isSet] = true;
      this[__VP8__cropLeft] = t12;
    }
    get [_cropRight]() {
      let t13;
      return dart.test(this[__VP8__cropRight_isSet]) ? (t13 = this[__VP8__cropRight], t13) : dart.throw(new _internal.LateError.fieldNI("_cropRight"));
    }
    set [_cropRight](t13) {
      if (t13 == null) dart.nullFailed(I$[4], 1450, 12, "null");
      this[__VP8__cropRight_isSet] = true;
      this[__VP8__cropRight] = t13;
    }
    get [_tlMbX]() {
      let t14;
      return dart.test(this[__VP8__tlMbX_isSet]) ? (t14 = this[__VP8__tlMbX], t14) : dart.throw(new _internal.LateError.fieldNI("_tlMbX"));
    }
    set [_tlMbX](t14) {
      if (t14 == null) dart.nullFailed(I$[4], 1461, 12, "null");
      this[__VP8__tlMbX_isSet] = true;
      this[__VP8__tlMbX] = t14;
    }
    get [_tlMbY]() {
      let t15;
      return dart.test(this[__VP8__tlMbY_isSet]) ? (t15 = this[__VP8__tlMbY], t15) : dart.throw(new _internal.LateError.fieldNI("_tlMbY"));
    }
    set [_tlMbY](t15) {
      if (t15 == null) dart.nullFailed(I$[4], 1462, 12, "null");
      this[__VP8__tlMbY_isSet] = true;
      this[__VP8__tlMbY] = t15;
    }
    get [_numPartitions]() {
      let t16;
      return dart.test(this[__VP8__numPartitions_isSet]) ? (t16 = this[__VP8__numPartitions], t16) : dart.throw(new _internal.LateError.fieldNI("_numPartitions"));
    }
    set [_numPartitions](t16) {
      if (t16 == null) dart.nullFailed(I$[4], 1467, 12, "null");
      this[__VP8__numPartitions_isSet] = true;
      this[__VP8__numPartitions] = t16;
    }
    get [_useSkipProba]() {
      let t17;
      return dart.test(this[__VP8__useSkipProba_isSet]) ? (t17 = this[__VP8__useSkipProba], t17) : dart.throw(new _internal.LateError.fieldNI("_useSkipProba"));
    }
    set [_useSkipProba](t17) {
      if (t17 == null) dart.nullFailed(I$[4], 1480, 13, "null");
      this[__VP8__useSkipProba_isSet] = true;
      this[__VP8__useSkipProba] = t17;
    }
    get [_skipP]() {
      let t18;
      return dart.test(this[__VP8__skipP_isSet]) ? (t18 = this[__VP8__skipP], t18) : dart.throw(new _internal.LateError.fieldNI("_skipP"));
    }
    set [_skipP](t18) {
      if (t18 == null) dart.nullFailed(I$[4], 1481, 12, "null");
      this[__VP8__skipP_isSet] = true;
      this[__VP8__skipP] = t18;
    }
    get [_segment]() {
      let t19;
      return dart.test(this[__VP8__segment_isSet]) ? (t19 = this[__VP8__segment], t19) : dart.throw(new _internal.LateError.fieldNI("_segment"));
    }
    set [_segment](t19) {
      if (t19 == null) dart.nullFailed(I$[4], 1491, 12, "null");
      this[__VP8__segment_isSet] = true;
      this[__VP8__segment] = t19;
    }
    get [_yuvT]() {
      let t20;
      return dart.test(this[__VP8__yuvT_isSet]) ? (t20 = this[__VP8__yuvT], t20) : dart.throw(new _internal.LateError.fieldNI("_yuvT"));
    }
    set [_yuvT](t20) {
      if (t20 == null) dart.nullFailed(I$[4], 1494, 28, "null");
      this[__VP8__yuvT_isSet] = true;
      this[__VP8__yuvT] = t20;
    }
    set [_mbInfo](t21) {
      if (t21 == null) dart.nullFailed(I$[4], 1497, 20, "null");
      this[__VP8__mbInfo_isSet] = true;
      this[__VP8__mbInfo] = t21;
    }
    get [_mbInfo]() {
      let t22;
      return dart.test(this[__VP8__mbInfo_isSet]) ? (t22 = this[__VP8__mbInfo], t22) : dart.throw(new _internal.LateError.fieldNI("_mbInfo"));
    }
    get [_fInfo]() {
      let t22;
      return dart.test(this[__VP8__fInfo_isSet]) ? (t22 = this[__VP8__fInfo], t22) : dart.throw(new _internal.LateError.fieldNI("_fInfo"));
    }
    set [_fInfo](t22) {
      if (t22 == null) dart.nullFailed(I$[4], 1500, 24, "null");
      this[__VP8__fInfo_isSet] = true;
      this[__VP8__fInfo] = t22;
    }
    get [_yuvBlock]() {
      let t23;
      return dart.test(this[__VP8__yuvBlock_isSet]) ? (t23 = this[__VP8__yuvBlock], t23) : dart.throw(new _internal.LateError.fieldNI("_yuvBlock"));
    }
    set [_yuvBlock](t23) {
      if (t23 == null) dart.nullFailed(I$[4], 1503, 18, "null");
      this[__VP8__yuvBlock_isSet] = true;
      this[__VP8__yuvBlock] = t23;
    }
    get [_cacheY]() {
      let t24;
      return dart.test(this[__VP8__cacheY_isSet]) ? (t24 = this[__VP8__cacheY], t24) : dart.throw(new _internal.LateError.fieldNI("_cacheY"));
    }
    set [_cacheY](t24) {
      if (t24 == null) dart.nullFailed(I$[4], 1506, 20, "null");
      this[__VP8__cacheY_isSet] = true;
      this[__VP8__cacheY] = t24;
    }
    get [_cacheU]() {
      let t25;
      return dart.test(this[__VP8__cacheU_isSet]) ? (t25 = this[__VP8__cacheU], t25) : dart.throw(new _internal.LateError.fieldNI("_cacheU"));
    }
    set [_cacheU](t25) {
      if (t25 == null) dart.nullFailed(I$[4], 1507, 20, "null");
      this[__VP8__cacheU_isSet] = true;
      this[__VP8__cacheU] = t25;
    }
    get [_cacheV]() {
      let t26;
      return dart.test(this[__VP8__cacheV_isSet]) ? (t26 = this[__VP8__cacheV], t26) : dart.throw(new _internal.LateError.fieldNI("_cacheV"));
    }
    set [_cacheV](t26) {
      if (t26 == null) dart.nullFailed(I$[4], 1508, 20, "null");
      this[__VP8__cacheV_isSet] = true;
      this[__VP8__cacheV] = t26;
    }
    get [_tmpY]() {
      let t27;
      return dart.test(this[__VP8__tmpY_isSet]) ? (t27 = this[__VP8__tmpY], t27) : dart.throw(new _internal.LateError.fieldNI("_tmpY"));
    }
    set [_tmpY](t27) {
      if (t27 == null) dart.nullFailed(I$[4], 1512, 20, "null");
      this[__VP8__tmpY_isSet] = true;
      this[__VP8__tmpY] = t27;
    }
    get [_tmpU]() {
      let t28;
      return dart.test(this[__VP8__tmpU_isSet]) ? (t28 = this[__VP8__tmpU], t28) : dart.throw(new _internal.LateError.fieldNI("_tmpU"));
    }
    set [_tmpU](t28) {
      if (t28 == null) dart.nullFailed(I$[4], 1513, 20, "null");
      this[__VP8__tmpU_isSet] = true;
      this[__VP8__tmpU] = t28;
    }
    get [_tmpV]() {
      let t29;
      return dart.test(this[__VP8__tmpV_isSet]) ? (t29 = this[__VP8__tmpV], t29) : dart.throw(new _internal.LateError.fieldNI("_tmpV"));
    }
    set [_tmpV](t29) {
      if (t29 == null) dart.nullFailed(I$[4], 1514, 20, "null");
      this[__VP8__tmpV_isSet] = true;
      this[__VP8__tmpV] = t29;
    }
    get [_y]() {
      let t30;
      return dart.test(this[__VP8__y_isSet]) ? (t30 = this[__VP8__y], t30) : dart.throw(new _internal.LateError.fieldNI("_y"));
    }
    set [_y](t30) {
      if (t30 == null) dart.nullFailed(I$[4], 1516, 20, "null");
      this[__VP8__y_isSet] = true;
      this[__VP8__y] = t30;
    }
    get [_u]() {
      let t31;
      return dart.test(this[__VP8__u_isSet]) ? (t31 = this[__VP8__u], t31) : dart.throw(new _internal.LateError.fieldNI("_u"));
    }
    set [_u](t31) {
      if (t31 == null) dart.nullFailed(I$[4], 1517, 20, "null");
      this[__VP8__u_isSet] = true;
      this[__VP8__u] = t31;
    }
    get [_v]() {
      let t32;
      return dart.test(this[__VP8__v_isSet]) ? (t32 = this[__VP8__v], t32) : dart.throw(new _internal.LateError.fieldNI("_v"));
    }
    set [_v](t32) {
      if (t32 == null) dart.nullFailed(I$[4], 1518, 20, "null");
      this[__VP8__v_isSet] = true;
      this[__VP8__v] = t32;
    }
    get [_mbData]() {
      let t33;
      return dart.test(this[__VP8__mbData_isSet]) ? (t33 = this[__VP8__mbData], t33) : dart.throw(new _internal.LateError.fieldNI("_mbData"));
    }
    set [_mbData](t33) {
      if (t33 == null) dart.nullFailed(I$[4], 1530, 24, "null");
      this[__VP8__mbData_isSet] = true;
      this[__VP8__mbData] = t33;
    }
    get [_fStrengths]() {
      let t34;
      return dart.test(this[__VP8__fStrengths_isSet]) ? (t34 = this[__VP8__fStrengths], t34) : dart.throw(new _internal.LateError.fieldNI("_fStrengths"));
    }
    set [_fStrengths](t34) {
      if (t34 == null) dart.nullFailed(I$[4], 1536, 29, "null");
      this[__VP8__fStrengths_isSet] = true;
      this[__VP8__fStrengths] = t34;
    }
    get [_alpha]() {
      let t35;
      return dart.test(this[__VP8__alpha_isSet]) ? (t35 = this[__VP8__alpha], t35) : dart.throw(new _internal.LateError.fieldNI("_alpha"));
    }
    set [_alpha](t35) {
      if (t35 == null) dart.nullFailed(I$[4], 1540, 18, "null");
      this[__VP8__alpha_isSet] = true;
      this[__VP8__alpha] = t35;
    }
    get [_alphaPlane]() {
      let t36;
      return dart.test(this[__VP8__alphaPlane_isSet]) ? (t36 = this[__VP8__alphaPlane], t36) : dart.throw(new _internal.LateError.fieldNI("_alphaPlane"));
    }
    set [_alphaPlane](t36) {
      if (t36 == null) dart.nullFailed(I$[4], 1548, 18, "null");
      this[__VP8__alphaPlane_isSet] = true;
      this[__VP8__alphaPlane] = t36;
    }
    static _clip(v, M) {
      if (v == null) dart.nullFailed(I$[4], 1555, 24, "v");
      if (M == null) dart.nullFailed(I$[4], 1555, 31, "M");
      return dart.notNull(v) < 0 ? 0 : dart.notNull(v) > dart.notNull(M) ? M : v;
    }
  };
  (vp8.VP8.new = function(input, _webp) {
    if (input == null) dart.nullFailed(I$[4], 16, 12, "input");
    if (_webp == null) dart.nullFailed(I$[4], 16, 24, "_webp");
    this[__VP8_br] = null;
    this[__VP8_br_isSet] = false;
    this[output] = null;
    this[__VP8__dsp] = null;
    this[__VP8__dsp_isSet] = false;
    this[_frameHeader] = new vp8_types.VP8FrameHeader.new();
    this[_picHeader] = new vp8_types.VP8PictureHeader.new();
    this[_filterHeader] = new vp8_types.VP8FilterHeader.new();
    this[_segmentHeader] = new vp8_types.VP8SegmentHeader.new();
    this[__VP8__cropLeft] = null;
    this[__VP8__cropLeft_isSet] = false;
    this[__VP8__cropRight] = null;
    this[__VP8__cropRight_isSet] = false;
    this[_cropTop] = null;
    this[_cropBottom] = null;
    this[_mbWidth] = null;
    this[_mbHeight] = null;
    this[__VP8__tlMbX] = null;
    this[__VP8__tlMbX_isSet] = false;
    this[__VP8__tlMbY] = null;
    this[__VP8__tlMbY_isSet] = false;
    this[_brMbX] = null;
    this[_brMbY] = null;
    this[__VP8__numPartitions] = null;
    this[__VP8__numPartitions_isSet] = false;
    this[_partitions] = T.ListOfVP8BitReaderN().filled(8, null);
    this[_dither] = false;
    this[_dqm] = T.ListOfVP8QuantMatrixN().filled(4, null);
    this[_proba] = null;
    this[__VP8__useSkipProba] = null;
    this[__VP8__useSkipProba_isSet] = false;
    this[__VP8__skipP] = null;
    this[__VP8__skipP_isSet] = false;
    this[_intraT] = null;
    this[_intraL] = _native_typed_data.NativeUint8List.new(4);
    this[__VP8__segment] = null;
    this[__VP8__segment_isSet] = false;
    this[__VP8__yuvT] = null;
    this[__VP8__yuvT_isSet] = false;
    this[__VP8__mbInfo] = null;
    this[__VP8__mbInfo_isSet] = false;
    this[__VP8__fInfo] = null;
    this[__VP8__fInfo_isSet] = false;
    this[__VP8__yuvBlock] = null;
    this[__VP8__yuvBlock_isSet] = false;
    this[__VP8__cacheY] = null;
    this[__VP8__cacheY_isSet] = false;
    this[__VP8__cacheU] = null;
    this[__VP8__cacheU_isSet] = false;
    this[__VP8__cacheV] = null;
    this[__VP8__cacheV_isSet] = false;
    this[_cacheYStride] = null;
    this[_cacheUVStride] = null;
    this[__VP8__tmpY] = null;
    this[__VP8__tmpY_isSet] = false;
    this[__VP8__tmpU] = null;
    this[__VP8__tmpU_isSet] = false;
    this[__VP8__tmpV] = null;
    this[__VP8__tmpV_isSet] = false;
    this[__VP8__y] = null;
    this[__VP8__y_isSet] = false;
    this[__VP8__u] = null;
    this[__VP8__u_isSet] = false;
    this[__VP8__v] = null;
    this[__VP8__v_isSet] = false;
    this[_a] = null;
    this[_mbX] = 0;
    this[_mbY] = 0;
    this[__VP8__mbData] = null;
    this[__VP8__mbData_isSet] = false;
    this[_filterType] = null;
    this[__VP8__fStrengths] = null;
    this[__VP8__fStrengths_isSet] = false;
    this[__VP8__alpha] = null;
    this[__VP8__alpha_isSet] = false;
    this[_alphaData] = null;
    this[__VP8__alphaPlane] = null;
    this[__VP8__alphaPlane_isSet] = false;
    this[input$] = input;
    this[_webp$] = _webp;
    ;
  }).prototype = vp8.VP8.prototype;
  dart.addTypeTests(vp8.VP8);
  dart.addTypeCaches(vp8.VP8);
  dart.setMethodSignature(vp8.VP8, () => ({
    __proto__: dart.getMethods(vp8.VP8.__proto__),
    decodeHeader: dart.fnType(core.bool, []),
    decode: dart.fnType(dart.nullable(image.Image), []),
    [_getHeaders]: dart.fnType(core.bool, []),
    [_parseSegmentHeader]: dart.fnType(core.bool, [vp8_types.VP8SegmentHeader, dart.nullable(vp8_types.VP8Proba)]),
    [_parseFilterHeader]: dart.fnType(core.bool, []),
    [_parsePartitions]: dart.fnType(core.bool, [input_buffer.InputBuffer]),
    [_parseQuant]: dart.fnType(dart.void, []),
    [_parseProba]: dart.fnType(dart.void, []),
    [_precomputeFilterStrengths]: dart.fnType(dart.void, []),
    [_initFrame]: dart.fnType(core.bool, []),
    [_parseFrame]: dart.fnType(core.bool, []),
    [_processRow]: dart.fnType(core.bool, []),
    [_reconstructRow]: dart.fnType(dart.void, []),
    [_doTransform]: dart.fnType(dart.void, [core.int, input_buffer.InputBuffer, input_buffer.InputBuffer]),
    [_doUVTransform]: dart.fnType(dart.void, [core.int, input_buffer.InputBuffer, input_buffer.InputBuffer]),
    MACROBLOCK_VPOS: dart.fnType(core.int, [core.int]),
    [_doFilter]: dart.fnType(dart.void, [core.int, core.int]),
    [_filterRow]: dart.fnType(dart.void, []),
    [_ditherRow]: dart.fnType(dart.void, []),
    [_finishRow]: dart.fnType(core.bool, [core.bool]),
    [_put]: dart.fnType(core.bool, [core.int, core.int, core.int]),
    [_clip8]: dart.fnType(core.int, [core.int]),
    [_yuvToR]: dart.fnType(core.int, [core.int, core.int]),
    [_yuvToG]: dart.fnType(core.int, [core.int, core.int, core.int]),
    [_yuvToB]: dart.fnType(core.int, [core.int, core.int]),
    [_yuvToRgb]: dart.fnType(dart.void, [core.int, core.int, core.int, input_buffer.InputBuffer]),
    [_yuvToRgba]: dart.fnType(dart.void, [core.int, core.int, core.int, input_buffer.InputBuffer]),
    [_upsample]: dart.fnType(dart.void, [input_buffer.InputBuffer, dart.nullable(input_buffer.InputBuffer), input_buffer.InputBuffer, input_buffer.InputBuffer, input_buffer.InputBuffer, input_buffer.InputBuffer, input_buffer.InputBuffer, dart.nullable(input_buffer.InputBuffer), core.int]),
    [_emitAlphaRGB]: dart.fnType(dart.void, [core.int, core.int, core.int]),
    [_emitFancyRGB]: dart.fnType(core.int, [core.int, core.int, core.int]),
    [_decompressAlphaRows]: dart.fnType(dart.nullable(input_buffer.InputBuffer), [core.int, core.int]),
    [_decodeMB]: dart.fnType(core.bool, [dart.nullable(vp8_bit_reader.VP8BitReader)]),
    [_parseResiduals]: dart.fnType(core.bool, [vp8_types.VP8MB, dart.nullable(vp8_bit_reader.VP8BitReader)]),
    [_transformWHT]: dart.fnType(dart.void, [input_buffer.InputBuffer, input_buffer.InputBuffer]),
    [_nzCodeBits]: dart.fnType(core.int, [core.int, core.int, core.int]),
    [_getLargeValue]: dart.fnType(core.int, [vp8_bit_reader.VP8BitReader, core.List$(core.int)]),
    [_getCoeffs]: dart.fnType(core.int, [dart.nullable(vp8_bit_reader.VP8BitReader), core.List$(vp8_types.VP8BandProbas), core.int, core.List$(core.int), core.int, input_buffer.InputBuffer]),
    [_parseIntraMode]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(vp8.VP8, () => ({
    __proto__: dart.getGetters(vp8.VP8.__proto__),
    webp: webp_info.WebPInfo,
    br: vp8_bit_reader.VP8BitReader,
    [_dsp]: vp8_filter.VP8Filter,
    [_cropLeft]: core.int,
    [_cropRight]: core.int,
    [_tlMbX]: core.int,
    [_tlMbY]: core.int,
    [_numPartitions]: core.int,
    [_useSkipProba]: core.bool,
    [_skipP]: core.int,
    [_segment]: core.int,
    [_yuvT]: core.List$(vp8_types.VP8TopSamples),
    [_mbInfo]: core.List$(vp8_types.VP8MB),
    [_fInfo]: core.List$(dart.nullable(vp8_types.VP8FInfo)),
    [_yuvBlock]: typed_data.Uint8List,
    [_cacheY]: input_buffer.InputBuffer,
    [_cacheU]: input_buffer.InputBuffer,
    [_cacheV]: input_buffer.InputBuffer,
    [_tmpY]: input_buffer.InputBuffer,
    [_tmpU]: input_buffer.InputBuffer,
    [_tmpV]: input_buffer.InputBuffer,
    [_y]: input_buffer.InputBuffer,
    [_u]: input_buffer.InputBuffer,
    [_v]: input_buffer.InputBuffer,
    [_mbData]: core.List$(vp8_types.VP8MBData),
    [_fStrengths]: core.List$(core.List$(vp8_types.VP8FInfo)),
    [_alpha]: webp_alpha.WebPAlpha,
    [_alphaPlane]: typed_data.Uint8List
  }));
  dart.setSetterSignature(vp8.VP8, () => ({
    __proto__: dart.getSetters(vp8.VP8.__proto__),
    br: vp8_bit_reader.VP8BitReader,
    [_dsp]: vp8_filter.VP8Filter,
    [_cropLeft]: core.int,
    [_cropRight]: core.int,
    [_tlMbX]: core.int,
    [_tlMbY]: core.int,
    [_numPartitions]: core.int,
    [_useSkipProba]: core.bool,
    [_skipP]: core.int,
    [_segment]: core.int,
    [_yuvT]: core.List$(vp8_types.VP8TopSamples),
    [_mbInfo]: core.List$(vp8_types.VP8MB),
    [_fInfo]: core.List$(dart.nullable(vp8_types.VP8FInfo)),
    [_yuvBlock]: typed_data.Uint8List,
    [_cacheY]: input_buffer.InputBuffer,
    [_cacheU]: input_buffer.InputBuffer,
    [_cacheV]: input_buffer.InputBuffer,
    [_tmpY]: input_buffer.InputBuffer,
    [_tmpU]: input_buffer.InputBuffer,
    [_tmpV]: input_buffer.InputBuffer,
    [_y]: input_buffer.InputBuffer,
    [_u]: input_buffer.InputBuffer,
    [_v]: input_buffer.InputBuffer,
    [_mbData]: core.List$(vp8_types.VP8MBData),
    [_fStrengths]: core.List$(core.List$(vp8_types.VP8FInfo)),
    [_alpha]: webp_alpha.WebPAlpha,
    [_alphaPlane]: typed_data.Uint8List
  }));
  dart.setLibraryUri(vp8.VP8, I$[5]);
  dart.setFieldSignature(vp8.VP8, () => ({
    __proto__: dart.getFields(vp8.VP8.__proto__),
    input: dart.fieldType(input_buffer.InputBuffer),
    [_webp$]: dart.finalFieldType(webp_info.InternalWebPInfo),
    [__VP8_br]: dart.fieldType(dart.nullable(vp8_bit_reader.VP8BitReader)),
    [__VP8_br_isSet]: dart.fieldType(core.bool),
    output: dart.fieldType(dart.nullable(image.Image)),
    [__VP8__dsp]: dart.fieldType(dart.nullable(vp8_filter.VP8Filter)),
    [__VP8__dsp_isSet]: dart.fieldType(core.bool),
    [_frameHeader]: dart.finalFieldType(vp8_types.VP8FrameHeader),
    [_picHeader]: dart.finalFieldType(vp8_types.VP8PictureHeader),
    [_filterHeader]: dart.finalFieldType(vp8_types.VP8FilterHeader),
    [_segmentHeader]: dart.finalFieldType(vp8_types.VP8SegmentHeader),
    [__VP8__cropLeft]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__cropLeft_isSet]: dart.fieldType(core.bool),
    [__VP8__cropRight]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__cropRight_isSet]: dart.fieldType(core.bool),
    [_cropTop]: dart.fieldType(dart.nullable(core.int)),
    [_cropBottom]: dart.fieldType(dart.nullable(core.int)),
    [_mbWidth]: dart.fieldType(dart.nullable(core.int)),
    [_mbHeight]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__tlMbX]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__tlMbX_isSet]: dart.fieldType(core.bool),
    [__VP8__tlMbY]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__tlMbY_isSet]: dart.fieldType(core.bool),
    [_brMbX]: dart.fieldType(dart.nullable(core.int)),
    [_brMbY]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__numPartitions]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__numPartitions_isSet]: dart.fieldType(core.bool),
    [_partitions]: dart.finalFieldType(core.List$(dart.nullable(vp8_bit_reader.VP8BitReader))),
    [_dither]: dart.finalFieldType(core.bool),
    [_dqm]: dart.finalFieldType(core.List$(dart.nullable(vp8_types.VP8QuantMatrix))),
    [_proba]: dart.fieldType(dart.nullable(vp8_types.VP8Proba)),
    [__VP8__useSkipProba]: dart.fieldType(dart.nullable(core.bool)),
    [__VP8__useSkipProba_isSet]: dart.fieldType(core.bool),
    [__VP8__skipP]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__skipP_isSet]: dart.fieldType(core.bool),
    [_intraT]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [_intraL]: dart.finalFieldType(typed_data.Uint8List),
    [__VP8__segment]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__segment_isSet]: dart.fieldType(core.bool),
    [__VP8__yuvT]: dart.fieldType(dart.nullable(core.List$(vp8_types.VP8TopSamples))),
    [__VP8__yuvT_isSet]: dart.fieldType(core.bool),
    [__VP8__mbInfo]: dart.fieldType(dart.nullable(core.List$(vp8_types.VP8MB))),
    [__VP8__mbInfo_isSet]: dart.fieldType(core.bool),
    [__VP8__fInfo]: dart.fieldType(dart.nullable(core.List$(dart.nullable(vp8_types.VP8FInfo)))),
    [__VP8__fInfo_isSet]: dart.fieldType(core.bool),
    [__VP8__yuvBlock]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [__VP8__yuvBlock_isSet]: dart.fieldType(core.bool),
    [__VP8__cacheY]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__cacheY_isSet]: dart.fieldType(core.bool),
    [__VP8__cacheU]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__cacheU_isSet]: dart.fieldType(core.bool),
    [__VP8__cacheV]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__cacheV_isSet]: dart.fieldType(core.bool),
    [_cacheYStride]: dart.fieldType(dart.nullable(core.int)),
    [_cacheUVStride]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__tmpY]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__tmpY_isSet]: dart.fieldType(core.bool),
    [__VP8__tmpU]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__tmpU_isSet]: dart.fieldType(core.bool),
    [__VP8__tmpV]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__tmpV_isSet]: dart.fieldType(core.bool),
    [__VP8__y]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__y_isSet]: dart.fieldType(core.bool),
    [__VP8__u]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__u_isSet]: dart.fieldType(core.bool),
    [__VP8__v]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__v_isSet]: dart.fieldType(core.bool),
    [_a]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [_mbX]: dart.fieldType(core.int),
    [_mbY]: dart.fieldType(core.int),
    [__VP8__mbData]: dart.fieldType(dart.nullable(core.List$(vp8_types.VP8MBData))),
    [__VP8__mbData_isSet]: dart.fieldType(core.bool),
    [_filterType]: dart.fieldType(dart.nullable(core.int)),
    [__VP8__fStrengths]: dart.fieldType(dart.nullable(core.List$(core.List$(vp8_types.VP8FInfo)))),
    [__VP8__fStrengths_isSet]: dart.fieldType(core.bool),
    [__VP8__alpha]: dart.fieldType(dart.nullable(webp_alpha.WebPAlpha)),
    [__VP8__alpha_isSet]: dart.fieldType(core.bool),
    [_alphaData]: dart.fieldType(dart.nullable(input_buffer.InputBuffer)),
    [__VP8__alphaPlane]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    [__VP8__alphaPlane_isSet]: dart.fieldType(core.bool)
  }));
  dart.defineLazy(vp8.VP8, {
    /*vp8.VP8.kScan*/get kScan() {
      return C[28] || CT.C28;
    },
    /*vp8.VP8.kFilterExtraRows*/get kFilterExtraRows() {
      return C[29] || CT.C29;
    },
    /*vp8.VP8.kBands*/get kBands() {
      return C[30] || CT.C30;
    },
    /*vp8.VP8.kCat3*/get kCat3() {
      return C[31] || CT.C31;
    },
    /*vp8.VP8.kCat4*/get kCat4() {
      return C[32] || CT.C32;
    },
    /*vp8.VP8.kCat5*/get kCat5() {
      return C[33] || CT.C33;
    },
    /*vp8.VP8.kCat6*/get kCat6() {
      return C[34] || CT.C34;
    },
    /*vp8.VP8.kCat3456*/get kCat3456() {
      return C[35] || CT.C35;
    },
    /*vp8.VP8.kZigzag*/get kZigzag() {
      return C[36] || CT.C36;
    },
    /*vp8.VP8.kYModesIntra4*/get kYModesIntra4() {
      return C[37] || CT.C37;
    },
    /*vp8.VP8.kBModesProba*/get kBModesProba() {
      return C[38] || CT.C38;
    },
    /*vp8.VP8.COEFFS_PROBA_0*/get COEFFS_PROBA_0() {
      return C[149] || CT.C149;
    },
    /*vp8.VP8.COEFFS_UPDATE_PROBA*/get COEFFS_UPDATE_PROBA() {
      return C[275] || CT.C275;
    },
    /*vp8.VP8.DC_TABLE*/get DC_TABLE() {
      return C[361] || CT.C361;
    },
    /*vp8.VP8.AC_TABLE*/get AC_TABLE() {
      return C[362] || CT.C362;
    },
    /*vp8.VP8.FILTER_EXTRA_ROWS*/get FILTER_EXTRA_ROWS() {
      return C[29] || CT.C29;
    },
    /*vp8.VP8.VP8_SIGNATURE*/get VP8_SIGNATURE() {
      return 2752925;
    },
    /*vp8.VP8.MB_FEATURE_TREE_PROBS*/get MB_FEATURE_TREE_PROBS() {
      return 3;
    },
    /*vp8.VP8.NUM_MB_SEGMENTS*/get NUM_MB_SEGMENTS() {
      return 4;
    },
    /*vp8.VP8.NUM_REF_LF_DELTAS*/get NUM_REF_LF_DELTAS() {
      return 4;
    },
    /*vp8.VP8.NUM_MODE_LF_DELTAS*/get NUM_MODE_LF_DELTAS() {
      return 4;
    },
    /*vp8.VP8.MAX_NUM_PARTITIONS*/get MAX_NUM_PARTITIONS() {
      return 8;
    },
    /*vp8.VP8.B_DC_PRED*/get B_DC_PRED() {
      return 0;
    },
    /*vp8.VP8.B_TM_PRED*/get B_TM_PRED() {
      return 1;
    },
    /*vp8.VP8.B_VE_PRED*/get B_VE_PRED() {
      return 2;
    },
    /*vp8.VP8.B_HE_PRED*/get B_HE_PRED() {
      return 3;
    },
    /*vp8.VP8.B_RD_PRED*/get B_RD_PRED() {
      return 4;
    },
    /*vp8.VP8.B_VR_PRED*/get B_VR_PRED() {
      return 5;
    },
    /*vp8.VP8.B_LD_PRED*/get B_LD_PRED() {
      return 6;
    },
    /*vp8.VP8.B_VL_PRED*/get B_VL_PRED() {
      return 7;
    },
    /*vp8.VP8.B_HD_PRED*/get B_HD_PRED() {
      return 8;
    },
    /*vp8.VP8.B_HU_PRED*/get B_HU_PRED() {
      return 9;
    },
    /*vp8.VP8.NUM_BMODES*/get NUM_BMODES() {
      return 10;
    },
    /*vp8.VP8.DC_PRED*/get DC_PRED() {
      return 0;
    },
    /*vp8.VP8.V_PRED*/get V_PRED() {
      return 2;
    },
    /*vp8.VP8.H_PRED*/get H_PRED() {
      return 3;
    },
    /*vp8.VP8.TM_PRED*/get TM_PRED() {
      return 1;
    },
    /*vp8.VP8.B_PRED*/get B_PRED() {
      return 10;
    },
    /*vp8.VP8.B_DC_PRED_NOTOP*/get B_DC_PRED_NOTOP() {
      return 4;
    },
    /*vp8.VP8.B_DC_PRED_NOLEFT*/get B_DC_PRED_NOLEFT() {
      return 5;
    },
    /*vp8.VP8.B_DC_PRED_NOTOPLEFT*/get B_DC_PRED_NOTOPLEFT() {
      return 6;
    },
    /*vp8.VP8.NUM_B_DC_MODES*/get NUM_B_DC_MODES() {
      return 7;
    },
    /*vp8.VP8.NUM_TYPES*/get NUM_TYPES() {
      return 4;
    },
    /*vp8.VP8.NUM_BANDS*/get NUM_BANDS() {
      return 8;
    },
    /*vp8.VP8.NUM_CTX*/get NUM_CTX() {
      return 3;
    },
    /*vp8.VP8.NUM_PROBAS*/get NUM_PROBAS() {
      return 11;
    },
    /*vp8.VP8.BPS*/get BPS() {
      return 32;
    },
    /*vp8.VP8.YUV_SIZE*/get YUV_SIZE() {
      return 832;
    },
    /*vp8.VP8.Y_SIZE*/get Y_SIZE() {
      return 544;
    },
    /*vp8.VP8.Y_OFF*/get Y_OFF() {
      return 40;
    },
    /*vp8.VP8.U_OFF*/get U_OFF() {
      return 584;
    },
    /*vp8.VP8.V_OFF*/get V_OFF() {
      return 600;
    },
    /*vp8.VP8.YUV_FIX*/get YUV_FIX() {
      return 16;
    },
    /*vp8.VP8.YUV_HALF*/get YUV_HALF() {
      return 32768;
    },
    /*vp8.VP8.YUV_MASK*/get YUV_MASK() {
      return 16777215;
    },
    /*vp8.VP8.YUV_RANGE_MIN*/get YUV_RANGE_MIN() {
      return -227;
    },
    /*vp8.VP8.YUV_RANGE_MAX*/get YUV_RANGE_MAX() {
      return 482;
    },
    /*vp8.VP8.YUV_FIX2*/get YUV_FIX2() {
      return 14;
    },
    /*vp8.VP8.YUV_HALF2*/get YUV_HALF2() {
      return 8192;
    },
    /*vp8.VP8.YUV_MASK2*/get YUV_MASK2() {
      return 4194303;
    },
    /*vp8.VP8.XOR_YUV_MASK2*/get XOR_YUV_MASK2() {
      return -4194304;
    },
    /*vp8.VP8.kYScale*/get kYScale() {
      return 19077;
    },
    /*vp8.VP8.kVToR*/get kVToR() {
      return 26149;
    },
    /*vp8.VP8.kUToG*/get kUToG() {
      return 6419;
    },
    /*vp8.VP8.kVToG*/get kVToG() {
      return 13320;
    },
    /*vp8.VP8.kUToB*/get kUToB() {
      return 33050;
    },
    /*vp8.VP8.kRCst*/get kRCst() {
      return -3644112;
    },
    /*vp8.VP8.kGCst*/get kGCst() {
      return 2229552;
    },
    /*vp8.VP8.kBCst*/get kBCst() {
      return -4527440;
    }
  }, false);
  dart.trackLibraries("packages/image/src/formats/webp/vp8_types.dart", {
    "package:image/src/formats/webp/vp8_types.dart": vp8_types,
    "package:image/src/formats/webp/vp8_filter.dart": vp8_filter,
    "package:image/src/formats/webp/vp8.dart": vp8
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["vp8_types.dart","vp8_filter.dart","vp8.dart"],"names":[],"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","file":"../../../../../../../../../../../../D:/packages/image/src/formats/webp/vp8_types.dart.lib.js"}');
  // Exports:
  return {
    src__formats__webp__vp8_types: vp8_types,
    src__formats__webp__vp8_filter: vp8_filter,
    src__formats__webp__vp8: vp8
  };
}));

//# sourceMappingURL=vp8_types.dart.lib.js.map
